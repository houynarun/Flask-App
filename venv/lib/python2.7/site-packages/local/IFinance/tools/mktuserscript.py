from app.mktcore.imports 			import *
import app.tools.mktdate 			as mktdate
import app.tools.mktaccounting 		as mktaccounting

def getDictionaryAmount(item, Dict, Field, ExchangeRate = 1):
	if getattr(item, Field) in Dict:
		CurrentAmount = Dict[getattr(item, Field)]
		Amount = CurrentAmount + (float(getattr(item, 'SumOutAmount')) * ExchangeRate)
	else:
		Amount = float(getattr(item, 'SumOutAmount')) * ExchangeRate
	return Amount

def getDictionaryNumber(item, Dict, Field):
	if getattr(item, Field) in Dict:
		CurrentNumber = Dict[getattr(item, Field)]
		Number = CurrentNumber + getattr(item, 'NumberOfLoan')
	else:
		Number = getattr(item, 'NumberOfLoan')
	return Number

def convertToBaseCurrency(QueryObj, Field):
	"""
		QueryObj
		Field:	It must be field with amount like Balance or Amount
	"""
	Amount = 0
	ReportingRateObj 	= 	mktaccounting.getReportingRateObj()
	for item in QueryObj:
		ExchangeRate 	= float(ReportingRateObj[item.Currency])
		Amount += float(getattr(item, Field)) * ExchangeRate
	return Amount


def formatStartEndDate(Start, End):
	'''
		Format StartMonth and EndMonth
		From Request Start and End "mm/yyyy"
		Format StartMonth and EndMonth to "yyyy-mm-dd"
	'''
	try:
		StartMonth 	= Start.split('-')
		EndMonth	= End.split('-')
		StartDate 	= "%s-%s-%s" %(StartMonth[0], StartMonth[1], mktdate.getLastDayOfMonth(int(StartMonth[0]), int(StartMonth[1]) ) )
		EndDate 	= "%s-%s-%s" %(EndMonth[0], EndMonth[1], mktdate.getLastDayOfMonth(int(EndMonth[0]), int(EndMonth[1]) ) )
	except Exception as e:
		raise e
	return StartDate, EndDate

def insertDataToTable(DictResult, Table, Branch):
	''' Use this function in BatchJob to insert data to table every end of month '''
	BankDate 		= 	mktdate.getBankDate()
	ID = '%s%s'%(Branch, str(BankDate))
	Portfolio = Table(
		Branch 		= Branch,
		Status		= "AUTH",
		Curr 		= "0",
		Inputter 	= "System",
		Createdon 	= mktdate.getDateTimeNow(),
		Authorizer 	= "System",
		Authorizeon = mktdate.getDateTimeNow(),
		ID 			= ID,
		BankDate 	= str(BankDate),
		Data 		= str(DictResult)
		)
	try:
		if Table.query.get(ID):
			db.session.merge(Portfolio)
		else:
			db.session.add(Portfolio)
	except Exception as e:
		raise e
		db.session.rollback()
	db.session.commit()
	return None
	'''End insertng'''