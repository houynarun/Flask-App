from app.mktcore.wtfimports 	import *
from sqlalchemy 				import *
from app.VB.models 				import *
from app.VB.groups 				import *

from local.Mifida.tools.mktroute import *

class FRM_GROUP_EX(FRM_GROUP):
	VBDescription 		= TextField('Village Bank/Centre Description')
	Currency 			= QuerySelectField(requiredlabel(getLanguage("Currency"), "*"),
						query_factory=loadCurrency,
						get_label=u'ID',
						default=lambda:loadCurrency('MMK'),
						validators=[validators.Required()])
	LoanProduct 		= QuerySelectField(requiredlabel(getLanguage("Loan Product"), "*"),
						query_factory=loadLoanProduct,
						get_label=u'Description',
						allow_blank=True,
						blank_text=u'--%s--' %getLanguage("Choose Loan Product"),
						validators=[validators.Required()]
					)
	LoanPurpose 		= QuerySelectField(requiredlabel(getLanguage("Loan Purpose"), "*"),
						query_factory=loadLoanPurpose,
						get_label=u'Description',
						allow_blank=True,
						blank_text=u'--%s--' %getLanguage("Choose Loan Purpose"),
						validators=[validators.Required()]
					)
	InterestRate 		= TextField(requiredlabel("Interest Rate", "*"), [validators.Required()])
	FreqType 			= SelectField(requiredlabel(getLanguage("Frequency Type"), "*"),
						choices=[('', '--%s--' %getLanguage("None")),
								 ('1', '1. %s' %getLanguage("Monthly")), 
								 ('2', '2. %s' %getLanguage("Weekly")),
								 ('3', '3. %s' % "Daily")],
						coerce=str,
						validators=[validators.Required()],
						default=''
					)
	Frequency 			= TextField(requiredlabel("Frequency", "*"), [validators.Required()], default=1)
	Term 				= TextField(requiredlabel("Term", "*"), [validators.Required()])
	Installment 		= TextField(requiredlabel("Installment", "*"), [validators.Required()])
	ApprovedAmount 		= TextField("Approved Amount")
	OfficerID 			= QuerySelectField(requiredlabel('Loan Officer','*'),
							query_factory=loadOfficer,
							get_label=lambda a: a.ID + " - " + a.LastName + " " +a.FirstName,
							allow_blank=True,
							blank_text=u'--None--',
							validators=[validators.Required()])

	CompulsorySaving 	= SelectField(requiredlabel("Compulsory Saving", "*"),
						choices=[('N', 'No'), 
								 ('Y', 'Yes')],
						coerce=str,
						validators=[validators.Required()],
						default='Y',
						description="1-%s" %"Compulsory Saving"
					)
	RateFixed 			= SelectField("Rate/Fix",
						choices=[('R', 'Rate'),
								 ('F', 'Fix')],
						coerce=str,
						default='R',
						description="1-%s" %"Compulsory Saving"
					)
	CompulsoryRate 		= TextField(requiredlabel("Calculation Rate", "*"),
						[validators.Required()], default = '4',
						description="1-%s" %"Compulsory Saving"
					)
	TemplateBase 		= QuerySelectField('Template Base',
							query_factory=loadTemplateBase,
							get_label=lambda a: a.ID + " - " + a.Description,
							allow_blank=True,
							blank_text=u'--None--')

	@staticmethod
	def hotField():
		base 			= super(FRM_GROUP_EX, FRM_GROUP_EX).hotField()
		hotfield 		= []

		fielddisplay 	= "$('#VBDescription').val(data.Description);"
		varname 		= "VBID:$('#VBID').val()"
		fun 			= ["VBID", varname, fielddisplay, "/Morakot/VBDescription", "change"]
		hotfield.append(fun)

		fielddisplay 	= "$('#Term').val(data.Term);"
		fielddisplay 	+= "$('#FreqType').select2('data', {'id':data.FreqType,'text':data.FreqTypeDes});"
		varname 		= "LoanProduct:$('#LoanProduct').val()"
		fun 			= ["LoanProduct", varname, fielddisplay, "/Morakot/TermFrequencyType", "change"]
		hotfield.append(fun)

		fielddisplay 	= "$('#TemplateBase').select2('data', {'id':data.resultDict.ID,'text':data.resultDict.Description});"
		varname 		= "LoanProduct:$('#LoanProduct').val(), ApprovedAmount:$('#ApprovedAmount').val(), FreqType:$('#FreqType').val(), Frequency:$('#Frequency').val(), Term:$('#Term').val()"
		fun 			= ["ApprovedAmount", varname, fielddisplay, "/Morakot/getTemplateBase", "blur"]
		hotfield.append(fun)

		fielddisplay 	= "$('#TemplateBase').select2('data', {'id':data.resultDict.ID,'text':data.resultDict.Description});"
		varname 		= "LoanProduct:$('#LoanProduct').val(), ApprovedAmount:$('#ApprovedAmount').val(), FreqType:$('#FreqType').val(), Frequency:$('#Frequency').val(), Term:$('#Term').val()"
		fun 			= ["LoanProduct", varname, fielddisplay, "/Morakot/getTemplateBase", "change"]
		hotfield.append(fun)

		hotfield.extend(base)
		return hotfield

	@staticmethod
	def hotSelectField():
		hotfield = []

		fielddisplay 	= "TemplateBase"
		varname 		= "LoanProduct:$('#LoanProduct').val()"
		fun 			= ["LoanProduct", varname, fielddisplay, "/Morakot/getTemplateBasefromProduct", "click"]
		hotfield.append(fun)

		return hotfield
	@staticmethod
	def listField():
		Branch 		= mktuser.getCurrentBranch()
		Fields = ["ID", "GroupName", "VBID", "VBDescription","Installment","Currency","LoanProduct","InterestRate","Frequency","Term","ApprovedAmount","Branch"]
		# return Fields
		return Fields,["Branch*EQ*"+Branch]

	@staticmethod
	def setVisible():
		ListField = [("VBDescription")]
		return ListField