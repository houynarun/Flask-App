from app.mktcore.wtfimports 	import *
from sqlalchemy 				import *
from app.LoanProduct.models 	import *
from app.LoanProduct.forms 		import *
from app.TemplateBase.models 	import *

def loadTemplateBase():  #define function 
	TBList = [('', '--None--')]
	TBObj = MKT_TEMPLATE_BASE.query.all()
	if TBObj:
		for row in TBObj:
			TBList.append((row.ID,row.Description))
	return TBList

class FRM_LOAN_PRODUCT_EX(FRM_LOAN_PRODUCT):
	RepMode = SelectField(requiredlabel('Repayment Mode', '*'),
					choices=[('', '--None--'),
							 ('1', '1. Declining'),
							 ('2', '2. Annuity'),
							 ('3', '3. Flat'),
							 ('4', '4. IRR'),
							 ('6', '6. Template Base')],
					coerce=str,
					validators=[validators.Required()])
	
	BaseDateKey = SelectField(requiredlabel('Base Date Key', '*'),
					choices=[('', '--None--'),
							 ('1', '1. Value Date'),
							 ('2', '2. Previous Date'),
							 ('3', '3. First Date')],
					coerce=str,
					validators=[validators.Required()])

	FWDBWDKey = SelectField(requiredlabel('Forward/Backward Key', '*'),
					choices=[('', '--None--'),
							 ('1', '1. Backward within month'),
							 ('2', '2. Forward within month'),
							 ('3', '3. Backward'),
							 ('4', '4. Forward')],
					coerce=str,
					validators=[validators.Required()])

	IntReceivableCate 	= 	QuerySelectField(requiredlabel('Accrued Interest Receivable Category', '*'),
		                        query_factory=loadCategory,
		                        get_label=lambda a: a.ID + " - " + a.Description,
		                        allow_blank=True,
		                        blank_text=u'--None--',
		                        validators=[validators.Required()]
	                        )

	IntIncomeCate 		= 	QuerySelectField(requiredlabel('Interest Income Category', '*'),
		                        query_factory=loadCategory,
		                        get_label=lambda a: a.ID + " - " + a.Description,
		                        allow_blank=True,
		                        blank_text=u'--None--',
		                        validators=[validators.Required()]
	                        )

	ReduceAmount 		=	TextField("Minimum Reduce Perc") # Percentage of reduce amount on loan amendment

	FreqType 		= 	SelectField(requiredlabel(getLanguage("Frequency Type"), "*"),
							choices=[('', '--None--'), 
									 ('1', '1. %s' %getLanguage('Monthly')), 
									 ('2', '2. %s' %getLanguage("Weekly")),
									 ('3', '3. %s' % "Daily")],
							coerce=str,
							validators=[validators.Required()]
						)

	Term 			= 	TextField(requiredlabel("%s (%s)" %(getLanguage("Term"), getLanguage("Month")), "*"), [validators.Required()])
	TemplateBase 	= 	MKTSelect2MultipleField('Template Base', default = '',coerce=str)

	@staticmethod
	def hotField():
		base 			= super(FRM_LOAN_PRODUCT_EX, FRM_LOAN_PRODUCT_EX).hotField()
		hotfield 		= []

		fielddisplay 	= "$('#Term').val(data.Term);"
		varname 		= "LoanProduct:$('#LoanProduct').val()"
		fun 			= ["LoanProduct", varname, fielddisplay, "/Morakot/TermFrequencyType", "change"]
		hotfield.append(fun)

		hotfield.extend(base)
		return hotfield

	def __init__(self, *args, **kwargs):
		super(FRM_LOAN_PRODUCT_EX, self).__init__(*args, **kwargs)
		self.TemplateBase.choices=loadTemplateBase()