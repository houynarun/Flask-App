
from app.mktcore.wtfimports 		import *
from app.LoanApplication.forms 		import *
from app.Collateral.models 			import *

def toBaseCurrency(Amount=0, Currency=""):
    ReportingRateObj = mktaccounting.getReportingRateObj()
    ExchangeRate      = float(ReportingRateObj.get(Currency,0))

    Amount = Amount * ExchangeRate
    return Amount
class FRM_LOAN_APPLICATION_EX(FRM_LOAN_APPLICATION):
	CheckList = QuerySelectField(getLanguage("Check List Item"),
					query_factory=loadCheckList,
					get_label=u'Description',
					allow_blank=True,
					blank_text=u'--%s--' %getLanguage("Choose Check List"),
					description="1-%s" %getLanguage("Check List Items")
				)

	YesNo = SelectField("%s/%s" %(getLanguage("Yes"), getLanguage("No")),
					choices=[('N', getLanguage('No')), ('Y', getLanguage('Yes'))],
					coerce=str,
					description="1-%s" %getLanguage("Check List Items")
				)
	YesDate = DateField(getLanguage("Yes Date"), [validators.Optional()], description="1-%s" %getLanguage("Check List Items"))

	Guarantor 		= 	QuerySelectField(getLanguage("Guarantor"),
							query_factory=loadGuarantor,
							get_label=lambda a: a.ID + " - " + a.LastNameEn + " " +a.FirstNameEn,
							allow_blank=True,
							blank_text=u'--%s--' %getLanguage("None"),
							description="3-%s" %getLanguage("Guarantor")
						)
	GTRelationIndicator 		= 	QuerySelectField("Relation Indicator",
							query_factory=loadRelationIndicators,
							get_label=u'Description',
							allow_blank=True,
							blank_text=u'--%s--' %getLanguage("None"),
							description="3-%s" %getLanguage("Guarantor")
						)
	Type 				= SelectField("Type",
								choices=[('G', 'Guarantor'), ('R', 'Referrer'), ('S', 'Successor')],
								coerce=str,
								default='G',
								description="3-%s" %getLanguage("Guarantor")
							)

	Collateral 		= 	QuerySelectField(getLanguage("Collateral"),
							query_factory=loadCollateral,
							get_label=u'Description',
							allow_blank=True,
							blank_text=u'--%s--' %getLanguage("None"),
							description="4-%s" %getLanguage("Collateral")
						)
	
	CoBorrowerID 		= 	QuerySelectField(getLanguage("Co-Borrower"),
							query_factory=loadCoBorrower,
							get_label=lambda a: a.ID + " - " + a.LastNameEn + " " +a.FirstNameEn,
							allow_blank=True,
							blank_text=u'--%s--' %getLanguage("None"),
							description="2-%s" %getLanguage("Co-Borrower")
						)
	# CoBorrowerName 		= 	TextField("Co-Borrower Name", description="2-%s" %getLanguage("Co-Borrower"))

	RelationIndicator 		= 	QuerySelectField("Relation Indicator",
							query_factory=loadRelationIndicators,
							get_label=u'Description',
							allow_blank=True,
							blank_text=u'--%s--' %getLanguage("None"),
							description="2-%s" %getLanguage("Co-Borrower")
						)

	@staticmethod
	def IsAcceptOverride():
		Override, Msg 	   = super(FRM_LOAN_APPLICATION_EX, FRM_LOAN_APPLICATION_EX).IsAcceptOverride()
		Override 		   = False
		Msg				   = ""
		MaxLoanAmount 	   = 0
		TotalLoanAmount    = 0
		SumLoanOutStanding = 0
		Collateral 	 = request.form['Collateral']
		LoanAmount   = request.form['AppliedAmount']
		Customer     = request.form['LNCustomerID']
		Currency     = request.form['Currency']
		AccSetting 	 = 	mktsetting.getAccSetting()
		BaseCurrency = AccSetting.BaseCurrency
		LoanAmount 	 = toBaseCurrency(float(LoanAmount),Currency)

		CollateralDeObj = MKT_COLLATERAL_DE.query.filter(MKT_COLLATERAL_DE.CollateralID == Collateral).all()
		if CollateralDeObj:
			for col in CollateralDeObj:
				# Sum collateral detail
				MaxLoanAmount += (float(col.LTV)/100) * toBaseCurrency(float(col.ValuationPrice),col.Currency)
		LcObj = db.session.query(MKT_LOAN_CONTRACT.OutstandingAmount,MKT_LOAN_CONTRACT.Currency).\
								join(MKT_LOAN_COLLATERAL,MKT_LOAN_CONTRACT.ID == MKT_LOAN_COLLATERAL.ID).\
								filter(MKT_LOAN_COLLATERAL.Collateral == Collateral).all()
		if LcObj:
			for lc in LcObj:
				SumLoanOutStanding += toBaseCurrency(float(lc.OutstandingAmount),lc.Currency)
		TotalLoanAmount = toBaseCurrency(float(LoanAmount),BaseCurrency) + float(SumLoanOutStanding)
		if TotalLoanAmount > MaxLoanAmount:
			Msg = "Loan amount %s and outstanding amount %s are over the collateral amount %s. Do you want to proceed?"%(mktmoney.toMoney(float(LoanAmount), mktmoney.getCurrencyObj(BaseCurrency), 2),\
																							  							mktmoney.toMoney(float(SumLoanOutStanding), mktmoney.getCurrencyObj(BaseCurrency), 2),\
																							  							mktmoney.toMoney(float(MaxLoanAmount), mktmoney.getCurrencyObj(BaseCurrency), 2))
																							  								  
			Override = True
			return Override,Msg

		return Override,Msg

	@staticmethod
	def IsAcceptOverrideINAU():
		Override, Msg 	   = super(FRM_LOAN_APPLICATION_EX, FRM_LOAN_APPLICATION_EX).IsAcceptOverrideINAU()
		Override 		   = False
		Msg				   = ""
		Collateral 		   = ""
		Customer 		   = ""
		Currency 		   = ""
		MaxLoanAmount 	   = 0
		LoanAmount 		   = 0
		TotalLoanAmount    = 0
		SumLoanOutStanding = 0
		ID 				   = g.formID
		AccSetting 	 	   = mktsetting.getAccSetting()
		BaseCurrency 	   = AccSetting.BaseCurrency
		LoanAmount 	 	   = toBaseCurrency(float(LoanAmount),Currency)

		LoanCollateralObj  = MKT_LOAN_COLLATERAL_INAU.query.filter(MKT_LOAN_COLLATERAL_INAU.ID == ID).first()
		if LoanCollateralObj:
			Collateral = LoanCollateralObj.Collateral
		LoanAppObj  = MKT_LOAN_APPLICATION_INAU.query.get(ID)
		if LoanAppObj:
			LoanAmount = LoanAppObj.AppliedAmount
			Customer   = LoanAppObj.LNCustomerID
			Currency   = LoanAppObj.Currency
			LoanAmount = toBaseCurrency(float(LoanAmount),Currency)

			CollateralDeObj = MKT_COLLATERAL_DE.query.filter(MKT_COLLATERAL_DE.CollateralID == Collateral).all()
			if CollateralDeObj:
				for col in CollateralDeObj:
					# Sum collateral detail
					MaxLoanAmount += (float(col.LTV)/100) * toBaseCurrency(float(col.ValuationPrice),col.Currency)
			LcObj = db.session.query(MKT_LOAN_CONTRACT.OutstandingAmount,MKT_LOAN_CONTRACT.Currency).\
									join(MKT_LOAN_COLLATERAL,MKT_LOAN_CONTRACT.ID == MKT_LOAN_COLLATERAL.ID).\
									filter(MKT_LOAN_COLLATERAL.Collateral == Collateral).all()
			if LcObj:
				for lc in LcObj:
					SumLoanOutStanding += toBaseCurrency(float(lc.OutstandingAmount),lc.Currency)
			TotalLoanAmount = toBaseCurrency(float(LoanAmount),BaseCurrency) + float(SumLoanOutStanding)

			if TotalLoanAmount > MaxLoanAmount:
				Msg = "Loan amount %s and outstanding amount %s are over the collateral amount %s. Do you want to proceed?"%(mktmoney.toMoney(float(LoanAmount), mktmoney.getCurrencyObj(BaseCurrency), 2),\
																							  							mktmoney.toMoney(float(SumLoanOutStanding), mktmoney.getCurrencyObj(BaseCurrency), 2),\
																							  							mktmoney.toMoney(float(MaxLoanAmount), mktmoney.getCurrencyObj(BaseCurrency), 2))
				Override = True
				return Override,Msg

		return Override,Msg