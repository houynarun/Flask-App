from app.mktcore.wtfimports 	import *
from sqlalchemy 				import *

from app.Customer.models 		import *
from app.Customer.forms 		import *

class FRM_CUSTOMER_EX(FRM_CUSTOMER):
	CusType  		= SelectField(requiredlabel(('Customer Type'),"*"),
							choices=[('IN', 'Individual'),('NIN', 'Non-Individual')],
							coerce=str,
							validators=[validators.Required()],
							default="IN")
	VBID 			= 	HiddenField("Village Bank")
	GroupID 		= 	QuerySelectField('Group',
							query_factory=loadGroupID,
							get_label=lambda a: a.ID + " - " + a.GroupName,
							allow_blank=True,
							blank_text=u'--None--',
							validators=[custom_GroupMember])

	PotentialCustomer 	= 	HiddenField("Potential Customer")
	FirstNameEn 	=	TextField(requiredlabel("%s (%s)" %(getLanguage("First Name"), getLanguage("English")),"*"),[validators.Required()])
	LastNameEn 		=	TextField(requiredlabel("%s (%s)" %(getLanguage("Last Name"), getLanguage("English")),"*"),[validators.Required()])
	FirstNameKh 	=	TextField("%s (%s)" %(getLanguage("First Name"), "Local"))
	LastNameKh 		=	TextField("%s (%s)" %(getLanguage("Last Name"), "Local"))

	Salutation 		=	SelectField(getLanguage("Salutation"),
							 choices=[('Mrs', 'Mrs'),('Mr', 'Mr'),('Miss','Miss')],
							 coerce=str)
	Gender 			=	SelectField(requiredlabel(getLanguage("Gender"),"*"),
							 choices=[('Female', 'Female'),('Male', 'Male'),('Other','Other')],
							 coerce=str,
							 validators=[validators.Required()])
	DateOfBirth 	=	DateField(requiredlabel(getLanguage("Date of Birth"), "*"),
							format='%Y-%m-%d',
							validators=[custom_DateOfBirth])

	CountryOfBirth 	=	QuerySelectField(getLanguage('Country of Birth'),query_factory=loadCountry, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text='',
							 default=lambda:loadCountry('KH'),
							 validators=[validators.Required()])
	Nationality		=   QuerySelectField(getLanguage('Nationality'),query_factory=loadCountry, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text='',
							 default=lambda:loadCountry('KH'),
							 validators=[validators.Required()])
	ProvinceOfBirth =	QuerySelectField('Province of Birth',query_factory=loadProvinceOfBirth, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose Province of Birth--')
	DistrictOfBirth =	QuerySelectField(getLanguage('District of Birth'),query_factory=loadDistrictOfBirth, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose District of Birth--')
	CommuneOfBirth 	=	QuerySelectField('Commune of Birth',query_factory=loadCommuneOfBirth, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose Commune of Birth--')
	AsGurantor 		=	SelectField(requiredlabel(getLanguage('As Guarantor'),"*"),
							 choices=[('N', 'No'),('Y', 'Yes')],
							 coerce=str,
							 validators=[validators.Required()])
	
	MaritalStatus 	=	SelectField(requiredlabel(getLanguage('Marital Status'),'*'),
							 choices=[('1', 'Married'),
									('2', 'Single'),
									('3','Divorced'),
									('4','Widow'),
									('5','Widower'),
									('6','Separated'),
									('7','Defacto'),
									('8','Unknown')],
							 coerce=str,
							 validators=[validators.Required(),validators.Length(max=20)])
	Resident 		=	SelectField(getLanguage('Resident'),
							 choices=[('Y', 'Yes'),('N', 'No')],
							 coerce=str,
							 validators=[validators.Required()])

	# --Family Info --
	HouseOwnership 		=	SelectField('House Ownership',
								choices=[('', '--None--'),
										('1', 'Owner'),
										('2', 'Family'),
										('3', 'Sibling'),
										('4', 'Others Relative'),
										('5', 'Friend'),
										('6', 'Rental'),
										('7', 'Other')
										],
								coerce=str
							)

	NumberOfMember 		=	TextField('# Family Member',
								default='0',
								validators=[validators.Length(max=3)])
	ActiveMember 		=	TextField('# Income Generator',
								default='0',
								validators=[validators.Length(max=3)])

	Officer         = RemoteTextField(requiredlabel("Loan Officer", "*"),
								dicRemote={'url':'/Morakot/SearchOfficer'},
								validators=[validators.Required()]
						)
	EducationLevel 	=	QuerySelectField('Education Level',
								query_factory=loadEducationLevel, 
								get_label='Description',
								allow_blank=True,
								blank_text=u'--None--'
							)
	Officer 		= RemoteTextField(requiredlabel(getLanguage("Officer"), "*"),
								dicRemote={'url':'/Morakot/SearchOfficer'},
								validators=[validators.Required()]
						)
	
	# --Contact and Address--
	Province 		= 	QuerySelectField(requiredlabel('Province','*'),query_factory=loadProvince, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose Province--',
							 validators=[validators.Required()],
							 description="1-%s" %getLanguage('Current Address and Contact'))
	District 		= 	QuerySelectField(requiredlabel(getLanguage('District'),'*'),query_factory=loadDistrict, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose District--',
							 validators=[validators.Required()],
							 description="1-%s" %getLanguage('Current Address and Contact'))
	Commune 		=	QuerySelectField(requiredlabel('Commune','*'),query_factory=loadCommune, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose Commune--',
							 validators=[validators.Required()],
							 description="1-%s" %getLanguage('Current Address and Contact'))

	Village 		=	QuerySelectField(requiredlabel('Village','*'),
							 query_factory=loadVillage, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose Village--',
							 validators=[validators.Required()],
							 description="1-%s" %getLanguage('Current Address and Contact'))
	City 			=	TextField("City",description="1-%s" %getLanguage('Current Address and Contact'))
	HouseNo 		=	TextField("House No",
							description="1-%s" %getLanguage('Current Address and Contact'),
							validators=[validators.Length(max=25)])
	Street 		   =	TextField('Street',
							description="1-%s" %getLanguage('Current Address and Contact'),
							validators=[validators.Length(max=40)])
	Mobile1 		=	TextField(requiredlabel(getLanguage("Mobile Phone 1"),'*'),
							 validators=[validators.Required()],
							 description="1-%s" %getLanguage('Current Address and Contact'))
	Mobile2 		=	TextField(getLanguage("Mobile Phone 2"), description="1-%s" %getLanguage('Current Address and Contact'))
	Mobile3 		=	TextField("Mobile Phone 3", description="1-%s" %getLanguage('Current Address and Contact'))
	
	Email 			= 	TextField(getLanguage("Email"), [validators.Optional(),validators.Email(message=u'Invalid email address.')],
							 description="1-%s" %getLanguage('Current Address and Contact'))

	# --Spouse Info--
	SpoFirstNameEn 	=	TextField("%s (%s)" %(getLanguage("First Name"), getLanguage("English")),description="2-%s" %'Spouse Info')
	SpoLastNameEn 	=	TextField("%s (%s)" %(getLanguage("Last Name"), getLanguage("English")),description="2-%s" %'Spouse Info')
	SpoFirstNameKh 	=	TextField("%s (%s)" %(getLanguage("First Name"), "Local"),description="2-%s" %'Spouse Info')
	SpoLastNameKh 	=	TextField("%s (%s)" %(getLanguage("Last Name"), "Local"),description="2-%s" %'Spouse Info')
	SpoDateOfBirth 	=	DateField("Spouse Date of Birth",
							 description="2-%s" %'Spouse Info',
							 validators=[custom_SpoDateOfBirth]
							)
	SpouseNationality		=   QuerySelectField('Spouse Nationality',
							 query_factory=loadCountry, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text='',
							 default=lambda:loadCountry('KH'),
							 description="2-%s" %'Spouse Info')

	SpoOccupation 	=	QuerySelectField(getLanguage('Occupation'),query_factory=loadPosition, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text='--None--',
							 description="2-%s" %'Spouse Info'
							)
	SpoOccupationRemark =	TextAreaField("Occupation Remark",
							 description="2-%s" %'Spouse Info')
	SpouseIDType 		=	QuerySelectField('ID Type of Spouse',
								query_factory=loadIdType, 
								get_label='Description',
								allow_blank=True,
								blank_text='--None--',
								description="2-Spouse Info"
							)
	SpoNationalID 			=	TextField("ID Number",description="2-%s" %'Spouse Info')
	SpouseIDIssueDate		=	DateField("Issue Date Of ID Type", validators=[custom_SpouseIDIssueDate], description="2-Spouse Info")

	# --Employment Detail--
	EmployerType 	=	SelectField(requiredlabel('Employment Type',"*"),
							 choices=[('C', 'Current'),('P', 'Previous')],
							 coerce=str,
							 validators=[validators.Required()],
							 description="3-%s" %getLanguage('Employment Details'))

	# --Classification--
	Sector 			=	QuerySelectField(requiredlabel(getLanguage('Sector'),'*'),query_factory=loadSector, 
							 get_label=lambda a: a.ID + " - " + a.Description,
							 allow_blank=True,
							 blank_text='--None--',
							 validators=[validators.Required()],
							 description="4-%s" %getLanguage('Classification'))

	Industry 		=	QuerySelectField(requiredlabel(getLanguage('Industry'),'*'),query_factory=loadIndustry, 
							 get_label=lambda a: a.Description,
							 allow_blank=True,
							 blank_text='--None--',
							 validators=[validators.Required()],
							 description="4-%s" %getLanguage('Classification'))

	ACMember 		=	SelectField(requiredlabel(getLanguage('AC Member'),"*"),
							 choices=[('Y', 'Yes'),('N', 'No')],
							 coerce=str,
							 validators=[validators.Required()],
							 description="4-%s" %getLanguage('Classification'))

	SelfEmployed 	=	SelectField(requiredlabel(getLanguage('Self-Employed'),"*"),
							 choices=[('N', 'No'),('Y', 'Yes')],
							 coerce=str,
							 validators=[validators.Required()],
							 description="3-%s" %getLanguage('Employment Details'))
	
	Position 		=	QuerySelectField(requiredlabel('Occupation', '*'),query_factory=loadPosition, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text='--None--',
							 description="3-%s" %getLanguage('Employment Details'))
	PositionRemark	=	TextAreaField("Occupation Remark",
							 description="3-%s" %('Employment Details'))

	LengthOfService =	TextField(isRequiredCBCLabel("Length Of Service(M)"),
							 validators=[validators.Length(max=3)],
							 description="3-%s" %getLanguage('Employment Details'))

	CompanyName 	=	TextField(getLanguage("Company Name"),
							description="3-%s" %getLanguage('Employment Details'),
							validators=[validators.Length(max=35)])

	CompanyBusiness =	TextField(getLanguage("Company Business"),
							description="3-%s" %getLanguage('Employment Details'),
							validators=[validators.Length(max=50)])

	EmployerName 	=	TextField(isRequiredCBCLabel("Employer Name"),
							description="3-%s" %getLanguage('Employment Details'),
							validators=[validators.Length(max=50)])

	EmployerAddressType = SelectField(isRequiredCBCLabel('Employer AddressType'),
						  choices=[('WORK', 'Work'),
								   ('RESID', 'Residential'),
								   ('POST', 'Correspondence'),
								   ('U', 'Unknown')
								  ],
						  coerce=str,
						  validators=[validators.Required()],
						  description="3-%s" %getLanguage('Employment Details'),
						  default='WORK')

	EmployerProvince = QuerySelectField(isRequiredCBCLabel('Employer Province'),query_factory=loadEmpProvince,
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose Province--',
							 description="3-%s" %getLanguage('Employment Details'))

	EmployerDistrict = QuerySelectField(isRequiredCBCLabel('Employer District'),query_factory=loadEmpDistrict,
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose District--',
							 description="3-%s" %getLanguage('Employment Details'))

	EmployerCommune = QuerySelectField(isRequiredCBCLabel('Employer Commune'),query_factory=loadEmpCommune,
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose Commune--',
							 description="3-%s" %getLanguage('Employment Details'))

	EmployerVillage = QuerySelectField(isRequiredCBCLabel('Employer Village'),query_factory=loadEmpVillage,
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose Village--',
							 description="3-%s" %getLanguage('Employment Details'))

	EmployerAddress =	TextField('Employer Address',
							description="3-%s" %getLanguage('Employment Details'),
							validators=[validators.Optional(),validators.Length(max=150)])

	Currency 		= 	QuerySelectField(getLanguage('Currency'),query_factory=loadCurrency, 
							 get_label='ID',
							 allow_blank=False,
							 blank_text='--None--',
							 description="3-%s" %getLanguage('Employment Details'))

	MonthlyIncome 		=	TextField(isRequiredCBCLabel("Total Monthly Salary/Income"),
							description="3-%s" %getLanguage('Employment Details'),
							validators=[validators.Required()])

	YearEmployed 	=	TextField(getLanguage("Years Employed"),
							description="3-%s" %getLanguage('Employment Details'),
							validators=[validators.Length(max=4)])

	# --Identification--
	IDType 			=	QuerySelectField(requiredlabel(getLanguage('ID Type'),'*'),
							 query_factory=loadIdType, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text='--None--',
							 validators=[validators.Required()],
							 description="8-%s" %getLanguage('Identification Document'))
	
	IDNumber 		=	TextField(requiredlabel(getLanguage("ID Number"),"*"),
							 validators=[validators.Required()],
							 description="8-%s" %getLanguage('Identification Document'))
	
	IssuePlace 		=	TextField(requiredlabel(getLanguage("Issue Place"),'*'),
							 description="8-%s" %getLanguage('Identification Document'),
							 validators=[validators.Length(max=35),validators.Required()],)
	
	IssueDate 		=	DateField(requiredlabel(getLanguage("Issue Date"),'*'),
							 description="8-%s" %getLanguage('Identification Document'),
							 validators=[custom_IssueDate])
	
	ExpiryDate 		=	DateField(getLanguage("Expiry Date"),
							 description="8-%s" %getLanguage('Identification Document'),
							 validators=[custom_ExpiryDate])
	#NonIndividual
	NonIndNameOfEntity   	= TextField("Name of Entity",
							 description='61-Non-Individual Info')
	NonIndAbbreviationName 	= TextField("Abbreviation Name",
							description='61-Non-Individual Info')
	NonIndRegisteredYear  	= TextField("Registered Year",
							description='61-Non-Individual Info')
	NonIndAddress  			= TextAreaField("Address ",
							description='61-Non-Individual Info')
	# Secondary
	IDType2 				=	QuerySelectField('ID Type (Secondary)',
									 query_factory=loadIdType,
									 get_label='Description',
									 allow_blank=True,
									 blank_text='--None--',
									 description="8-%s" %getLanguage('Identification Document'))
	IDNumber2 				=	TextField("ID Number",
									 description="8-%s" %getLanguage('Identification Document'),
									 validators=[validators.Length(max=50)])
	IssuePlace2				=	TextField("Issue Place", 
									description="8-%s" %getLanguage('Identification Document'),
									validators=[validators.Length(max=35)])
	IssueDate2 				=	DateField("Issue Date", description="8-%s" %getLanguage('Identification Document'))
	ExpiryDate2				=	DateField("Expiry Date", description="8-%s" %getLanguage('Identification Document'))

	# Third
	IDType3 				=	QuerySelectField('ID Type (Third)',
									 query_factory=loadIdType,
									 get_label='Description',
									 allow_blank=True,
									 blank_text='--None--',
									 description="8-%s" %getLanguage('Identification Document'))
	IDNumber3 				=	TextField("ID Number",
									 description="8-%s" %getLanguage('Identification Document'),
									 validators=[validators.Length(max=50)])
	IssuePlace3				=	TextField("Issue Place", 
									description="8-%s" %getLanguage('Identification Document'),
									validators=[validators.Length(max=35)])
	IssueDate3 				=	DateField("Issue Date", description="8-%s" %getLanguage('Identification Document'))
	ExpiryDate3				=	DateField("Expiry Date", description="8-%s" %getLanguage('Identification Document'))
	
	# Location customer
	LastLocation 		=	LocationField("Customer Location")
	# --Block--
	Block 			=	SelectField(getLanguage('Block'),
							choices=[('N', 'No'),('Y', 'Yes')],
							coerce=str,
							default='N',
							description="81-%s" %getLanguage('Block')
						)
	
	BlockReason 	=	TextAreaField("Block Reason",
						description="81-%s" %getLanguage('Block'),
						validators=[validators.Length(max=100)])

	# Tab Income Detail
	Currency 				= 	QuerySelectField(getLanguage('Currency'),query_factory=loadCurrency,
									get_label='ID',
									allow_blank=False,
									blank_text='--None--',
									description="6-%s" %"Income and Expense")

	PrimaryFreq 			= SelectField(requiredlabel(getLanguage("Frequency"), "*"),
									choices=[	('1', '1. %s' %('Monthly')),
												('2', '2. %s' %("Quarterly")),
												('3', '3. %s' %("Semester")),
												('4', '4. %s' %("Annually"))],
									description="6-%s" %"Income and Expense",
									coerce=str,
									validators=[validators.Required()]
								)
	PrimaryInc				= TextField(requiredlabel("Primary Income", "*"),
									description="6-%s" %"Income and Expense",
									validators=[validators.Required()])
	SecondaryInc 			= TextField("Secondary Income",
									description="6-%s" %"Income and Expense",
									validators=[validators.Optional()])
	MonthlyIncome 			= TextField("Total Net Income",
									description="6-%s" %"Income and Expense",
									validators=[validators.Optional()])
	HouseholdExp			= TextField("Household Expenses",
									description="6-%s" %"Income and Expense",
									validators=[validators.Required()])
	PersonalExp				= TextField("Personal Expenses",
									description="6-%s" %"Income and Expense",
									validators=[validators.Optional()])
	TotalExpenses			= TextField("Total Expenses",
									description="6-%s" %"Income and Expense",
									validators=[validators.Optional()])
	@staticmethod
	def setVisible():
		base 			= super(FRM_CUSTOMER_EX, FRM_CUSTOMER_EX).setVisible()

		control_list	=['LastLocation']
		control_list.extend(base)

		return control_list