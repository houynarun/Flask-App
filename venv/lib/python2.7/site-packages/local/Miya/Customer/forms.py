from app.Customer.forms_my import *
class FRM_CUSTOMER_MY_EX(FRM_CUSTOMER_MY):
	VBID 			= 	HiddenField("Centre/Village Bank")
	GroupID 		= 	QuerySelectField('Group',
							query_factory=loadGroupID,
							get_label=lambda a: a.ID + " - " + a.GroupName,
							allow_blank=True,
							blank_text=u'--None--',
							validators=[custom_GroupMember])

	PotentialCustomer 	= 	HiddenField("Potential Customer")

	FirstNameEn 	=	TextField(requiredlabel("%s (%s)" %(getLanguage("Name"), getLanguage("English")),"*"),[validators.Required()])
	LastNameEn 		=	TextField(requiredlabel("%s (%s)" %("Father Name", getLanguage("English")),"*"))
	FatherNameEn    =   TextField(requiredlabel("%s (%s)" %("Father Name", getLanguage("English")),"*"))
	IDNumber 		=	TextField(requiredlabel("NID Number","*"))
	FirstNameKh 	=	TextField("%s (%s)" %(getLanguage("Name"), "Myanmar"))
	LastNameKh 		=	TextField("%s (%s)" %("Father Name", "Myanmar"))
	FatherNameLocal =   TextField("%s (%s)" %("Father Name", "Myanmar"))

	Salutation 		=	SelectField(getLanguage("Salutation"),
							 choices=[('Mrs', 'Mrs'),('Mr', 'Mr'),('Miss','Miss')],
							 coerce=str)
	Gender 			=	SelectField(requiredlabel(getLanguage("Gender"),"*"),
							 choices=[('Female', 'Female'),('Male', 'Male'),('Other','Other')],
							 coerce=str,
							 validators=[validators.Required()])
	DateOfBirth 	=	DateField(requiredlabel(getLanguage("Date of Birth"), "*"),
							format='%Y-%m-%d',
							validators=[custom_DateOfBirth])

	CountryOfBirth 	=	QuerySelectField(getLanguage('Country of Birth'),query_factory=loadCountry, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text='',
							 default=lambda:loadCountry('MM'),
							 validators=[validators.Required()])
	Nationality		=   QuerySelectField(getLanguage('Nationality'),query_factory=loadCountry, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text='',
							 default=lambda:loadCountry('MM'),
							 validators=[validators.Required()])
	ProvinceOfBirth =	QuerySelectField('Province/Division/State of Birth',query_factory=loadProvinceOfBirth, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose Province/Division/State--')
	DistrictOfBirth =	QuerySelectField(getLanguage('District of Birth'),query_factory=loadDistrictOfBirth, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose District--')
	CommuneOfBirth 	=	QuerySelectField('Commune/Township of Birth',query_factory=loadCommuneOfBirth, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text=u'--Choose Commune/Township--')
	AsGurantor 		=	SelectField(requiredlabel(getLanguage('As Guarantor'),"*"),
							 choices=[('N', 'No'),('Y', 'Yes')],
							 coerce=str,
							 validators=[validators.Required()])
	MaritalStatus 	=	SelectField(requiredlabel(getLanguage('Marital Status'),'*'),
							 choices=[('1', 'Married'),
							 		('2', 'Single'),
							 		('3','Divorced'),
							 		('4','Widow'),
							 		('5','Widower'),
							 		('6','Separated'),
							 		('7','Defacto'),
							 		('8','Unknown')],
							 coerce=str,
							 validators=[validators.Required()])
	Resident 		=	SelectField(getLanguage('Resident'),
							 choices=[('Y', 'Yes'),('N', 'No')],
							 coerce=str,
							 validators=[validators.Required()])

	Officer         = RemoteTextField(requiredlabel("Loan Officer", "*"),
								dicRemote={'url':'/Morakot/SearchOfficer'},
								validators=[validators.Required()]
						)
	EducationLevel 	=	QuerySelectField('Education Level',
								query_factory=loadEducationLevel, 
								get_label='Description',
								allow_blank=True,
								blank_text=u'--None--'
							)
	IDType 			=	SelectField(getLanguage('ID Type'),
							choices=[('', '--None--'),('2', 'National ID')],
							default='2',
							coerce=str,
							validators=[validators.Required()]
							)
	IssuePlace 		=	TextField(requiredlabel(getLanguage("Issue Place"),'*')
							 )
	
	IssueDate 		=	DateField(requiredlabel(getLanguage("Issue Date"),'*'),
		 					[validators.Optional()]
							 )
	
	ExpiryDate 		=	DateField(getLanguage("Expiry Date"),
							 validators=[custom_ExpiryDate])

	# # --Spouse Info--

	SpoFirstNameEn  	 =	TextField("%s (%s)" %("Name","English"),description="2-%s" %'Spouse Info')
	SpoLastNameEn 	     =	TextField("%s (%s)" %("Father Name", getLanguage("English")),description="2-%s" %'Spouse Info')
	FaSpouseLastNameEn   =  TextField("%s (%s)" %("Father Name", getLanguage("English")),description="2-%s" %'Spouse Info')
	SpoNationalID 		 =	TextField("# Of ID Type",description="2-%s" %'Spouse Info')
	SpoFirstNameKh 	     =	TextField("%s (%s)" %("Name","Myanmar"),description="2-%s" %'Spouse Info')
	SpoLastNameKh 	     =	TextField("%s (%s)" %("Father Name", "Myanmar"),description="2-%s" %'Spouse Info')
	FaSpouseLastNameLocal=  TextField("%s (%s)" %("Father Name", getLanguage("English")),description="2-%s" %'Spouse Info')
	SpoDateOfBirth       =	DateField("Spouse Date of Birth",
							 description="2-%s" %'Spouse Info',
							 validators=[custom_SpoDateOfBirth]
							)
	SpouseNationality		=   QuerySelectField('Spouse Nationality',
							 query_factory=loadCountry, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text='',
							 default=lambda:loadCountry('MM'),
							 description="2-%s" %'Spouse Info')

	SpoOccupation 	=	QuerySelectField(getLanguage('Occupation'),query_factory=loadPosition, 
							 get_label='Description',
							 allow_blank=True,
							 blank_text='--None--',
							 description="2-%s" %'Spouse Info'
							)
	SpoOccupationRemark =	TextAreaField("Occupation Remark",
							 description="2-%s" %'Spouse Info')
	SpouseIDType 		=	SelectField("ID Type of Spouse",
							choices=[('', '--None--'),('2', 'National ID')],
							coerce=str,
							description="2-Spouse Info"
							)

	SpouseIDIssueDate		=	DateField("Issue Date Of ID Type", validators=[custom_SpouseIDIssueDate], description="2-Spouse Info")
	# --- end spouse --

	def __init__(self, *args, **kwargs):
		super(FRM_CUSTOMER_MY_EX, self).__init__(*args, **kwargs)
		Country = loadCountry('MM')
		self.CountryOfBirth.default= Country.ID
		self.Nationality.default= Country.ID
		self.SpouseNationality.default= Country.ID

	@staticmethod
	def setVisible():
		ListField = [("ACMember"), ("CustomerType"), ("YearEmployed"), ("CompanyName"),
					 ("IssuePlace"), ("IssueDate"), ("ExpiryDate"),("LastNameEn"),("LastNameKh"),("SpoLastNameEn"),("SpoLastNameKh"),("IDType"),("PotentialCustomer")]
		return ListField

	@staticmethod
	def listField():
		Fields = ["ID", "FirstNameEn", "FirstNameEn", "FirstNameKh", "FirstNameKh", 
				  "Gender", "DateOfBirth", "Branch", "Officer"]
		return Fields