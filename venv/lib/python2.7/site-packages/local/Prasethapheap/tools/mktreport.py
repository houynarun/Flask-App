from app 						import db
from app.Collateral.models 		import *
from app.LoanContract.models 	import *
from app.LoanApplication.models import MKT_LOAN_COLLATERAL
from app.Currency.models 		import MKT_CURRENCY
from app.CollateralType.models 	import MKT_COLLATERAL_TYPE
from app.Customer.models 		import MKT_CUSTOMER
from app.PD.models 				import MKT_PAST_DUE
import app.tools.mktmoney 			as mktmoney


def getCollateral(args):
	
	LoanID 	= args[0]
	Type 	= args[1]
	Result 	= ""

	CollateralDetailList =	 db.session.query(MKT_COLLATERAL_DE).\
										join(MKT_COLLATERAL, MKT_COLLATERAL.ID==MKT_COLLATERAL_DE.CollateralID).\
										join(MKT_LOAN_COLLATERAL, MKT_LOAN_COLLATERAL.Collateral==MKT_COLLATERAL.ID).\
										join(MKT_LOAN_CONTRACT, MKT_LOAN_CONTRACT.ID==MKT_LOAN_COLLATERAL.ID).\
										filter(MKT_LOAN_CONTRACT.ID==LoanID).\
										all()

	TotalPrice = 0
	if CollateralDetailList :
		
		for CDObj in CollateralDetailList:
			if Type == '0':
				Result += CDObj.CollateralID + ", "
			if Type == '1':
				if str(CDObj.OwnerName) != "":
					Result += str(CDObj.OwnerName) + ", "
				else:
					Customer = MKT_CUSTOMER.query.join(MKT_LOAN_CONTRACT, MKT_LOAN_CONTRACT.ContractCustomerID==MKT_CUSTOMER.ID).filter(MKT_LOAN_CONTRACT.ID==LoanID).first()
					Result += str(Customer.LastNameEn) + ' ' + str(Customer.FirstNameEn) + ", "
			elif Type == '2':
				Result += CDObj.Description + ", "
			elif Type == '3':
				CollateType = MKT_COLLATERAL_TYPE.query.get(CDObj.CollateralType)
				Result += CollateType.Description + ", "
			elif Type == '4':
				Result += str(len(CollateralDetailList)) + ", "
			elif Type == '5':
				CurrencyObj = MKT_CURRENCY.query.get(CDObj.Currency)
				TotalPrice += (float(CDObj.ValuationPrice))
				Result = str(mktmoney.toMoney(float(TotalPrice), CurrencyObj, 0))
	if Type == '5':
		return Result
			
	return Result[:-2]


def getPastDue(args):
	ID = args[0]
	Type = args[1]
	Result = ""

	PastDue = 	MKT_PAST_DUE.query.join(MKT_LOAN_CONTRACT,MKT_LOAN_CONTRACT.ID==MKT_PAST_DUE.LoanID).\
				filter(MKT_LOAN_CONTRACT.ID==ID).first()

	if PastDue:
		CurrencyObj = MKT_CURRENCY.query.get(PastDue.Currency)
		Rate = CurrencyObj.ReportingRate
		if Type == "1":
			return str(mktmoney.toMoney(float(PastDue.TotODAmount), CurrencyObj, 0))
		elif Type == '2':
			return str(mktmoney.toMoney(float(PastDue.TotPrincipalDue), CurrencyObj, 0))
		elif Type == '3':
			return str(mktmoney.toMoney(float(PastDue.TotInterestDue), CurrencyObj, 0))
		elif Type == '4':
			return str(mktmoney.toMoney(float(PastDue.TotPenaltyDue), CurrencyObj, 0))
		elif Type == '5':
			return str(mktmoney.toMoney(float(PastDue.TotChargeDue), CurrencyObj, 0))
	return


def getOutstandingInterest(args):
	ID = args[0]
	# Type = args[1]

	LoanContract = MKT_LOAN_CONTRACT.query.get(ID)
	OSInterest = 0

	if LoanContract:
		CurrencyObj = MKT_CURRENCY.query.get(LoanContract.Currency)
		OSInterest = float(LoanContract.TotalInterest - LoanContract.IntIncEarned)

	return str(mktmoney.toMoney(OSInterest, CurrencyObj, 0))

def getTypeofLoan(args):
	Type 	= 	''
	ID 		= 	args[0]
	LoanProduct 	= MKT_LOAN_CONTRACT.query.get(ID).LoanProduct
	if LoanProduct == '001':
		Type = 'Group Loan'
	else: 
		Type = 'Individual Loan'
	return Type
def getRelatedParty(args):
	LoanProductList 	= ['301','302','303','304']
	Role 	=	''
	ID 		= 	args[0]
	StaffProduct = MKT_LOAN_CONTRACT.query.get(ID)
	if StaffProduct.LoanProduct == '301':
		Role = 'Shareholder'
	elif StaffProduct.LoanProduct == '302':
		Role = 'Manager'
	elif StaffProduct.LoanProduct == '303':
		Role = 'Employee'
	elif StaffProduct.LoanProduct == '304':
		Role = 'External Audit'
	else:
		Role = 'N/A'
	return Role


