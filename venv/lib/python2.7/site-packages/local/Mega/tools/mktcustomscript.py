from app.mktcore.constant 			import msg_error
from app.LoanContract.models 		import MKT_LOAN_CONTRACT
from app.RepaymentSchedule.models 	import MKT_REP_SCHEDULE
from app.PDParameter.models 		import MKT_PD_PARAM
from app.Tax.models 				import MKT_TAX
from decimal 						import Decimal
from flask 							import flash, Markup
import app.tools.mktdate 			as mktdate
import app.tools.mktsetting 		as mktsetting

class CustomPenalty(object):
	def __init__(self,**kwargs):
		pass

	@staticmethod
	def setCustomPretermination(**kwargs):
		pass

	@staticmethod
	def setCustomPastDue(**kwargs):
		"""
			Method to calculate custom past due penalty.with VAT
			using following formular:
			#################################################################################
			# if MEGA_VAT_NO_OFF == Y:														#
			# 	=> VAT = Amount * VAT Rate / 100 											#
			# 	=> PastDuePenalty = Amount - VAT											#
			# else:																			#
			#	=> PastDuePenalty = Amount 													#
			#################################################################################
			Args:
				**kwargs 			(kwargs):
					NumOfDayLate	(int): 		number of day late
					PastDueDateObj	(object):	sqlalchemy base query object
					Param			(string):	optional string - Penalty Fixed/Rate(per year) and number of day: F*50 R*24 D*7
					LoanObj 		(object): 	Loan contract object
					PenCalBase 		(string): 	Repayment Order [IN PR PE CH]
			Return:
				PastDuePenalty 		(decimal): Amount 
		"""
		Param 			= kwargs.get("Param","")
		LoanObj 		= kwargs.get("LoanObj",None)
		PenCalBase 		= kwargs.get("PenCalBase",None)
		NumOfDayLate 	= kwargs.get("NumOfDayLate",0)
		PastDueDateObj	= kwargs.get("PastDueDateObj",None)

		PenaltyPerDay 	= float(0)
		try:
			return PenaltyPerDay
		except Exception as e:
			raise e


def getCustomTerminationPenalty(**kwargs):
	"""Method to access class CustomPenalty"""
	Amount = CustomPenalty.setCustomPretermination(**kwargs)
	return Amount

def getCustomPastDuePenalty(**kwargs):
	"""Method to access class CustomPenalty"""
	Amount = CustomPenalty.setCustomPastDue(**kwargs)
	return Amount