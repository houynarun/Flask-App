from app.mktcore.wtfimports 	import *
from app.mktcore.imports 		import *
from flask 						import flash
from decimal 					import *
from wtforms 					import DecimalField, IntegerField
from .models 					import *
from local.TGC.SubLoan.models 	import MKT_SUB_LOAN
from app.LoanContract.models 	import *


@app.route("/Morakot/GetGuaranteeCurrency", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getGuaranteeCurrency():
	try:
		LoanID 	= 	request.args.get('LoanID') if 'LoanID' in request.args else ""
		Currency 	= 	""

		LoanContractObj = MKT_LOAN_CONTRACT.query.filter_by(ID=LoanID).first()
		if LoanContractObj:
			Currency = LoanContractObj.Currency

		return jsonify(Currency=Currency)
	except:
		raise


class FRM_GUARANTEE_LIST(exform):
	LoanID			=	HiddenField(requiredlabel("Main Contract", "*"), [validators.Required()])
	Currency		=	TextField("Currency")
	EngineNo		=	TextField(requiredlabel("Engine No", "*"),	validators=[validators.Required()])
	ChassieNo		=	TextField(requiredlabel("Chassie No", "*"),	validators=[validators.Required()])
	Brand			=	TextField(requiredlabel("Brand", "*"),	validators=[validators.Required()])
	Year			=	TextField("Year", validators=[validators.Regexp(r"^\d{4}$")])
	Size			=	TextField("Size", validators=[validators.Regexp(r"^\d+CC$")])
	MarketPrice		=	DecimalField("Market Price", validators=[], default=0)
	SPA				=	SelectField(requiredlabel("SPA in USD", "*"),
							choices=[('Y','Yes'),('N','No')],
							coerce=str,
							default='Y',
							validators=[validators.Required()]
						)
	PlateNo			=	TextField(requiredlabel("Motor Plate", "*"), validators=[validators.Required()])
	Tax				=	DecimalField("Tax Paper Price", validators=[], default=0)
	LendingAmt		=	DecimalField(requiredlabel("Lending", "*"),	validators=[validators.Required()], default=0)
	Outstanding		=	DecimalField(requiredlabel("Outstanding", "*"),	validators=[validators.Required()], default=0)
	LTV				=	DecimalField("LTV %", validators=[], default=0)
	ChqIssue		=	TextField("ChqIssue", validators=[])
	Description		=	TextAreaField("Description", validators=[validators.Length(max=50)])

	@staticmethod
	def setWidth():
		Fields = [('LoanID',		len3),
				  ('Currency',		len1),
				  ('EngineNo',		len3),
				  ('ChassieNo',		len3),
				  ('Brand',			len3),
				  ('Year',			len1),
				  ('Size',			len1),
				  ('MarketPrice',	len3),
				  ('PlateNo',		len3),
				  ('Tax',			len3),
				  ('LendingAmt',	len3),
				  ('Outstanding',	len3),
				  ('LTV',			len1),
				  ('ChqIssue',		len3)]
		return Fields

	@staticmethod
	def setDisable():
		return [('ID'),('Currency')]

	@staticmethod
	def setDisableforEdit():
		return [('ID'),('LoanID'),('Currency')]

	@staticmethod
	def moneyField():
		return [["MarketPrice",	"Currency"], 
				["Tax",			"Currency"], 
				["LendingAmt",	"Currency"],
				["Outstanding",	"Currency"],
				["LTV",			"Currency"]]

	@staticmethod
	def formatMoney():
		return ["MarketPrice", "Tax", "LendingAmt", "Outstanding", "LTV"], "Currency"
	
	@staticmethod
	def hotField():
		hotfield = []
		fielddisplay 	= 	"$('#Currency').val(data.Currency);"
		varname 		=	"LoanID:$('#LoanID').val()"
		fun 			=	["LoanID", varname, fielddisplay, "/Morakot/GetGuaranteeCurrency", "change"]
		hotfield.append(fun)

		return hotfield