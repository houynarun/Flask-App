from app.mktcore.wtfimports			import *
from app.mktcore.imports			import *

from .models						import MKT_FLOORING_RULE, MKT_FLOORING_RULE_DE

class FRM_FLOORING_RULE_DE(exform):
	MinimumDay		= TextField(requiredlabel("Minimum Day", "*"), [validators.Required()])
	MaximumDay		= TextField(requiredlabel("Maximum Day", "*"), [validators.Required()])
	LTV				= TextField(requiredlabel("LTV %", "*"), [validators.Required()])
	Note			= TextAreaField("Note")


	def validate_MinimumDay(form, field):
		
		if request.method == 'POST':
			
			MinimumDay		= request.form['MinimumDay']
			
			if not str(MinimumDay).isdigit():
				raise ValidationError("Please input only digit number.")

			if len(MinimumDay) > 4:
				raise ValidationError("The number is too large.")

	def validate_MaximumDay(form, field):
		
		if request.method == 'POST':
			
			MaximumDay		= request.form['MaximumDay']

			if not str(MaximumDay).isdigit():
				raise ValidationError("Please input only digit number.")

			if len(MaximumDay) > 4:
				raise ValidationError("The number is too large.")

	def validate_LTV(form, field):
		
		if request.method == 'POST':
			
			LTV			= request.form['LTV']

			IsPercentage	= True
			ErrorMsg		= ""

			try:	
				if float(LTV) < 0 or float(LTV) > 100:
					IsPercentage, ErrorMsg = False, "Please input a valid percentage."
			except:
				raise ValidationError("Please input only decimal number.")

			if not IsPercentage:
				raise ValidationError(ErrorMsg)


	