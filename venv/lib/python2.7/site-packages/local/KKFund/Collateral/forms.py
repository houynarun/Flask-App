from app.Collateral.detail import *

'''
	Check if the Collateral is in any Loan that is currently Active.
	By using CollateralID query through MKT_LOAN_COLLATERAL.
	Then if DisbursedStat of Loan = Y and OutstandingAmount > 0 so Loan is in Active.
'''
def collateralIsInActiveLoan(CollateralID):

	Response	= MKT_LOAN_COLLATERAL.query.filter_by(Collateral=CollateralID)

	if Response:
		for Record in Response.all():
			Loan 	= MKT_LOAN_CONTRACT.query.filter_by(ID=Record.ID).first()
			if Loan:
				if Loan.DisbursedStat == 'Y' and Loan.OutstandingAmount > 0:
					return True

	return False


class FRM_COLLATERAL_DE_EX(FRM_COLLATERAL_DE):

	def validate_WithdrawalDate(form, field):
		CollateralID = request.form['CollateralID']

		if collateralIsInActiveLoan(CollateralID):
			raise ValidationError('Loan is in active at #LoanID. Can not withdraw collateral.')

	def validate_WithdrawalBy(form, field):
		CollateralID = request.form['CollateralID']

		if collateralIsInActiveLoan(CollateralID):
			raise ValidationError('Loan is in active at #LoanID. Can not withdraw collateral.')
