from app.mktcore.wtfimports 	import *
from app.Customer.forms_my		import *

@app.route('/Morakot/GetNetTotalIncome',methods=['GET'])
@app.route('/Morakot/API/GetNetTotalIncome',methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getNetTotalIncome():
	Currency 		= request.args.get('Currency')

	PrimaryFreq 	= request.args.get('PrimaryFreq')
	PrimaryIncome 	= request.args.get('PrimaryIncome')
	PrimaryIncome 	= globalfunction.wordAmount(PrimaryIncome)

	SecondaryFreq 	= request.args.get('SecondaryFreq')
	SecondaryIncome = request.args.get('SecondaryIncome')
	SecondaryIncome = globalfunction.wordAmount(SecondaryIncome)
	FreqList 		= {'1':1, '2':3, '3': 6, '4': 12}
	
	NetTotalIncome 	= PrimaryIncome/FreqList.get(str(PrimaryFreq),1) + SecondaryIncome/FreqList.get(str(SecondaryFreq),1)
	CurrencyObj 	= MKT_CURRENCY.query.get(Currency)
	NetTotalIncome 	= mktmoney.toMoney(float(NetTotalIncome), CurrencyObj)

	return jsonify(NetTotalIncome = NetTotalIncome)

@app.route('/Morakot/GetTotalExpenses',methods=['GET'])
@app.route('/Morakot/API/GetTotalExpenses',methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getTotalExpense():
	Currency 		= request.args.get('Currency')

	Household 		= request.args.get('Household')
	Household 		= globalfunction.wordAmount(Household)

	Personal 		= request.args.get('Personal')
	Personal 		= globalfunction.wordAmount(Personal)

	TotalExpenses 	= Household+Personal
	CurrencyObj 	= MKT_CURRENCY.query.get(Currency)
	TotalExpenses 	= mktmoney.toMoney(float(TotalExpenses), CurrencyObj)

	return jsonify(TotalExpenses = TotalExpenses)


class FRM_CUSTOMER_MY_EX(FRM_CUSTOMER_MY):
	# Tab Income Detail
	PrimaryFreq 			= SelectField(requiredlabel(getLanguage("Frequency"), "*"),
									choices=[	('1', '1. %s' %('Monthly')),
												('2', '2. %s' %("Quarterly")),
												('3', '3. %s' %("Semester")),
												('4', '4. %s' %("Annually"))],
									description="6-%s" %"Income and Expense",
									coerce=str,
									validators=[validators.Required()]
								)
	PrimaryInc				= TextField("Primary Income",
									description="6-%s" %"Income and Expense",
									validators=[validators.Required()])
	SecondaryInc 			= TextField("Secondary Income",
									description="6-%s" %"Income and Expense",
									validators=[validators.Optional()])
	MonthlyIncome 			= TextField("Total Net Income",
										description="6-%s" %"Income and Expense",
										validators=[validators.Optional()])
	HouseholdExp			= TextField("Household Expenses",
									description="6-%s" %"Income and Expense",
									validators=[validators.Required()])
	PersonalExp				= TextField("Personal Expenses",
									description="6-%s" %"Income and Expense",
									validators=[validators.Optional()])
	TotalExpenses			= TextField("Total Expenses",
									description="6-%s" %"Income and Expense",
									validators=[validators.Optional()])
	
	# Tab Asset and Liability Detail
	AssetType			 	= TextField("Asset Type",
									description="7-%s" %"Asset and Liability",
									validators=[validators.Length(max=50)])
	EstimatedValue	 		= TextField("Estimated Value",
									description="7-%s" %"Asset and Liability",
									validators=[validators.Optional()])
	BankAccountType 		= TextField("Bank Account Type",
									description="7-%s" %"Asset and Liability",
									validators=[validators.Length(max=10)])
	SavingBal		 		= TextField("Saving Balance",
									description="7-%s" %"Asset and Liability",
									validators=[validators.Optional()])
	LenderName				= TextField(("Name of Lender(1)"),
									description="7-%s" %"Asset and Liability",
									validators=[validators.Length(max=50), validators.Optional()])
	OutstandingBal 			= TextField(("Outstanding Balance"),
									description="7-%s" %"Asset and Liability",
									validators=[validators.Optional()])
	MonthlyRep 				= TextField(("Monthly Repayment"),
									description="7-%s" %"Asset and Liability",
									validators=[validators.Optional()])
	LenderName2				= TextField(("Name of Lender(2)"),
									description="7-%s" %"Asset and Liability",
									validators=[validators.Length(max=50)])
	OutstandingBal2 		= TextField(("Outstanding Balance"),
									description="7-%s" %"Asset and Liability",
									)
	MonthlyRep2 			= TextField(("Monthly Repayment"),
									description="7-%s" %"Asset and Liability",
									)
	@staticmethod
	def moneyField():
		base	= super(FRM_CUSTOMER_MY_EX,FRM_CUSTOMER_MY_EX).moneyField()
		controls_list 	= [	("PrimaryInc", "Currency"), ("SecondaryInc", "Currency"), ("HouseholdExp", "Currency"),
							("PersonalExp", "Currency"), ("TotalExpenses", "Currency"),
							("EstimatedValue", "Currency"), ("SavingBal", "Currency"), ("OutstandingBal", "Currency"),
							("MonthlyRep", "Currency"), ("OutstandingBal2", "Currency"), ("MonthlyRep2", "Currency")]
		base.extend(controls_list)
		return base

	@staticmethod
	def setDisable():
		base	= super(FRM_CUSTOMER_MY_EX,FRM_CUSTOMER_MY_EX).setDisable()
		controls_list = ["TotalExpenses"]
		base.extend(controls_list)
		return base

	@staticmethod
	def formatMoney():
		return ["MonthlyIncome", "AverageMonthlyInc", "AverageMonthlyExp", "PrimaryInc", "SecondaryInc",
				"HouseholdExp", "PersonalExp", "TotalExpenses", "EstimatedValue", "SavingBal",
				"OutstandingBal", "MonthlyRep", "OutstandingBal2", "MonthlyRep2"], "Currency"

	@staticmethod
	def hotField():
		hotfield=[]
		base	= super(FRM_CUSTOMER_MY_EX, FRM_CUSTOMER_MY_EX).hotField()

		# auto complete net total income
		fielddisplay 	= "$('#MonthlyIncome').val(data.NetTotalIncome);"
		varname 		=  "PrimaryFreq:$('#PrimaryFreq').val(),\
							PrimaryIncome:$('#PrimaryInc').val(),\
							SecondaryFreq:$('#SecondaryFreq').val(),\
							SecondaryIncome:$('#SecondaryInc').val(),\
							Currency:$('#Currency').val()"
		fun 			= ["PrimaryInc", varname, fielddisplay, "/Morakot/GetNetTotalIncome", "blur"]
		hotfield.append(fun)

		fun 			= ["SecondaryInc", varname, fielddisplay, "/Morakot/GetNetTotalIncome", "blur"]
		hotfield.append(fun)

		fun 			= ["PrimaryFreq", varname, fielddisplay, "/Morakot/GetNetTotalIncome", "change"]
		hotfield.append(fun)

		fun 			= ["SecondaryFreq", varname, fielddisplay, "/Morakot/GetNetTotalIncome", "change"]
		hotfield.append(fun)

		fun 			= ["Currency", varname, fielddisplay, "/Morakot/GetNetTotalIncome", "change"]
		hotfield.append(fun)

		# auto complete total expense
		fielddisplay 	= "$('#TotalExpenses').val(data.TotalExpenses);"
		varname 		=  "Household:$('#HouseholdExp').val(),\
							Personal:$('#PersonalExp').val(),\
							Currency:$('#Currency').val()"
		fun 			= ["HouseholdExp", varname, fielddisplay, "/Morakot/GetTotalExpenses", "blur"]
		hotfield.append(fun)

		fun 			= ["PersonalExp", varname, fielddisplay, "/Morakot/GetTotalExpenses", "blur"]
		hotfield.append(fun)

		fun 			= ["Currency", varname, fielddisplay, "/Morakot/GetTotalExpenses", "change"]
		hotfield.append(fun)

		base.extend(hotfield)

		return base