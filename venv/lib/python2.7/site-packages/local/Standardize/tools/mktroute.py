from app.mktcore.imports 			import *
from app.LoanProduct.models 		import *
from app.TemplateBase.models 		import *
from app.VB.models 					import *
from app.LoanPurpose.models 		import MKT_LOAN_PURPOSE

import app.mktcore.globalfunction 		as globalfunction
import app.tools.mktmoney				as mktmoney
import app.tools.user 					as mktuser
import app.tools.mktloanapplication 	as mktloanapp

@app.route("/Morakot/LoanPurposeID", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getLoanPurposeID():
	LoanProductID 	= request.args.get('LoanProduct')
	LoanPurpose		= {"ID":"","Description":"--None--"}

	if LoanProductID:
		query = MKT_LOAN_PRODUCT.query.get(LoanProductID)
		if query:
			LoanPurposeObj = MKT_LOAN_PURPOSE.query.get(query.LoanPurpose)
			if LoanPurposeObj:
				LoanPurpose.update({"ID":LoanPurposeObj.ID,"Description":LoanPurposeObj.ID+" - "+LoanPurposeObj.Description})
	return jsonify(LoanPurpose = LoanPurpose)

@app.route("/Morakot/VBDescription", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getVBDescription():

	VBID 	= request.args.get('VBID','')
	Description = ''
	VBObj = MKT_VB.query.get(VBID)
	if VBObj:
		Description = VBObj.Description
	return jsonify(Description = Description)

@app.route("/Morakot/SearchVB/", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def routeSearchVB():
	search 				= request.args.get('q')
	Data = []
	if search:
		VBObj	= MKT_VB.query.filter(or_(MKT_VB.ID.ilike('%'+search+'%'), MKT_VB.Description.ilike('%'+search+'%'))).all()
		if VBObj:
			for row in VBObj:
				Data.append({'id':row.ID , 'text':row.ID +' - ' + row.Description})

	return jsonify(items = Data)

@app.route("/Morakot/Product/", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def routeSearchProduct():
	search 				= request.args.get('q')
	Data = []
	if search:
		ProductObj	= MKT_LOAN_PRODUCT.query.filter(or_(MKT_LOAN_PRODUCT.ID.ilike('%'+search+'%'), MKT_LOAN_PRODUCT.Description.ilike('%'+search+'%'))).all()
		if ProductObj:
			for row in ProductObj:
				Data.append({'id':row.ID , 'text':row.ID +' - ' + row.Description})

	return jsonify(items = Data)