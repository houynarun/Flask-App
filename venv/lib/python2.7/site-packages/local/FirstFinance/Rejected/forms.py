from app.mktcore.wtfimports 				import *
import app.tools.mktsetting 				as mktsetting
from app.Rejected.forms 					import *
from .models 								import *
def custom_RejectedDate(form,field):

	RejectedDate = request.form['RejectedDate']

	if RejectedDate:
		# clear out processing errors
		field.errors[:] = []

		CheckFormatDate = mktdate.isDateISO(RejectedDate)
		if not CheckFormatDate:
			raise ValidationError("Incorrect date format, should be YYYY-MM-DD")

	else:
		# clear out processing errors
		field.errors[:] = []

def loadRejectStage():
	RejectedStageObj 	= MKT_REJECTED_STAGE.query.order_by(MKT_REJECTED_STAGE.Description.asc())
	return RejectedStageObj

#PotentialCustomerRejected PURPOSE
class FRM_REJECTED_EX(FRM_REJECTED):
	
	CustomerID 			= 	QuerySelectField(requiredlabel('Potential Customer','*'),
								query_factory=loadPotentialCust,
								get_label=lambda a: a.ID + " - " + a.LastNameEn + " " +a.FirstNameEn,
								allow_blank=True,
								validators=[validators.Required()],
								default=lambda:loadPotentialCust(request.args.get("POID") if 'POID' in request.args else ""),
								blank_text=u'--None--')

	Rejected 			=	SelectField("Rejected",
								choices=[('N', 'No'),('Y', 'Yes')],
								coerce=str,
								default='Y',
								description="2-Reject")
	RejectedBy 			=	SelectField("Rejected By",
								choices=[('', '--None--'),('1', 'Client'),('2', 'Company')],
								coerce=str,
								description="2-Reject")
	RejectedStage 		= 	QuerySelectField('Rejected Stage',
								query_factory=loadRejectStage,
								get_label=lambda a:  a.Description ,
								allow_blank=True,
								blank_text=u'--None--',
								description="2-Reject")

	RejectedDate		=	DateField("Rejected Date",
								format='%Y-%m-%d',
								default="",
								validators=[custom_RejectedDate],
								description="2-Reject")

	ReasonType 		 	= 	QuerySelectField('Type of Reason',
								query_factory=loadRejectedReasonType,
								get_label=lambda a:  a.Description ,
								allow_blank=True,
								blank_text=u'--None--',
								description="2-Reject")

	RejectedReason 		=	TextAreaField("Rejected Reason", description="2-Reject")

class  FRM_REJECTED_STAGE(exform):
	Description 		= TextField(requiredlabel("Description","*"))