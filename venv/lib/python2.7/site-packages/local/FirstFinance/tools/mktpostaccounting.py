import app.tools.mktaccounting 		as mktaccounting
import app.tools.mktdate 			as mktdate
from decimal 						import *

def setPostAccounting(**kwargs):
	for i in range(0, 2):													
		if i == 0:
			DrCr 		= 	"Dr"
			Mode 		= 	kwargs.get("DrMode")
			Category 	= 	kwargs.get("DrCategory")
			Account 	= 	kwargs.get("DrAccount")
			Currency	= 	kwargs.get("DrCurrency","")
			Amount 		= 	kwargs.get("DrAmount","")
		else:
			DrCr 		= 	"Cr"
			Mode 		= 	kwargs.get("CrMode")
			Category 	= 	kwargs.get("CrCategory")
			Account 	= 	kwargs.get("CrAccount")
			Currency 	=	kwargs.get("CrCurrency","")
			Amount 		= 	kwargs.get("CrAmount","")

		Transaction = kwargs.get("Transaction")
		TranDate 	= kwargs.get("TranDate")
		Module 	 	= kwargs.get("Module")
		Reference 	= kwargs.get("Reference")
				
		Branch 		= kwargs.get("Branch")
		Note 		= kwargs.get("Note")
		UserReference= kwargs.get("UserReference")
		Inputter 	 = kwargs.get("Inputter")
		LCYAmount 	= kwargs.get("LCYAmount",0)

		if not Currency:
			Currency	= kwargs.get("Currency")

		if not Amount:
			Amount 		= kwargs.get("Amount")
		
		GL_KEYS 	= mktaccounting.getConsolKey(Category, Currency, "", Module, "", "", "", "", "", "", "", "", "")
		DateTimeNow = mktdate.getDateTimeNow()

		mktaccounting.postAccounting(
			"AUTH", 				# Status
			"0", 					# Curr
			Inputter,				# Inputter
			DateTimeNow, 			# Createdon
			Inputter,				# Authorizer
			DateTimeNow,			# Authorizeon
			"", 					# AEID
			Account,				# Account
			Category,				# Category
			Currency,				# Currency
			DrCr,					# DrCr
			Decimal(Amount), 		# Amount
			Module,					# Module
			Transaction, 			# Transaction
			TranDate, 				# TransactionDate
			Reference, 				# Reference
			Note, 					# Note
			"", 					# JNID
			Branch,					# Branch
			GL_KEYS,				# GL_KEYS
			Mode, 					# Mode check to insert Journal for category,
			UserReference=UserReference,		# User Reference,
			LCYAmount=LCYAmount
		)