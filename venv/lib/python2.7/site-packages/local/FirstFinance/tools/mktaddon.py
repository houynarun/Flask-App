from app.ScheduleAddon.models 						import *
from app.LoanContract.models 						import *
from local.FirstFinance.ScheduleAddonPayment.models	import *

import app.tools.mktaudit 							as mktaudit
import app.tools.mktdb								as mktdb
import app.tools.mktmoney as mktmoney

def getInsurance(LoanID):
	""" Method to get insurance information such as 
		1. TotalPay = amount that customer need to pay for FF (TotalPay = Prepaid - Actual Collect)
		2. Prepaid  = amount that FF buy for customer
		3. Actual 	= amount that FF collect from customer 
		4. PastDue  = amount that customer owe FF
		5. Remain  	= amount that remain (Remain = Prepaid - (Actual+TotalWaive))
		6. WaivePD 	
		7. WaiveAmount 
		8. TotalWaive 
		Args:
			LoanID (str): string Loan ID
		Return:
			Dict
	"""
	TotalPay    = float(0)
	Remain 		= float(0)
	PastDue		= float(0)
	Actual      = float(0)
	Prepaid     = float(0)
	WaivePD 	= float(0)
	WaiveAmount = float(0)
	TotalWaive  = float(0)

	LoanObj = MKT_LOAN_CONTRACT.query.get(LoanID)
	Currency = LoanObj.Currency if LoanObj else "USD"
	InsuranceObj = MKT_SCHEDULE_ADDON.query.\
								filter(MKT_SCHEDULE_ADDON.LoanID==LoanID).\
								first()

	WaiveObj     = MKT_SCHEDULE_ADDON_PAYMENT_WAIVE.query.\
									filter_by(LoanID=LoanID)
	for row in WaiveObj:
		WaivePD = float(WaivePD) + float(row.PDAmount)
		WaiveAmount = float(WaiveAmount) + float(row.AddonAmount)
		TotalWaive = float(TotalWaive) + float(row.TotalAmount)

	TotalWaive = mktmoney.toMoney(float(TotalWaive),mktmoney.getCurrencyObj(Currency))
	TotalWaive = float(str(TotalWaive).replace(',',''))

	Prepaid = getPrepaidInsurance(LoanID=LoanID)
	if InsuranceObj:
		PastDue = float(InsuranceObj.PastDue)
		Actual  = float(InsuranceObj.ActualCollection)
		Remain += float(Prepaid) - (float(Actual) + float(TotalWaive))
		Remain = mktmoney.toMoney(float(Remain),mktmoney.getCurrencyObj(Currency))
		Remain = float(str(Remain).replace(',',''))

	TotalPay = Prepaid - Actual - float(TotalWaive)
	TotalPay = mktmoney.toMoney(float(TotalPay),mktmoney.getCurrencyObj(Currency))
	TotalPay = float(str(TotalPay).replace(',',''))

	# return TotalPay ,Prepaid , Actual, PastDue
	return {"TotalPay": TotalPay,
			"Prepaid" : Prepaid,
			"Actual"  : Actual,
			"PastDue" : PastDue,
			"Remain"  : Remain,
			"TotalWaive": TotalWaive,
			"WaivePD": WaivePD,
			"WaiveAmount": WaiveAmount}

def getPrepaidInsurance(LoanID):
	""" Method to get TotalInsurance of specific loan contract that FF buy for customer
		Args:
			LoanID (str): string Loan ID
		Return:
			float(Amount)
	"""
	Amount 		=	float(0)
	PaymentObj 	=	MKT_SCHEDULE_ADDON_PAYMENT.query.\
						filter(MKT_SCHEDULE_ADDON_PAYMENT.LoanID == LoanID)

	for row in PaymentObj:
		Amount+= float(row.Amount)

	return  Amount

def moveAddonToHist(**kwargs):
	""" Method to move related records of addon (insurance) to history. For loan amendment or loan write off.
		Flow:
			1. move record of (MKT_SCHEDULE_ADDON_PAYMENT	=> LoanID) 						to hist
		Args:
			LoanID 		(str)	: string Loan contract ID
		Return:
			None
	"""
	try:
		LoanID = kwargs.get("LoanID")
		if LoanID:
			PaymentObj = MKT_SCHEDULE_ADDON_PAYMENT.query.filter(MKT_SCHEDULE_ADDON_PAYMENT.LoanID == LoanID)
			for row in PaymentObj:				
				mktaudit.moveAUTHtoHIST(MKT_SCHEDULE_ADDON_PAYMENT,MKT_SCHEDULE_ADDON_PAYMENT_HIST,row.ID)
				mktdb.deleteRecord(MKT_SCHEDULE_ADDON_PAYMENT,[MKT_SCHEDULE_ADDON_PAYMENT.ID == row.ID])
	except Exception as e:
		db.session.rollback()
		raise (Exception("Error:%s"%e))