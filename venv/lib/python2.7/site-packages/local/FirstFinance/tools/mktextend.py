from app.Teller.models					import MKT_TELLER_INAU
from app.LoanAmendment.models			import MKT_LOAN_AMENDMENT_INAU
from app.Account.models					import MKT_ACCOUNT_INAU
from app.LoanContract.models			import MKT_LOAN_CONTRACT_INAU
from sqlalchemy 						import or_,and_


class ExtendModuleEx(object):

	def getDashboardUnauth(self):
		from app.tools.user 					import getUser
		CurrentUser = getUser().ID
		""" Syntax = { 'Label': ['URL', 'TABLE', 'CONDITION']}"""
		WBCondition = [MKT_TELLER_INAU.ID.like('%'+'WB'+'%')]
		DDCondition = [MKT_ACCOUNT_INAU.AccProduct == '101']
		TUCondition = [MKT_LOAN_AMENDMENT_INAU.ID.like('%'+'LT'+'%'),
						or_(
							and_(MKT_LOAN_AMENDMENT_INAU.Reviewer_1 != CurrentUser,
								MKT_LOAN_AMENDMENT_INAU.Reviewer_2 != CurrentUser),
							or_(MKT_LOAN_AMENDMENT_INAU.Reviewer_1 == None,
								MKT_LOAN_AMENDMENT_INAU.Reviewer_2 == None)
						)]

		LNCondition = [MKT_LOAN_AMENDMENT_INAU.ID.like('%'+'LN'+'%'),
						or_(
							and_(MKT_LOAN_AMENDMENT_INAU.Reviewer_1 != CurrentUser,
								MKT_LOAN_AMENDMENT_INAU.Reviewer_2 != CurrentUser),
							or_(MKT_LOAN_AMENDMENT_INAU.Reviewer_1 == None,
								MKT_LOAN_AMENDMENT_INAU.Reviewer_2 == None)
						)]

		LCCondition = [or_(
						and_(MKT_LOAN_CONTRACT_INAU.Reviewer_1 != CurrentUser,
							MKT_LOAN_CONTRACT_INAU.Reviewer_2 != CurrentUser),
						or_(MKT_LOAN_CONTRACT_INAU.Reviewer_1 == None,
							MKT_LOAN_CONTRACT_INAU.Reviewer_2 == None)
						)]

		DashboardConf   = {
				'Collateral Detail':        ['CollateralDetailEx',          'MKT_COLLATERAL_DE_INAU'                        ],
				'Customer':                 ['CustomerEx',                  'MKT_CUSTOMER_INAU'                             ],
				'Loan Application':         ['LoanApplicationEx',           'MKT_LOAN_APPLICATION_INAU'                     ],
				'Insurance':                ['ScheduleAddonEx',             'MKT_SCHEDULE_ADDON_INAU'                       ],
				'Insurance Payment':        ['ScheduleAddonPaymentEx',      'MKT_SCHEDULE_ADDON_PAYMENT_INAU'               ],
				'Loan Contract':            ['LoanContractEx',              'MKT_LOAN_CONTRACT_INAU',			LCCondition ],
				'Loan Amendment':           ['LoanAmendmentEx',             'MKT_LOAN_AMENDMENT_INAU',			LNCondition ],
				'Loan Top-up or Progressive': ['LoanTopup',                 'MKT_LOAN_AMENDMENT_INAU',			TUCondition ],
				'Withdrawal By Bank':       ['WithdrawalBankEx',            'MKT_TELLER_INAU',                  WBCondition ],
				'Drawdown Account':         ['DrawdownAccountEx',           'MKT_ACCOUNT_INAU',                 DDCondition ],
				'Loan Write-off':           ['LoanWriteOffEx',              'MKT_WRITE_OFF_INAU'                            ],
				'Waive Insurance':          ['ScheduleAddonPaymentWaive',   'MKT_SCHEDULE_ADDON_PAYMENT_WAIVE_INAU'         ],
				'Potential Customer Activity':['POCustomerActEx',          	'MKT_PO_CUSTOMER_ACT_INAU'],
				'Potential Customer'		:['POCustomerEx',          		'MKT_PO_CUSTOMER_INAU']
			}
		
		return DashboardConf

	def setListUrlExtend(self):
		""" Syntax = { "OLD_URL" : ['NEW_URL','TITLE']} """
		ListUrl = { 
					'Customer':             ['CustomerEx',                      'Customer'              ],
					'CollateralDetail':     ['CollateralDetailEx',              'Collateral Detail'     ],
					'LoanApplication':      ['LoanApplicationEx',               'Loan Application'      ],
					'Collateral':           ['CollateralEx',                    'Collateral'            ],
					'Account_DD':           ['DrawdownAccountEx',               'Drawdown Account'      ],
					'ScheduleAddon':        ['ScheduleAddonEx',                 'Insurance'             ],
					'ScheduleAddonParam':   ['ScheduleAddonParamEx',            'Schedule Addon Param'  ],
					'CBC':                  ['CBCEx',                           'CBC Enquiry'           ],
					'LoanContract':         ['LoanContractEx',                  'Loan Contract'         ],
					'LoanAmendment':        ['LoanAmendmentEx',                 'Loan Amendment'        ],
					'ChargeRate':           ['ChargeRateEx',                    'Charge Rate'           ],
					'WithdrawalBank':       ['WithdrawalBankEx',                'Withdrawal By Bank'    ],
					'LoanWriteOff':         ['LoanWriteOffEx',                  'Loan Write-off'        ],
					'LoanTopup':            ['LoanTopup',                       'Loan Topup'            ],
					'LoanWriteOffDetail':   ['LoanWriteOffDetailEx',        	'Loan Write-off Detail' ],
					'POCustomerAct':        ['POCustomerActEx',        			'Potential Customer Activity'],
					'POCustomer':        	['POCustomerEx',        			'Potential Customer'],
					'Rejected':        		['RejectedEx',        				'Rejected']

				}
		return ListUrl

	def setConfigNotification(self):
		""" Syntax = {'URL' : 'TITLE'}"""
		ConfigNotification = {  'LoanApprovalEx'            : 'Loan Approval',
								'LoanCancellation'          : 'Loan Cancellation',
								'DrawdownAccountEx'         : 'Drawdown Account',
								'ScheduleAddonEx'           : 'Insurance',
								'ScheduleAddonParamEx'      : 'Schedule Addon Param',
								'CBCEx'                     : 'CBC Enquiry',
								'LoanContractEx'            : 'Loan Contract',
								'LoanAmendmentEx'           : 'Loan Amendment',
								'LoanTopup'                 : 'Loan Topup',
								'ChargeRateEx'              : 'Charge Rate',
								'WithdrawalBankEx'          : 'Withdrawal By Bank',
								'LoanWriteOffEx'            : 'Loan Write-off',
								'LoanReviewDetail'			: 'Loan Review/Approve Detail'
								}

		return ConfigNotification

	def setFuncTempBuilder(self):
		import app.tools.mktaddress         as mktaddress
		import app.tools.loantools.rescheduletools as mktreschedule
		""" Syntax = {'FunctionName': 'Function'}"""

		FuncDict = {'getAddress'        : mktaddress.getAddress,
					'calculateCharge'   : mktreschedule.calculateCharge}

		return FuncDict