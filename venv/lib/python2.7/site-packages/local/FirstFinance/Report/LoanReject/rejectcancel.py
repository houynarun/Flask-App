from app.mktcore.imports						import *
from app.tools.mktcustomreport					import *
from app.Customer.models 						import *
from app.LoanApplication.models 				import *
from app.Rejected.models 						import *
from local.FirstFinance.LoanCancellation.models import *
import app.tools.mktaddress 					as mktaddress
import local.FirstFinance.Report.LoanPortfolio.portfolio 	as loanportfolio
import local.FirstFinance.Report.LoanInquiry.views 	as 	loaninquiry
import local.FirstFinance.Report.LoanReject.views 	as 	loanReject
import app.tools.user           				as mktuser
import local.FirstFinance.tools.mktloan as mktloan
import app.tools.mktdate 				as mktdate

class FRM_CUSTOM_REPORT_SEARCH_EX(FRM_CUSTOM_REPORT_SEARCH):
	ReportedDate 		=	DateTextField("Reported Date")
	# RejectedBy 			=	SelectField('Rejected By',
	# 						choices=[('', '--None--'),
	# 								 ('1','Client'),
	# 								 ('2','Company'),
	# 								 ],
	# 						coerce=str)

REJECTEDBY 	=	{	'1':'Client',
					'2':'Company',
					'3':'Mistake'
				 }

@app.route('/Morakot/Report/FF/LoanRejectCancelDetail', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getFFReportRejectCancelDetail():
	""" Route to view each report """
	try:		
		ErrorMsg    = []
		DefualtUrl 	= CUSTOM_REPORT.getDefaultReportUrl(CurrentUrl=url_for(request.endpoint))
		getCheck    = checkAccess(DefualtUrl,"Search")
		if getCheck != True: 
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)

		''' Setup parameters '''
		SystemBankDate = str(mktdate.getBankDate())
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else mktuser.getCurrentBranch()
		ReportedDate 	= 	request.args.get("ReportedDate") if "ReportedDate" in request.args else SystemBankDate
		RejectedBy 		=	request.args.get("RejectedBy") if "RejectedBy" in request.args else ""

		Result 			=	getReportRejectCancelDetail(Branch=Branch,ReportedDate=ReportedDate,RejectedBy=RejectedBy)
		Parameters 		= 	{"Branch": Branch,"ReportedDate": ReportedDate,"RejectedBy": RejectedBy}
		FilterOption 	=	""

		SearchForm 		= 	FRM_CUSTOM_REPORT_SEARCH_EX()
		return CUSTOM_REPORT.getCustomReportTemplate(Parameters		=	Parameters,
													Result 			=	Result,
													FilterOption 	=	FilterOption,
													SearchForm 		=	SearchForm)
	except:
		raise

@app.route('/Morakot/Report/FF/LoanRejectCancelDetail/Excel', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getFFReportRejectCancelDetailExport():
	""" Route to view each report """
	try:
		SystemBankDate = str(mktdate.getBankDate())
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else mktuser.getCurrentBranch()
		ReportedDate 	= 	request.args.get("ReportedDate") if "ReportedDate" in request.args else SystemBankDate

		Result 			=	getReportRejectCancelDetail(Branch=Branch,ReportedDate=ReportedDate)
		response 		= 	CUSTOM_REPORT.exportExcel(Result=Result,FileName="DetailsRejectionandConcallation")

		return response

	except Exception as e:
		raise

def getReportRejectCancelDetail(**kwargs):
	try:
		Branch 			= 	kwargs.get("Branch")
		ReportedDate 	=	kwargs.get("ReportedDate")
		RejectedBy 		=	kwargs.get("RejectedBy")
		
		ReportHeader 	=	CUSTOM_REPORT.getReportHeader()
		ReportHeader.update({"ReportTitle": "Details Rejection and Concallation"})
		ReportHeader.update({"Parameters": kwargs})

		Data 		= []
		TableHeader = {}

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'No', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="A")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Branch', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="B")

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Customer Name', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="C")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Application Date', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="D")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Phone Number', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="E")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Current Address', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="F")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Referral Source', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="G")

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Loan Type', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="H")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Currency', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="I")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Amount', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="J")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'LCYAmount', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="K")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Reason of Rejection/Concellation', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="L")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'RejectBy', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="M")

		Data = getRecordRejectCancelDetail(Branch=Branch,ReportedDate=ReportedDate,RejectedBy=RejectedBy)

		Result = {'ReportHeader': ReportHeader, 'TableHeader': TableHeader, 'Data':Data }

		return Result
	except:
		raise

def getRecordRejectCancelDetail(**kwargs):
	Branch 				=	kwargs.get("Branch","")
	ReportedDate 		= 	kwargs.get("ReportedDate","")
	RejectedBy 			=	kwargs.get("RejectedBy")
	Filter 				=	kwargs.get("Filter","")

	ReportedDateSplit 	=	ReportedDate.split()
	BranchSplit 		=	Branch.split()

	StartDate 		= 	""
	EndDate 		=	""

	if len(ReportedDateSplit) == 2:
		StartDate = ReportedDateSplit[0]
		EndDate   = ReportedDateSplit[1]

	SubRejectedObj 		=	loanReject.getRejectedObj().subquery()

	ApplicationObj 		=	db.session.query(MKT_LOAN_APPLICATION,
											 MKT_CUSTOMER,
											 SubRejectedObj.c.RejectedReason,SubRejectedObj.c.RejectedBy.label("RejectedBy"),
											 MKT_LOAN_CANCELLATION.Reason.label("CancelReason"),
											 MKT_LOAN_CANCELLATION.CancellationType.label("CancelBy")
											 ).\
										join(MKT_CUSTOMER,
											MKT_CUSTOMER.ID == MKT_LOAN_APPLICATION.LNCustomerID).\
										outerjoin(SubRejectedObj,
												  SubRejectedObj.c.LoanAppID == MKT_LOAN_APPLICATION.ID).\
										outerjoin(MKT_LOAN_CANCELLATION,
												  MKT_LOAN_CANCELLATION.LoanAppID == MKT_LOAN_APPLICATION.ID).\
										filter(MKT_LOAN_APPLICATION.AppStatus.in_(['4','5'])).\
										order_by(MKT_CUSTOMER.LastNameEn,MKT_CUSTOMER.FirstNameEn)


	if Branch and "ALL" not in BranchSplit:
		ApplicationObj = ApplicationObj.filter(MKT_LOAN_APPLICATION.Branch.in_(BranchSplit))

	if ReportedDate:
		if StartDate and EndDate:
			ApplicationObj = ApplicationObj.\
									filter(MKT_LOAN_APPLICATION.AppDate >= str(StartDate)).\
									filter(MKT_LOAN_APPLICATION.AppDate <= str(EndDate))
		else:
			ApplicationObj = ApplicationObj.\
									filter(MKT_LOAN_APPLICATION.AppDate.in_(ReportedDateSplit))
	if RejectedBy:
		ApplicationObj = ApplicationObj

	if Filter:
		ApplicationObj = ApplicationObj.filter(*Filter)

	RecordRow 		=	[]
	Index 			=	0
	TotLCYAmount 	=	0
	for row in ApplicationObj:
		AppObj 				=	row[0]
		CustomerObj 		= 	row[1]
		CustomerID 			=	AppObj.LNCustomerID
		FirstNameEN 		=	CustomerObj.FirstNameEn
		LastNameEn 			=	CustomerObj.LastNameEn
		AppDate 			=	AppObj.AppDate
		Mobile1 			=	CustomerObj.Mobile1
		Province 			=	CustomerObj.Province
		District 			=	CustomerObj.District
		Commune 			=	CustomerObj.Commune
		Village 			=	CustomerObj.Village
		HouseNo 			=	CustomerObj.HouseNo
		Street 				=	CustomerObj.Street 
		ReferralSource 		=	loaninquiry.getReferalSource(CustomerObj.ReferralSource)
		ProductType 		=	loaninquiry.getProductType(AppObj.LoanProduct)
		AppliedAmount 		=	AppObj.AppliedAmount
		Amount 				=	AppObj.Amount
		LCYAmount 			=	mktloan.toBaseCurrency(Amount=float(Amount), Currency=AppObj.Currency)
		CancelReason 		=	row.RejectedReason if AppObj.AppStatus == '4' else row.CancelReason

		Index 				+= 	1
		FullName 			=	LastNameEn +' '+FirstNameEN
		Address 			=	mktaddress.getAddress(	ProvinceID=Province,
														DistrictID=District,
														CommuneID=Commune,
														VillageID=Village,
														HouseNo=HouseNo,
														Street=Street,
														Locale='en',
														ShowLabel=False)
		# TotalAmount 		+=	Decimal(AppliedAmount)
		RejectedCancelBy 			=	row.RejectedBy if AppObj.AppStatus == '4' else row.CancelBy
		RejectedCancelBy 			=	REJECTEDBY.get(RejectedCancelBy) if RejectedCancelBy else 'Unknown'
		RecordRow.append((
							{
								1:{'Value':Index,'Class':'text-center'},
								2:{'Value':AppObj.Branch,'Class':'text-center'},
								3:{'Value':FullName},
								4:{'Value':AppDate},
								5:{'Value':Mobile1},
								6:{'Value':Address},
								7:{'Value':ReferralSource},
								8:{'Value':ProductType},
								9:{'Value':AppObj.Currency,'Class':'text-center'},
								10:{'Value':loanportfolio.getToMoney(Amount),'Class':'text-right'},
								11:{'Value':loanportfolio.getToMoney(LCYAmount),'Class':'text-right'},
								12:{'Value':CancelReason},#reason of rejected or cancellation
								13:{'Value':RejectedCancelBy}
							},{}
						)
						)
		TotLCYAmount+=LCYAmount
	#Total
	if TotLCYAmount > 0:
		RecordRow.append((
								{
									1:{'Value':""},
									2:{'Value':"Total"},
									3:{'Value':""},
									4:{'Value':""},
									5:{'Value':""},
									6:{'Value':""},
									7:{'Value':""},
									8:{'Value':""},
									9:{'Value':""},
									10:{'Value':""},
									11:{'Value':loanportfolio.getToMoney(TotLCYAmount),'Class':'text-right'},
									12:{'Value':""},#reason of rejected or cancellation
									13:{'Value':""}
								},{"Class":"text-right text-bold"}
							)
							)

	return RecordRow
	
										