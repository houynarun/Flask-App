# -*- coding: utf-8 -*-

'''
Report calculate LVR and NDI currently

'''
from app.mktcore.imports 		import *
from app.LoanApplication.models import *
from app.Customer.models 		import *
from app.LoanContract.models  	import *
from app.Currency.models 		import *
from app.Collateral.models 		import *
from app.LoanProduct.models 	import *
from app.RepaymentSchedule.models  import *
import app.tools.mktdate		as mktdate
import app.tools.mktmoney  	  	as mktmoney
import local.FirstFinance.tools.mktloan 		as localmktloan
import app.tools.user 		    as mktuser
from decimal 					import Decimal
from app.tools.mktcustomreport   import *

class FRM_CUSTOM_REPORT_SEARCH_EX(FRM_CUSTOM_REPORT_SEARCH):
	Branch 			=	TextField("Branch")
	CustomerName 		= 	TextField("Customer Name")
	Officer 		=	TextField("Officer-CC")
	CRO 	        = 	TextField("Officer-CRO")

@app.route('/Morakot/Report/FF/CrossSalesReport', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getLoanUpdateDetail():
	"""
	"""
	try:
		ErrorMsg    = []
		DefualtUrl 	= CUSTOM_REPORT.getDefaultReportUrl(CurrentUrl=url_for(request.endpoint))
		getCheck    = checkAccess(DefualtUrl,"Search")
		if getCheck != True: 
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)

		''' Setup parameters '''
		# SystemBankDate 	= 	str(mktdate.getBankDate())
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else mktuser.getCurrentBranch()
		CustomerName 	= 	request.args.get("CustomerName")
		Officer 		= 	request.args.get('Officer')
		CRO 			= 	request.args.get('CRO')
		BtnApply 		= 	request.args.get('ButtonApply') if "ButtonApply" in request.args else ""
		Result 			= 	""
		if BtnApply:
			Result 			=	getReport01(Branch=Branch,CustomerName=CustomerName,Officer=Officer,CRO=CRO)
		Parameters 		= 	{"Branch": Branch}
		FilterOption 	=	""

		SearchForm 		= 	FRM_CUSTOM_REPORT_SEARCH_EX()

		return CUSTOM_REPORT.getCustomReportTemplate(Parameters		=	Parameters,
													Result 			=	Result,
													FilterOption 	=	FilterOption,
													SearchForm 		=	SearchForm)
	except:
		raise

@app.route('/Morakot/Report/FF/CrossSalesReport/Excel', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getFFReportLoanUpdateDetail():
	""" Route to view each report """
	try:
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else mktuser.getCurrentBranch()
		CustomerName 	= 	request.args.get('CustomerName',"")
		Officer 		= 	request.args.get('Officer',"")
		CRO 			= 	request.args.get('CRO',"")
		Result 			=	getReport01(Branch=Branch,CustomerName=CustomerName,Officer=Officer,CRO=CRO)
		response 		= 	CUSTOM_REPORT.exportExcel(Result=Result,FileName="LoanUpdateDetailListing")

		return response

	except Exception as e:
		raise

def getReport01(**kwargs):
	try:
		ReportHeader 	=	CUSTOM_REPORT.getReportHeader()
		ReportHeader.update({"ReportTitle": "Cross Salse Report"})
		ReportHeader.update({"Parameters": kwargs})

		Data 		= []
		TableHeader = {}

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'No', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="A")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Customer ID', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="B")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Main Borrower', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="C")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Application ID', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="D")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Contact ID', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="E")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Disbursed\nDate', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="F")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Maturity\nDate', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="G")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Contact\nNumber', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="H")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Co-Borrower', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="I")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Currency', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="J")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'EMI', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="K")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Approved\nAmount', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="L")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Disbursed\nAmount', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="M")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Outstanding\nAmount', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="N")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Collateral\nValue', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="O")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Loan Product', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="P")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Int\nRate/Year', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="Q")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Tenor (Month)', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="R")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Live EMI/NDI (%)', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="S")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Live LVR (%)', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="T")
		

		Data = getRecord(**kwargs)

		Result = {'ReportHeader': ReportHeader, 'TableHeader': TableHeader, 'Data':Data }

		return Result
	except:
		raise

def getLoanObj(**kwargs):

	# kwargs paramenter
	Branch  	=	kwargs.get("Branch","")
	CustomerName  = 	kwargs.get("CustomerName","")
	Officer 		= 	kwargs.get("Officer","") # in customer Officer CCO 
	CRO 		= 	kwargs.get("CRO","") # in customer  alter table 
	LoanObj 	=	db.session.query(MKT_LOAN_APPLICATION.ID,
									 MKT_LOAN_APPLICATION.Amount,
									 MKT_LOAN_APPLICATION.CheckCoBorrower,
									 MKT_LOAN_APPLICATION.Currency,
									 MKT_LOAN_APPLICATION.Term,
									 MKT_LOAN_APPLICATION.InterestRate,
									 MKT_LOAN_APPLICATION.AppDate,
									 MKT_LOAN_APPLICATION.LoanProduct,
									 MKT_LOAN_APPLICATION.LNCustomerID,
									 MKT_LOAN_APPLICATION.EquivMonthlyRep,
									 MKT_LOAN_CONTRACT.ID.label('LoanID'),
									 MKT_LOAN_CONTRACT.MaturityDate,
									 MKT_LOAN_CONTRACT.ValueDate,
									 MKT_LOAN_CONTRACT.ApprovedAmount,
									 MKT_LOAN_CONTRACT.Disbursed,
									 MKT_LOAN_CONTRACT.OutstandingAmount,
									 MKT_CUSTOMER.ID.label('CusID'),
									 MKT_CUSTOMER.FirstNameEn,
									 MKT_CUSTOMER.LastNameEn,
									 MKT_CUSTOMER.Mobile1).\
								join(MKT_CUSTOMER,MKT_LOAN_APPLICATION.LNCustomerID==MKT_CUSTOMER.ID).\
								outerjoin(MKT_LOAN_CONTRACT,MKT_LOAN_APPLICATION.ID==MKT_LOAN_CONTRACT.LoanApplicationID).\
								filter(MKT_LOAN_APPLICATION.AppStatus=='3',
										MKT_LOAN_APPLICATION.TypeOfLoan=='1')
	if Branch:
		LoanObj 	= LoanObj.filter(MKT_LOAN_APPLICATION.Branch.in_(Branch.split()))

	if CustomerName:
		CustomerName = CustomerName.split()
		FirstNameEn  = CustomerName[0]
		LastNameEn 	 = FirstNameEn
		if len(CustomerName)>1:
			LastNameEn 	 = CustomerName[1]
		LoanObj  	= LoanObj.filter(or_(MKT_CUSTOMER.FirstNameEn.ilike('%'+FirstNameEn+'%'),
									 	MKT_CUSTOMER.LastNameEn.ilike('%'+LastNameEn+'%')))
	if Officer:
		LoanObj  	= LoanObj.filter(MKT_CUSTOMER.Officer==Officer)

	if CRO:
		LoanObj  	= LoanObj.filter(MKT_CUSTOMER.CRO==CRO)

	return LoanObj.order_by(MKT_CUSTOMER.LastNameEn.asc(),MKT_CUSTOMER.FirstNameEn.asc())

def getRecord(**kwargs):
	LoanObj = getLoanObj(**kwargs)
	if LoanObj:
		RecordList = []
		RecordDict = {}
		MultiDict  = {}
		No 		   = 1 # index
		for Row in LoanObj:
			AppID  		= Row.ID # loan application ID 
			LoanID 		= Row.LoanID if Row.LoanID else "" # loan contract ID
			DisbursedDate	= Row.ValueDate if Row.ValueDate else ""
			MaturityDate 	= Row.MaturityDate if Row.MaturityDate else ""
			FirstNameEn 	= Row.FirstNameEn
			LastNameEn 		= Row.LastNameEn
			CurrObj 		= MKT_CURRENCY.query.get(Row.Currency) #Application currency
			ApprovedAmount 	= Row.ApprovedAmount if Row.ApprovedAmount else Row.Amount # if application not yet have LC we use approved amount in Application
			ApprovedAmount 	= mktmoney.toMoney(float(ApprovedAmount),CurrObj)
			Disbursed 		= mktmoney.toMoney(float(Row.Disbursed),CurrObj) if Row.Disbursed else mktmoney.toMoney(float(0),CurrObj)
			OutstandingAmount = mktmoney.toMoney(float(Row.OutstandingAmount),CurrObj) if Row.OutstandingAmount else mktmoney.toMoney(float(0),CurrObj)
			MinCollateralValue,CollCurr = getMinCollateralValue(AppID)# get min collateral value
			TotCommitmentAmount 	= getTotCommitment(Row.CusID)
			if LoanID:
				CommitmentAmount 	=localmktloan.getCommitment(AppID)
				CommitmentAmount 	= CommitmentAmount.get('RepScheduleAmount') if CommitmentAmount.get('RepScheduleAmount') else 0
				CommitmentAmount 	= localmktloan.toBaseCurrency(float(CommitmentAmount),CurrObj.ID)
			else:

				CommitmentAmount  	= Row.EquivMonthlyRep

			NDI 			= getCurrentNDIRatio(ID=AppID,
												 CommitmentAmount=TotCommitmentAmount,
												)
			LVRRatio 		= getCurrentLVRRatio(AppID)
			RecordDict    	= {1: {'Value':No},
							   2: {'Value':Row.CusID},
							   3: {'Value':LastNameEn +' '+FirstNameEn},
							   4: {'Value':AppID},
							   5: {'Value':LoanID},
							   6: {'Value':DisbursedDate},
							   7: {'Value':MaturityDate},
							   8: {'Value':Row.Mobile1},
							   9: {'Value':Row.CheckCoBorrower},
							   10:{'Value':Row.Currency},
							   11:{'Value':mktmoney.toMoney(float(CommitmentAmount),CurrObj)},
							   12:{'Value':ApprovedAmount},
							   13:{'Value':Disbursed},
							   14:{'Value':OutstandingAmount},
							   15:{'Value':MinCollateralValue},
							   16:{'Value':"%s- %s"%(Row.LoanProduct,getLoanProductDes(Row.LoanProduct))},
							   17:{'Value':Row.InterestRate},
							   18:{'Value':Row.Term},
							   19:{'Value':NDI},
							   20:{'Value':LVRRatio}
							   }
			RecordList.append((RecordDict, {}))
			No+=1
		return RecordList

	else:
		return [({1: {'Value':''},
				   2: {'Value':''},
				   3: {'Value':''},
				   4: {'Value':''},
				   5: {'Value':''},
				   6: {'Value':''},
				   7: {'Value':''},
				   8: {'Value':''},
				   9: {'Value':''},
				   10:{'Value':''},
				   11: {'Value':''},
				   12:{'Value':''},
				   13: {'Value':''},
				   14:{'Value':''},
				   15:{'Value':''},
				   16:{'Value':''},
				   17: {'Value':''},
				   18:{'Value':''},
				   19: {'Value':''},
				   20: {'Value':''}
				   },{'Style': '', 'Class': 'text-right text-bold'})]

def getCurrentNDIRatio(**kwargs):
	"""
	Def:
		this method use to get Current NDI Ratio.
		We have two conditions at this time to get Current NDI Ratio
			-First Cond:
				Loan application  not yet use in LC we look up value from loan application on field EquivAmount
			-Second Cond:
				Loan application is used in LC we look up value from next installment of repayment schedule

	kwargs: 
		ID = loan application ID
		LoanID = loan contract ID
		EquivAmount= loan application EquivaMonthlyRep
	return :

		CurrentNDIRatio = Amount/ TotNDI

	"""
	CommitmentAmount 	= kwargs.get('CommitmentAmount')
	ID 					= kwargs.get('ID')
	TotNDI 				= getTotNDI(ID)
	CurrentNDIRatio  	= (float(CommitmentAmount)/float(TotNDI))*100 if TotNDI and CommitmentAmount else 0
	return mktmoney.formatNumber(CurrentNDIRatio)

def getMinCollateralValue(LoanAppID):
	'''
	param:
		LoanAppID : refer to loan application ID
	return:
		case : exist collateral
			return tuple of MinCollateralValue and Currency
		case : not exist collateral
			return blank tuple
	'''
	CollateralObj = db.session.query(MKT_COLLATERAL.Currency,
									 MKT_COLLATERAL.MinCollateralValue).\
									join(MKT_LOAN_COLLATERAL,MKT_LOAN_COLLATERAL.Collateral==MKT_COLLATERAL.ID).\
									filter(MKT_LOAN_COLLATERAL.ID==LoanAppID).first()
	if CollateralObj:
		Currency 		 	= CollateralObj.Currency
		MinCollateralValue 	= localmktloan.toBaseCurrency(float(CollateralObj.MinCollateralValue),Currency) if CollateralObj.MinCollateralValue else 0 # convert amunt to base currency amount
		return (MinCollateralValue,Currency)
	else:
		return ("","")

def getTotNDI(LoanAppID):
	'''
	param:
		LoanAppID : refer to loan application ID
	return :
		TotNDI= CusNDI + SpouseNDI
	'''
	LoanAppObj 	= MKT_LOAN_APPLICATION.query.get(LoanAppID)
	if LoanAppID:
		CusObj 	= MKT_CUSTOMER.query.get(LoanAppObj.LNCustomerID)
		SpoObj 	= MKT_CUSTOMER.query.get(LoanAppObj.SpouseID)
		CusNDI 	= localmktloan.getNDI(CusObj)
		SpoND   = localmktloan.getNDI(SpoObj)
		TotNDI  = CusNDI + SpoND
	else:
		TotNDI = ''
	
	return TotNDI

def getCurrentLVRRatio(LoanAppID):
	'''
	Amount is Amount in LA if LA not yet use in lc , if AL is used in lc  the amount is outstanding amount
	kwargs: 
		LoanAppID = loan application ID
	return :
		LVRRatio = (Collateral's Total_OF_APPLICATION_AMOUNT/MinCollateral Value)*100
	'''
	#look up application's collateral
	LoanCollObj = db.session.query(MKT_LOAN_COLLATERAL.Collateral).\
							filter(MKT_LOAN_COLLATERAL.ID==LoanAppID).first()
	if LoanCollObj:
		CollateralID = LoanCollObj.Collateral
		# look up collateral's applications
		ListCollObj  = db.session.query(MKT_LOAN_COLLATERAL.ID).\
									filter(MKT_LOAN_COLLATERAL.Collateral==CollateralID,
										  ~MKT_LOAN_COLLATERAL.ID.like('%LC%'))
		CollObj = MKT_COLLATERAL.query.get(CollateralID)

		MinCollateralValue = 0
		Amount 			   = 0

		if CollObj:
			MinCollateralValue = localmktloan.toBaseCurrency(float(CollObj.MinCollateralValue),CollObj.Currency)

		for Row in ListCollObj:
			#Row.ID # loan application ID 
			LoanAppObj = db.session.query(MKT_LOAN_APPLICATION.Amount,
										MKT_LOAN_APPLICATION.Currency,
										 MKT_LOAN_CONTRACT.OutstandingAmount,
										 MKT_LOAN_CONTRACT.LoanApplicationID).\
									outerjoin(MKT_LOAN_CONTRACT,MKT_LOAN_CONTRACT.LoanApplicationID==MKT_LOAN_APPLICATION.ID).\
									filter(MKT_LOAN_APPLICATION.ID==Row.ID,
										   MKT_LOAN_APPLICATION.AppStatus=='3',
										   MKT_LOAN_APPLICATION.TypeOfLoan=='1').first()
			if LoanAppObj:
				if LoanAppObj.LoanApplicationID:
					Amount  	+=	localmktloan.toBaseCurrency(float(LoanAppObj.OutstandingAmount),LoanAppObj.Currency) # Approved Amount converted to base currency
				else:
					Amount  	+=	localmktloan.toBaseCurrency(float(LoanAppObj.Amount),LoanAppObj.Currency) #
		LVRRatio = (Amount/MinCollateralValue)*100 if Amount and MinCollateralValue else 0
	else:
		LVRRatio= 0
	return mktmoney.formatNumber(LVRRatio)

def getLoanProductDes(LoanProductID):
	"""
	This method is use to get laon productdescription
	"""
	LoanProObj 	=	MKT_LOAN_PRODUCT.query.get(LoanProductID)
	if LoanProObj:
		Description = LoanProObj.Description
	else:
		Description = ""
	return Description

def getTotCommitment(CusID):
	"""
	Look up loan customer in loan application 
	"""
	AppObj = db.session.query(MKT_LOAN_APPLICATION.ID,	
							  MKT_LOAN_APPLICATION.EquivMonthlyRep,
							  MKT_LOAN_APPLICATION.Currency,
							  MKT_LOAN_CONTRACT.LoanApplicationID
							 ).\
							 outerjoin(MKT_LOAN_CONTRACT,MKT_LOAN_CONTRACT.LoanApplicationID==MKT_LOAN_APPLICATION.ID).\
							 filter(MKT_LOAN_APPLICATION.AppStatus=='3',
							 		MKT_LOAN_APPLICATION.TypeOfLoan=='1',
							 		MKT_LOAN_APPLICATION.LNCustomerID==CusID)
	if AppObj.first():
		TotCommitmentAmount =0 
		for Row in AppObj:
			if Row.LoanApplicationID:
				# application is used in LC
				CurrObj 			= MKT_CURRENCY.query.get(Row.Currency)
				CommitmentAmount 	=localmktloan.getCommitment(Row.ID)
				CommitmentAmount 	= CommitmentAmount.get('RepScheduleAmount') if CommitmentAmount.get('RepScheduleAmount') else 0
				TotCommitmentAmount 	+= localmktloan.toBaseCurrency(float(CommitmentAmount),CurrObj.ID)
			else:
				TotCommitmentAmount += float(Row.EquivMonthlyRep)

	else:
		TotCommitmentAmount =0 
	return TotCommitmentAmount

	