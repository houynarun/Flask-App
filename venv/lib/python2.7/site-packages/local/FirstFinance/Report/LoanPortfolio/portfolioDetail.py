# -*- coding: utf-8 -*-

'''
Report Name : PORTFOLIO DETAILS

'''
from sqlalchemy.sql.expression                         import           cast
from sqlalchemy                                        import *
import sqlalchemy
from decimal                    import *
from sqlalchemy.orm import aliased


from app.mktcore.imports        import *
import app.tools.mktmessage     as mktmessage
import app.tools.mktdate        as mktdate
from decimal                    import Decimal
from app.tools.mktcustomreport   import *
import local.FirstFinance.tools.mktloan as mktloan
import app.tools.mktmoney as mktmoney
import app.tools.mktsetting     as mktsetting
import app.tools.user           as mktuser

from app.LoanApplication.models     import *
from app.Customer.models            import *
from local.FirstFinance.Customer.models import *
from app.LoanProduct.models         import *
from app.Officer.models             import *
from app.Currency.models            import *
from app.LoanContract.models        import *
from app.LoanAmendment.models       import *
from app.Journal.models             import *
from app.Collateral.models          import *
import app.tools.mktreport          as  mktreport
import local.FirstFinance.Report.LoanPortfolio.portfolio  as FFPorfolio
from app.Charge.models 				import *
from app.ChargeRate.models 			import *


class FRM_CUSTOM_REPORT_SEARCH_EX(FRM_CUSTOM_REPORT_SEARCH):
	ReportedDate        =   DateTextField("Reported Date")

@app.route('/Morakot/Report/FF/DisbursedDetail', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getFFDisbursedDetail():

	try:
		ErrorMsg    = []
		DefualtUrl  = CUSTOM_REPORT.getDefaultReportUrl(CurrentUrl=url_for(request.endpoint))
		getCheck    = checkAccess(DefualtUrl,"Search")
		if getCheck != True: 
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)

		''' Setup parameters '''
		SystemBankDate 	= 	str(mktdate.getBankDate())
		Branch          =   request.args.get("Branch") if "Branch" in request.args  else mktuser.getCurrentBranch()
		ReportedDate    =   request.args.get("ReportedDate") if "ReportedDate" in request.args else SystemBankDate

		Result          =   setDisbursedDetail(Branch=Branch,
											   ReportedDate=ReportedDate)       

		Parameters      =   {"Branch": Branch,"ReportedDate": ReportedDate}
		FilterOption    =   ""      
		SearchForm      =   FRM_CUSTOM_REPORT_SEARCH_EX()

		return CUSTOM_REPORT.getCustomReportTemplate(Parameters     =   Parameters,
													Result          =   Result,
													FilterOption    =   FilterOption,
													SearchForm      =   SearchForm)
	except:
		raise

@app.route('/Morakot/Report/FF/DisbursedDetail/Excel', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getFFDisbursedDetailExcel():

	try:
		SystemBankDate 	= 	str(mktdate.getBankDate())
		Branch          =   request.args.get("Branch") if "Branch" in request.args  else mktuser.getCurrentBranch()
		ReportedDate    =   request.args.get("ReportedDate") if "ReportedDate" in request.args else SystemBankDate

		Result          =   setDisbursedDetail(Branch=Branch,
											   ReportedDate=ReportedDate)

		response        =   CUSTOM_REPORT.exportExcel(Result=Result,FileName="DisburedDetail" )

		return response

	except Exception as e:
		raise
	
def setDisbursedDetail(**kwargs):
	"""
	ByCategory: LoanProduct, CRO, CC
	"""
	try:
		Branch          =   kwargs.get("Branch")
		ReportedDate    =   kwargs.get("ReportedDate")

		ReportHeader    =   CUSTOM_REPORT.getReportHeader()
		ReportHeader.update({"ReportTitle": "Disbursement Detail"})
		ReportHeader.update({"Parameters": {"Branch": Branch,"ReportedDate": ReportedDate}})

		Data        = []
		TableHeader = {}

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'No', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="A")

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Branch', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="B")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Loan ID', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="C")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Customer Name', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="D")
		# TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Monthly Income', 
		# 									Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="E")
		# TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Spouse Monthly Income', 
		# 									Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="E")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Disbursed Date', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="E")

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Currency', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="F")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Disbursed', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="G")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'LCYDisbursed', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="H")
		#Additional Charge
		ColIndex 	= 	9
		DictCol		=	CUSTOM_REPORT.getColumn()
		ChargeObj  	= 	MKT_CHARGE.query
		for row in ChargeObj:
			Col = DictCol.get(ColIndex)			
			TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'%s' % row.Description, 
												Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol=Col)
			ColIndex = ColIndex + 1
			Col = DictCol.get(ColIndex)			
			TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'%s %s' % (row.Description,"Promotion"), 
												Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol=Col)
			ColIndex = ColIndex + 1
		#end
		Col = DictCol.get(ColIndex)			
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'%s' % "Net Amount", 
		
												Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol=Col)
		ColIndex = ColIndex + 1
		Col = DictCol.get(ColIndex)	

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Loan Product', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol=Col)

		ColIndex = ColIndex + 1
		Col = DictCol.get(ColIndex)	
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Client Profile', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol=Col)
		ColIndex = ColIndex + 1
		Col = DictCol.get(ColIndex)	
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Referral Source', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol=Col)
		ColIndex = ColIndex + 1
		Col = DictCol.get(ColIndex)	
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Title Type', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol=Col)
		ColIndex = ColIndex + 1
		Col = DictCol.get(ColIndex)	
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Source Of Income', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol=Col)
		ColIndex = ColIndex + 1
		Col = DictCol.get(ColIndex)	
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'CC', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol=Col)
		ColIndex = ColIndex + 1
		Col = DictCol.get(ColIndex)	
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'CRO', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol=Col)

		Data = getDisbursedDetail(Branch=Branch,ReportedDate=ReportedDate)

		Result = {'ReportHeader': ReportHeader, 'TableHeader': TableHeader, 'Data':Data }

		return Result
	except:
		raise

def getDisbursedDetail(**kwargs):
	"""
		Formular :
		--------------------------------------------------------------------------------- 
			Disbursed = DefultDisbursed (Filter by date) + TopUp (Filter by date)
		---------------------------------------------------------------------------------
		* DefaultDisbursed = LoanContractDibursed (filter by date) - ALLTopUp (Not filter by date)
		Flow:
			1. Find DefaultDisbursed
			2. Find TopUp
			3. Find Disbursed

	"""
	Branch 				= 	kwargs.get("Branch")
	ReportedDate 		=	kwargs.get("ReportedDate")

	BaseCurrency 		= 	mktsetting.getAccSetting().BaseCurrency

	RecordRow = []
	No = 1
	ContractObj = getDisbursedObj(**kwargs)
	TotLCYDisbursed = 0

	CLIENT_PROFILE 	= {"1": "Renter",
					  "2": "Living with parents/family",
					  "3": "Living in workplace",
					  "4": "Living in own house",
					  "5": "Evictees",
					  "6": "Used to own house",
					  "99": "Other"}

	SOURCE_OF_INCOME = {"1": "Salaried Employee",
					   "2": "Worker",
					   "3": "Civil Servant",
					   "4": "Self-Employed"}

	TITILE_TYPE = {"SoftTitle": "Soft Title",
				   "HardTitle": "Hard Title",
				   "LMap": "LMap",
				   "Other": "Other"}	

   	ChargeObj = MKT_CHARGE.query		

	for row in ContractObj:
		CustomerObj 	= MKT_CUSTOMER.query.get(row.CustomerID)
		LoanProductObj 	= MKT_LOAN_PRODUCT.query.get(row.LoanProduct)
		CCObj 			= MKT_OFFICER.query.get(row.CC) if row.CC else ""
		CROObj 			= MKT_OFFICER.query.get(row.CRO) if row.CRO else ""
		ReferralObj 	= MKT_REFERAL_SOURCE.query.get(row.ReferralSource) if row.ReferralSource else ""

		CustomerName 	= "%s %s" % (CustomerObj.LastNameEn,CustomerObj.FirstNameEn) if CustomerObj else ""
		LoanProduct  	= "%s - %s" % (LoanProductObj.ID,LoanProductObj.Description) if LoanProductObj else ""

		ClientProfile 	= CLIENT_PROFILE.get(row.ClientProfile) if row.ClientProfile in CLIENT_PROFILE else "Unknown"
		SourceOfIncome 	= SOURCE_OF_INCOME.get(row.SourceOfIncome) if row.SourceOfIncome in SOURCE_OF_INCOME else "Unknown"
		TitleType 		= TITILE_TYPE.get(row.TitleType) if row.TitleType in TITILE_TYPE else "Unknown"

		ReferralSource	= ReferralObj.Description if ReferralObj else "Unknown"
		CC 				= "%s - %s %s" % (CCObj.ID,CCObj.LastName,CCObj.FirstName) if CCObj else ""
		CRO				= "%s - %s %s" % (CROObj.ID,CROObj.LastName,CROObj.FirstName) if CROObj else ""

		LCYDisbursed = mktloan.toBaseCurrency(Amount=float(row.DefaultDisbursed), Currency=row.Currency)
		
		DictValue = {	1: 	{"Value":No,"Class": "text-center"},
						2:  {"Value":row.Branch,"Class":"text-center"},
						3:  {"Value":row.LoanID}, 
						4:  {"Value":CustomerName},
						5:  {"Value":row.DisbursedDate,"Class": "text-center"},
						6:  {"Value":row.Currency,"Class": "text-center"},
						7:  {"Value":mktmoney.toMoney(float(row.DefaultDisbursed),mktmoney.getCurrencyObj(row.Currency)),"Class": "text-right"},
						8:  {"Value":mktmoney.toMoney(float(LCYDisbursed),mktmoney.getCurrencyObj(BaseCurrency)),"Class": "text-right"}
					}
		TotCharge = 0
		TotPromotion = 0
		ColIndex = 9			
		for row_charge in ChargeObj:
			ID = ""
			if row.LoanID  == row.AmendID:
				ID = row.LoanID
			else:
				ID = row.AmendID

			ChargeAmountInfo = getChargeAmount(LoanID=ID,ChargeKey=row_charge.ID)
			ChargeAmount = ChargeAmountInfo[0]
			Promotion = ChargeAmountInfo[1]
			#Charge
			DictValue.update({ColIndex: {"Value": mktmoney.toMoney(float(ChargeAmount),mktmoney.getCurrencyObj(row.Currency)),"Class": "text-right"}})			
			ColIndex = ColIndex+1
			#Promtion
			DictValue.update({ColIndex: {"Value": mktmoney.toMoney(float(Promotion),mktmoney.getCurrencyObj(row.Currency)),"Class": "text-right"}})			
			ColIndex = ColIndex+1

			TotCharge = TotCharge + ChargeAmount
			TotPromotion = TotPromotion + Promotion

		NetAmount = row.DefaultDisbursed - TotCharge + TotPromotion

		DictValue.update({ColIndex: {"Value":mktmoney.toMoney(float(NetAmount),mktmoney.getCurrencyObj(row.Currency)),"Class": "text-right text-bold"}})
		ColIndex = ColIndex+1
		DictValue.update({ColIndex: {"Value":LoanProduct}})
		ColIndex = ColIndex+1
		DictValue.update({ColIndex: {"Value":ClientProfile}})
		ColIndex = ColIndex+1
		DictValue.update({ColIndex: {"Value":ReferralSource}})
		ColIndex = ColIndex+1
		DictValue.update({ColIndex: {"Value":TitleType}})
		ColIndex = ColIndex+1
		DictValue.update({ColIndex: {"Value":SourceOfIncome}})
		ColIndex = ColIndex+1
		DictValue.update({ColIndex: {"Value":CC}})
		ColIndex = ColIndex+1
		DictValue.update({ColIndex: {"Value":CRO}})
		ColIndex = ColIndex+1
		RecordRow.append((DictValue,{"Class":"text-left","Style": ""}))
		No+=1
		TotLCYDisbursed+=LCYDisbursed

	#Total	
	if TotLCYDisbursed > 0:
		TotDictValue = {1: {"Value":""},
							  2:  {"Value":""},
							  3:  {"Value":""}, 
							  4:  {"Value":""},
							  5:  {"Value":""},
							  6:  {"Value":""},
							  7:  {"Value":""},
							  8:  {"Value":mktmoney.toMoney(float(TotLCYDisbursed),mktmoney.getCurrencyObj(BaseCurrency)),"Class":"text-right text-bold"}}
		ColIndex = 9			
		for row_charge in ChargeObj:
			TotDictValue.update({ColIndex: {"Value": "","Class": "text-right"}})
			ColIndex = ColIndex+1

			TotDictValue.update({ColIndex: {"Value": "","Class": "text-right"}})
			ColIndex = ColIndex+1

		TotDictValue.update({ColIndex: {"Value":"","Class": "text-right"}})
		ColIndex = ColIndex+1
		TotDictValue.update({ColIndex: {"Value":""}})
		ColIndex = ColIndex+1
		TotDictValue.update({ColIndex: {"Value":""}})
		ColIndex = ColIndex+1
		TotDictValue.update({ColIndex: {"Value":""}})
		ColIndex = ColIndex+1
		TotDictValue.update({ColIndex: {"Value":""}})
		ColIndex = ColIndex+1
		TotDictValue.update({ColIndex: {"Value":""}})
		ColIndex = ColIndex+1
		TotDictValue.update({ColIndex: {"Value":""}})
		ColIndex = ColIndex+1
		TotDictValue.update({ColIndex: {"Value":""}})
		ColIndex = ColIndex+1

		RecordRow.append((TotDictValue,{"Class":"text-left","Style": ""}))
				
	return RecordRow

def getDisbursedObj(**kwargs):
	Branch 				= 	kwargs.get("Branch")
	ReportedDate 		=	kwargs.get("ReportedDate")
	#DefaultDisbured
	ContractObj = FFPorfolio.getLoanContractObj(**kwargs).subquery()
	TopupFilter = [MKT_LOAN_AMENDMENT.Operation == "AMT",MKT_LOAN_AMENDMENT.AddDeduct == "2"]
	ALLTopUpObj = FFPorfolio.getLoanAmendmentObj(Filter=TopupFilter).subquery()
	ALLTopUpObj = db.session.query(func.sum(ALLTopUpObj.c.Amount).label("Amount"),ALLTopUpObj.c.LoanID).\
							group_by(ALLTopUpObj.c.LoanID).subquery()

	ContractObj = db.session.query(ContractObj.c.Branch.label("Branch"),
								   ContractObj.c.ID.label("LoanID"),
								   ContractObj.c.ContractCustomerID.label("CustomerID"),
								   ContractObj.c.MonthlyIncome.label("MonthlyIncome"),
								   ContractObj.c.SpouseMonthlyIncome.label("SpouseMonthlyIncome"),
								   ContractObj.c.Currency.label("Currency"),
								   (ContractObj.c.Disbursed - func.coalesce(ALLTopUpObj.c.Amount, 0)).label("DefaultDisbursed"),
								   ContractObj.c.LoanProduct.label("LoanProduct"),
								   ContractObj.c.HouseOwnership.label("ClientProfile"),
								   ContractObj.c.ReferralSource.label("ReferralSource"),
								   ContractObj.c.TitleType.label("TitleType"),
								   ContractObj.c.SourceOfIncome.label("SourceOfIncome"),
								   ContractObj.c.ContractOfficerID.label("CC"),
								   ContractObj.c.CRO.label("CRO"),
								   ContractObj.c.ValueDate.label("DisbursedDate"),
								   ContractObj.c.AllMonthlyIncome.label("AllMonthlyIncome"),
								   ContractObj.c.ID.label("AmendID"),
								   ).\
								outerjoin(ALLTopUpObj,
										    ContractObj.c.ID==ALLTopUpObj.c.LoanID)
	#Topup Disbursed
	# TopupFilter = TopupFilter.append([MKT_LOAN_CONTRACT.DisbursedStat=="Y",MKT_LOAN_CONTRACT.OutstandingAmount>0])
	kwargs.update({"Filter": TopupFilter})
	TopUpObj = FFPorfolio.getLoanAmendmentObj(**kwargs).subquery()
	TopUpObj = db.session.query(TopUpObj.c.Branch.label("Branch"),
								   TopUpObj.c.LoanID.label("LoanID"),
								   TopUpObj.c.ContractCustomerID.label("CustomerID"),
								   TopUpObj.c.MonthlyIncome.label("MonthlyIncome"),
								   TopUpObj.c.SpouseMonthlyIncome.label("SpouseMonthlyIncome"),
								   TopUpObj.c.Currency.label("Currency"),
								   TopUpObj.c.Amount.label("DefaultDisbursed"),
								   TopUpObj.c.LoanProduct.label("LoanProduct"),
								   TopUpObj.c.HouseOwnership.label("ClientProfile"),
								   TopUpObj.c.ReferralSource.label("ReferralSource"),
								   TopUpObj.c.TitleType.label("TitleType"),
								   TopUpObj.c.SourceOfIncome.label("SourceOfIncome"),
								   TopUpObj.c.ContractOfficerID.label("CC"),
								   TopUpObj.c.CRO.label("CRO"),
								   TopUpObj.c.AmendDate.label("DisbursedDate"),
								   TopUpObj.c.AllMonthlyIncome.label("AllMonthlyIncome"),
								   TopUpObj.c.ID.label("AmendID"),
								   )

	ContractObj = ContractObj.union(TopUpObj).subquery()
	ContractObj = db.session.query(ContractObj).order_by(ContractObj.c.LoanID)

	return ContractObj

def getChargeAmount(**kwargs):
	LoanID 			= kwargs.get("LoanID","")
	ChargeKey 		= kwargs.get("ChargeKey","")
	LoanChargeObj 	= db.session.query(	func.sum(MKT_LOAN_CHARGE.ChargeEarned).label('SumChargeEarned'), # change to default charge
										func.sum(MKT_LOAN_CHARGE.ChargeUnearned).label('SumChargeUnearned'),
										func.sum(MKT_LOAN_CHARGE.PromotionAmount).label('SumPromotionAmount'),
										func.sum(MKT_LOAN_CHARGE.DefaultCharge).label('SumDefaultChargeAmount'))
	if LoanID:
		LoanChargeObj = LoanChargeObj.filter(MKT_LOAN_CHARGE.ID == str(LoanID))
								
	if ChargeKey:
		LoanChargeObj = LoanChargeObj.filter(MKT_LOAN_CHARGE.ChargeKey == str(ChargeKey))

	LoanChargeObj = LoanChargeObj.first()
	ChargedAmount = 0
	PromtionAmount = 0
	if LoanChargeObj:
		# SumChargeEarned 	= LoanChargeObj.SumChargeEarned if LoanChargeObj.SumChargeEarned else 0
		# SumChargeUnearned 	= LoanChargeObj.SumChargeUnearned if LoanChargeObj.SumChargeUnearned else 0
		# ChargedAmount 		= SumChargeEarned + SumChargeUnearned 
		ChargedAmount = LoanChargeObj.SumDefaultChargeAmount if LoanChargeObj.SumDefaultChargeAmount else 0

		PromtionAmount 		= LoanChargeObj.SumPromotionAmount if LoanChargeObj.SumPromotionAmount else 0

	return ChargedAmount, PromtionAmount