# -*- coding: utf-8 -*-

'''
Report Name : Example Report

'''

from app.mktcore.imports 		import *
import app.tools.mktmessage 	as mktmessage
import app.tools.mktdate		as mktdate
from decimal 					import Decimal
from app.tools.mktcustomreport   import *

class FRM_CUSTOM_REPORT_SEARCH_EX(FRM_CUSTOM_REPORT_SEARCH):
	ReportedDate 		=	DateTextField("Reported Date")

@app.route('/Morakot/Report/FF/ReportExample', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getFFReportExample():
	""" Route to view each report """
	try:		
		ErrorMsg    = []
		DefualtUrl 	= CUSTOM_REPORT.getDefaultReportUrl(CurrentUrl=url_for(request.endpoint))
		getCheck    = checkAccess(DefualtUrl,"Search")
		if getCheck != True: 
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)

		''' Setup parameters '''
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else ""
		ReportedDate 	= 	request.args.get("ReportedDate") if "ReportedDate" in request.args else ""

		Result 			=	getReport01(Branch=Branch,ReportedDate=ReportedDate)
		Parameters 		= 	{"Branch": Branch,"ReportedDate": ReportedDate}
		FilterOption 	=	""

		# html = CUSTOM_REPORT.getCustomReportTemplate()
		SearchForm 		= 	FRM_CUSTOM_REPORT_SEARCH_EX()
		return CUSTOM_REPORT.getCustomReportTemplate(Parameters		=	Parameters,
													Result 			=	Result,
													FilterOption 	=	FilterOption,
													SearchForm 		=	SearchForm)	
	except:
		raise

@app.route('/Morakot/Report/FF/ReportExample/Excel', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getFFReportExampleExport():
	""" Route to view each report """
	try:
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else ""
		ReportedDate 	= 	request.args.get("ReportedDate") if "ReportedDate" in request.args else ""

		Result 			=	getReport01(Branch=Branch,ReportedDate=ReportedDate)
		response 		= 	CUSTOM_REPORT.exportExcel(Result=Result,FileName="ExampleReport")

		return response

	except Exception as e:
		raise

def getReport01(**kwargs):
	try:
		Branch 			= 	kwargs.get("Branch")
		ReportedDate 	=	kwargs.get("ReportedDate")
		
		ReportHeader 	=	CUSTOM_REPORT.getReportHeader()
		ReportHeader.update({"ReportTitle": "Example Report"})
		ReportHeader.update({"Parameters": kwargs})

		Data 		= []
		TableHeader = {}

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'One', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="A")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Two', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="B")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Three', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="C")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Four', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="D")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Five', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center",ExcelCol="E")

		Data = getRecordRow(Branch=Branch,ReportedDate=ReportedDate)

		Result = {'ReportHeader': ReportHeader, 'TableHeader': TableHeader, 'Data':Data }

		return Result
	except:
		raise


def getRecordRow(**kwargs):
	Branch 			= 	kwargs.get("Branch")
	ReportedDate 	=	kwargs.get("ReportedDate")

	RecordRow = []
	RecordRow.append(({ 1:{"Value":"1"},
						2:{"Value":"2"},
						3:{"Value":"3"},
						4:{"Value":"4"},
						5:{"Value":"5"}
					  },
					  {"Class":"text-right text-bold"}))
	return RecordRow