from app                    		import db
from app.Customer.models            import *
from app.Account.models 			import *
from app.FundTransfer.models		import *
from app.Teller.models		 		import *
from app.Notification.models 		import *

import app.tools.mktdate    		as mktdate
import app.tools.mktsetting  		as mktsetting
import app.tools.mktmoney 			as mktmoney
from app.tools.mktnotificationgateway import CLS_NOTIFICATION_GATEWAY
from app.NotificationScript.NotifyAfterPaymentSuccess import CLS_NotifyAfterPaymentSuccess

class CLS_FFNotifyAfterPaymentSuccess(CLS_NotifyAfterPaymentSuccess):
	def __init__(self,**kwargs):
		pass

	def getRecords(self,**kwargs):
		"""
		- param:
			-kwargs key:
				- DrCategoryList = type list , list of category that consider as payment from customer

		"""
		Result				=   {}
		FundTransferObj, TellerObj 	= 	self.getQueryObj(**kwargs)		

		#filter duplicate send out ... base on reference
		NOTIFY_GATEWAY  = CLS_NOTIFICATION_GATEWAY()
		FundTransferObj = NOTIFY_GATEWAY.checkGatewayReference(TableObj=FundTransferObj,ReferenceField=MKT_FUND_TRANSFER.ID,NotifyType=kwargs.get("NotifyType"))
		TellerObj = NOTIFY_GATEWAY.checkGatewayReference(TableObj=TellerObj,ReferenceField=MKT_TELLER.ID,NotifyType=kwargs.get("NotifyType"))

		FundTransferObj = FundTransferObj.union(TellerObj)
		FundTransferObj = FundTransferObj.limit(5)
			
		Recipients     	= 	[]
		RecipientsData 	= 	{}
		CommonData     	= 	{}
		References 		= 	[]

		if FundTransferObj.first():
			for Row in FundTransferObj:
				DepositObj  	= Row.__dict__
				AccountObj 		= MKT_ACCOUNT.query.get(Row.AccountID)
				CustomerObj 	= MKT_CUSTOMER.query.get(Row.CustomerID)

				AccountObj 		= AccountObj.__dict__
				CustomerObj 	= CustomerObj.__dict__

				Amount =  mktmoney.toMoney(float(Row.Amount),mktmoney.getCurrencyObj(Row.CrCurrency))
				DepositObj.update({"AmountFormatMoney": Amount})

				#remove _sa_instance_state obj
				if "_sa_instance_state" in DepositObj.keys():
					del DepositObj['_sa_instance_state']

				if "_sa_instance_state" in AccountObj.keys():
					del AccountObj['_sa_instance_state']

				if "_sa_instance_state" in CustomerObj.keys():
					del CustomerObj['_sa_instance_state']

				CusID = DepositObj.get('CustomerID')
				Recipients.append(CusID)
				References.append(DepositObj.get('ID'))
				RecipientsData.update({CusID:{"Deposit"	    :DepositObj,
											  "Account"	    :AccountObj,
											  "Customer"	:CustomerObj}
									  })
				CommonData = {}
		#keep that three key in dictionary 
		Result = {
					"Recipients" 	:Recipients,
					"References"	:References,
					"RecipientsData":RecipientsData,
					"CommonData"	:CommonData
				 }

		return Result

NOTIFY = CLS_FFNotifyAfterPaymentSuccess()
