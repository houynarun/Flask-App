from app.mktcore.wtfimports 	import *
from sqlalchemy 				import *
from app.GroupLoan.models 		import *
from app.TemplateBase.models 	import *

import app.tools.mktloanapplication 		as mktloanapp
import app.tools.mktdate	 				as mktdate

from app.GroupLoan.generategrouploans 		import *

def loadTemplateBase():
	return MKT_TEMPLATE_BASE.query

class FRM_GENERATE_GROUP_LOAN_CONTRACT_EX(FRM_GENERATE_GROUP_LOAN_CONTRACT):
	ContractVB 			= 	RemoteTextField(requiredlabel("Village Bank/Centre", "*"),
							validators=[validators.Required()])
	Group 				= 	QuerySelectField(requiredlabel('Group','*'),
							query_factory=loadGroupID,
							get_label=lambda a: a.ID + " - " + a.GroupName,
							allow_blank=True,
							blank_text=u'--None--',
							validators=[validators.Required()])
	Currency 			= 	QuerySelectField(requiredlabel(getLanguage("Currency"), "*"),
							query_factory=loadCurrency,
							get_label=u'ID',
							allow_blank=True,
							blank_text=u'--%s--' %getLanguage("None"))

	ValueDate 			= 	DateField(requiredlabel(getLanguage("Value Date"), "*"), default=loanBankDate)
	FirstCollectionDate =	DateField("First Collection Date", [validators.Optional()])
	Cycle 				= 	IntegerField(requiredlabel(getLanguage("Cycle"), "*"), [validators.Required()], default=1)
	MaturityDate 		= 	DateField(getLanguage("Maturity Date"), [validators.Optional()])
	LoanProduct 		= 	QuerySelectField(requiredlabel(getLanguage("Loan Product"), "*"),
							query_factory=loadLoanProduct,
							get_label=u'Description',
							allow_blank=True,
							blank_text=u'--%s--' %getLanguage("None"),)
	Category 			= 	TextField("Category")
	InterestRate 		= 	TextField("Interest Rate")
	IRR 				= 	TextField("IRR")
	FreqType 			= 	SelectField(requiredlabel(getLanguage("Frequency Type"), "*"),
							choices=[('1', '1. %s' %getLanguage('Monthly')), 
									 ('2', '2. %s' %getLanguage("Weekly")),
									 ('3', '3. %s' % "Daily")],
							coerce=str
						)
	Frequency 			= 	IntegerField("Frequency",default=1)
	Term 				= 	TextField(requiredlabel("%s (%s)" %(getLanguage("Term"), getLanguage("Month")), "*"),default=1)
	Installment 		= 	IntegerField("Installment",default=1)

	DeliqMode 			= 	SelectField(requiredlabel(getLanguage('Deliquency Mode'), '*'),
							choices=[('3', '3. %s' %getLanguage("Semi-Automatic")),
									 ('2', '2. %s' %getLanguage("Automatic")),
									 ('1', '1. %s' %getLanguage("Manual"))],
							coerce=str,
						)
	LoanType 			= 	SelectField(requiredlabel(getLanguage('Loan Type'), '*'),
							choices=[('N', '%s' %getLanguage("Normal")),
									 ('R', '%s' %getLanguage("Restructured"))],
							coerce=str,
							default='N')
	MoreThanOneYear 	= 	TextField("More Than One Year")
	ContractOfficerID 	= 	QuerySelectField(requiredlabel(getLanguage('Officer'),'*'),
							query_factory=loadOfficer,
							get_label=lambda a: a.ID + " - " + a.LastName + " " +a.FirstName,
							allow_blank=True,
							blank_text=u'--None--')
	PrincipalFreq 		= 	IntegerField(requiredlabel("Principal Frequency", "*"),
							default=1)
	InterestFreq 		= 	IntegerField(requiredlabel("Interest Frequency", "*"),
							default=1)
	Charge				= 	TextField(getLanguage("Charge"),
							default=0)
	RepMode 			= 	SelectField(requiredlabel("Repayment Mode", "*"),
							choices=[('1', 'Declining'),
									 ('2', 'Annuity'),
									 ('3', 'Flat'),
									 ('4', 'IRR'),
									 ('6', 'Template Base')],
							coerce=str,
							validators=[validators.Required()]
						)

	FwdBwdKey 			= 	SelectField(requiredlabel("Fwd/Bwd Key", "*"),
							choices=[('0','No Holiday'),
									 ('1','Backward within month'),
									 ('2','Forward within month'),
									 ('3','Backward'),
									 ('4','Forward')],
							coerce=str,
							default='1',
							validators=[validators.Required()]
							)
	BaseDateKey 		= 	SelectField('Base Date Key',
									choices=[('1', '1. Value Date'),
											 ('2', '2. Previous Date'),
											 ('3', '3. First Date'),
											 ('4', '4. Week Day')],
									coerce=str
							)
	TemplateBase 		= QuerySelectField("Template Base",
							query_factory=loadTemplateBase,
							get_label=u'Description',
							allow_blank=True,
							blank_text=u'--None--')

	@staticmethod
	def hotField():
		base 			= super(FRM_GENERATE_GROUP_LOAN_CONTRACT_EX, FRM_GENERATE_GROUP_LOAN_CONTRACT_EX).hotField()
		hotfield 		= []

		fielddisplay 	= "$('#TemplateBase').select2('data', {'id':data.resultDict.ID,'text':data.resultDict.Description});"
		fielddisplay 	+= "$('#RepMode').select2('data', {'id':data.resultDict.RepID,'text':data.resultDict.RepDesc});"
		fielddisplay 	+= "$('#FwdBwdKey').select2('data', {'id':data.FwdBwdKey,'text':data.FBKDes});"
		fielddisplay 	+= "$('#BaseDateKey').select2('data', {'id':data.BaseDateKey,'text':data.BDKDes});"
		varname 		= "ContractVB:$('#ContractVB').val(), Group:$('#Group').val()"
		fun 			= ["Group", varname, fielddisplay, "/Morakot/getTemplateBaseGenerateGroupLoan", "change"]
		hotfield.append(fun)

		hotfield.extend(base)
		return hotfield

	@staticmethod
	def setVisible():
		base 			= super(FRM_GENERATE_GROUP_LOAN_CONTRACT_EX, FRM_GENERATE_GROUP_LOAN_CONTRACT_EX).setVisible()
		control_list = [("RepMode"),("TemplateBase"),("FwdBwdKey"),("BaseDateKey")]

		control_list.extend(base)
		return control_list