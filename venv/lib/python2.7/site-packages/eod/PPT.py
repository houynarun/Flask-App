from decimal import *

import app.tools.mktaccounting as mktaccounting
import app.tools.mktdate as mktdate
import app.tools.mktgl as mktgl
import app.tools.mktmessage as mktmessage
import app.tools.mktmoney as mktmoney
import app.tools.mktsetting as mktsetting
from app import db
from app.Branch.models import MKT_BRANCH
from app.Currency.models import MKT_CURRENCY
from app.FinancialReport.models import MKT_LINE_REPORT_DE
from app.GLBalance.models import MKT_GL_BALANCE
from app.Setting.models import MKT_APP_SETTING


def getListBranch():

	ListBranch = []
	BranchObj = MKT_BRANCH.query

	if BranchObj:
		ListBranch = [x.ID for x in BranchObj]

	return ListBranch


def getPPTAppSetting():
	PPTConfig               = {}
	PPTConfig['PPTBooking'] = mktsetting.getAppSetting('PPTBooking')
	PPTConfig['PPTIncome']  = mktsetting.getAppSetting('PPTIncome')
	PPTConfig['PPTPercent'] = mktsetting.getAppSetting('PPTPercent')
	PPTConfig['PPTDrCat']   = mktsetting.getAppSetting('PPTDrCat')
	PPTConfig['PPTCrCat']   = mktsetting.getAppSetting('PPTCrCat')
	PPTConfig['PPTTrans']   = mktsetting.getAppSetting('PPTTrans')
	PPTConfig['PPTIncomeLineID'] = mktsetting.getAppSetting('PPTIncomeLineID')
	return PPTConfig


def runPPT(PPTConfig, ListBranch):

	try:

		PPTBooking = PPTConfig['PPTBooking']

		if PPTBooking == 'Y':

			# Updating GL for all Branch
			mktgl.updateGLBalanceAllBranch()

			print "==============================="
			print "           PPT BOOKING         "
			print "==============================="

			# Total Income for booking tax expense
			ListLineIncome = PPTConfig['PPTIncome'].split()

			print "Line Number for booking tax expense: %s" % " ".join(ListLineIncome)

			# Percentage of booking tax expense
			# Not yet divived by 100
			Percent = Decimal(PPTConfig['PPTPercent'])

			print "Percentage of booking tax expense: %.2f" % Percent

			# Tax Expense
			DrCategory = PPTConfig['PPTDrCat']

			print "Debit Category: %s" % DrCategory

			# Tax Payable
			CrCategory = PPTConfig['PPTCrCat']

			print "Credit Category: %s" % CrCategory

			# Transaction of booking
			Transaction = PPTConfig['PPTTrans']

			print "Transaction ID: %s" % Transaction

			# ID Line Report of Income Statement
			IncomeLineID = PPTConfig['PPTIncomeLineID']

			print "Line Report ID of Income Statement: %s" % IncomeLineID

			SystemBankDate = str(mktdate.getBankDate())

			Createdon = mktdate.getDateTimeNow()
			Authorizeon = mktdate.getDateTimeNow()
			AccSetting = 	mktsetting.getAccSetting() #Get Acccounting Setting

			Currency = AccSetting.BaseCurrency

			print "Booking Currency: %s" % Currency

			DrGLKey = mktaccounting.getConsolKey(DrCategory, Currency)
			CrGLKey = mktaccounting.getConsolKey(CrCategory, Currency)

			print "Debit GL Key: %s" % DrGLKey
			print "Credit GL Key: %s" % CrGLKey

			Inputter = 'System'
			Authorizer = 'System'
			Mode = 'Direct'
			Reference = 'PPT%s' % SystemBankDate.replace('-', '')
			Module = 'PPT'

			GLTable = MKT_GL_BALANCE
			GLObj = GLTable.query


			for Branch in ListBranch:

				TotalIncome = Decimal(0)

				print "\nBooking For %s\n" % Branch

				for Line in ListLineIncome:

					# 0 For Current Month Balance
					TotalIncome += Decimal(mktgl.getReportSubTotal(IncomeLineID, Line, Currency, Branch,'0', GLTable, GLObj))


				print "Total Income from Line Report ID: %s by Line Number: %s = %.2f %s" \
									% (IncomeLineID, " ".join(ListLineIncome), TotalIncome, Currency)

				AmtBooking = TotalIncome * Percent

				# Convert Amount of Booking to mktmoney
				AmtBooking = mktmoney.toMoney(float(AmtBooking),mktmoney.getCurrencyObj(Currency))
				AmtBooking = Decimal(str(AmtBooking).replace(',',''))

				print "\tAmount to be booked %f %s\n" % (AmtBooking, Currency)

				if AmtBooking > 0:

					# Debit
					mktaccounting.postAccounting(
					"AUTH", 				# Status
					"0", 					# Curr
					Inputter,				# Inputter
					Createdon, 				# Createdon
					Authorizer,				# Authorizer
					Authorizeon,			# Authorizeon
					"", 					# AEID
					"",						# Account
					DrCategory,				# Category
					Currency,				# Currency
					"Dr",					# DrCr
					AmtBooking, 	# Amount
					Module,					# Module
					Transaction, 			# Transaction
					SystemBankDate, 		# TransactionDate
					Reference, 				# Reference
					"", 					# Note
					"", 					# JNID
					Branch,					# Branch
					DrGLKey,				# GL_KEYS
					Mode 					# Mode check to insert Journal for category
					)

					#Credit
					mktaccounting.postAccounting(
					"AUTH", 				# Status
					"0", 					# Curr
					Inputter,				# Inputter
					Createdon, 				# Createdon
					Authorizer,				# Authorizer
					Authorizeon,			# Authorizeon
					"", 					# AEID
					"",						# Account
					CrCategory,				# Category
					Currency,				# Currency
					"Cr",					# DrCr
					AmtBooking, 	# Amount
					Module,					# Module
					Transaction, 			# Transaction
					SystemBankDate, 		# TransactionDate
					Reference, 				# Reference
					"", 					# Note
					"", 					# JNID
					Branch,					# Branch
					CrGLKey,				# GL_KEYS
					Mode 					# Mode check to insert Journal for category
					)

			# commit to db
			db.session.commit()

	except Exception, e:

		db.session.rollback()
		mktmessage.setLogError("File: PPT.py Function: runPPT() Message: %s" % e)
		raise e

runPPT(getPPTAppSetting(), getListBranch())
