# -*- coding: utf-8 -*-
'''
Report Name: Break-down Of Deposits
'''

from app.mktcore.imports 		import *
import app.tools.mktdate 		as mktdate
import app.tools.mktsetting 	as mktsetting
import app.tools.mktmoney 		as mktmoney
import app.tools.mktnbc			as mktnbc
import app.tools.mktmessage 	as mktmessage
from app.AccSetting.models 		import *
from app.Currency.models 		import MKT_CURRENCY
from app.Category.models 		import *
from app.AccProduct.models 		import *
from app.Account.models 		import MKT_ACCOUNT
from app.InterestRate.models 	import MKT_INTEREST_RATE



@app.route('/Morakot/Report/N004', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getNBCReportN004(getID=""):
	try:

		ErrorMsg 	= []
		getCheck 	= checkAccess("/Morakot/Report/N004/","Search")
		if getCheck != True: 
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)

		Branch 			=	request.args.get("Branch") if "Branch" in request.args else session.get("ChangeBranch")
		Period 			=	request.args.get("Period") if "Period" in request.args else 6
		ReportedDate 	=	request.args.get("ReportedDate") if "ReportedDate" in request.args else mktdate.getBankDate()
		
		ReportingRate 	= 	mktsetting.getAppSetting('NBCExchangeRate')
		Result 			= 	getN004(Branch, ReportedDate)
		html 			=	"nbc/nbc_breakdowndeposit.html"
		ReportHeader 	= 	Result['ReportHeader']
		ColumnHeader 	= 	Result['ColumnHeader']
		Data 			= 	Result['Data']
		Language 		=	mktnbc.getDefaultLang()

		ReportingRate 	=	mktnbc.getDisplayReportingRate('', '', Period)

		return render_template(html,
								str=str,
								mktmoney 		=	mktmoney,
								float 			=	float,
								ReportingRate 	=	ReportingRate,
								ReportHeader 	=	ReportHeader,
								ColumnHeader 	=	ColumnHeader,
								Data 			=	Data,
								Language 		=	Language,
								getLang 		=	mktmessage.getNBCLang,
								ID 				=	"N004",
								Branch 			=	Branch,
								Period 			=	Period,
								ReportedDate 	=	ReportedDate
								)

	except:
		raise

def getN004(Branch="ALL", ReportedDate=""):

	CompanyName = 	mktnbc.getCompanyName()
	Language 	=	mktnbc.getDefaultLang()
	Result 		= 	{}

	ReportHeader ={
				'ReportName': mktmessage.getNBCLang(Language, '110074'),
				'CompanyName': CompanyName, 
				'AsAt': mktdate.toDateShort(ReportedDate, mktmessage.getNBCLang(Language, '110000')), 
				'Form': 'NBC004', 
				'Title': mktmessage.getNBCLang(Language, '110001')
				}
	ColumnHeader	={	
			'background': '#99FFCC',
			
			}
	Data 		= getBreakDownDeposit(Branch)
	Result.update({'ReportHeader':ReportHeader,'ColumnHeader':ColumnHeader,'Data':Data})
	return Result

def getBreakDownDeposit(Branch="ALL"):
	
	# Col1 LESS THAN 250,000 Riels
	# Col2 250,000 to 1,000,000 Riels
	# Col3 MORE THAN 1,000,000 Riels
	if Branch != "ALL":
		Branch = Branch.split()

	Language 	=	mktnbc.getDefaultLang()
	ColRecord 	= {}
	RowRecord 	= []
	DicObj 		= {}
	TotalAmount 		= 0

	ListProductObj 		= 	{
								"KH":{
									"101":u"១-១-%s" %mktmessage.getNBCLang(Language, '110022'),
									"102":u"១-២-%s" %mktmessage.getNBCLang(Language, '110023'),
									"103":u"១-៣-%s" %mktmessage.getNBCLang(Language, '110024')
									},
								"EN":{
									"101":u"1-1-%s" %mktmessage.getNBCLang(Language, '110022'),
									"102":u"1-2-%s" %mktmessage.getNBCLang(Language, '110023'),
									"103":u"1-3-%s" %mktmessage.getNBCLang(Language, '110024')
									}
							}

	CurrencyObj 	= MKT_CURRENCY.query
	AccSettingObj 	= MKT_ACCOUNTING_SETTING.query.get('SYSTEM')

	if AccSettingObj:
		BaseCurrency 	= AccSettingObj.BaseCurrency
		BaseCurrencyObj = CurrencyObj.get(BaseCurrency)

		if BaseCurrencyObj:

			AccObj 			= 		MKT_ACCOUNT.query.\
									filter(MKT_ACC_PRODUCT.ProductType=="E").\
									join(
										MKT_ACC_PRODUCT,
										MKT_ACC_PRODUCT.ID == MKT_ACCOUNT.AccProduct
									).\
									join(
										MKT_CATEGORY,
										MKT_CATEGORY.ID == MKT_ACCOUNT.AccCategory
									)

			if Branch != "ALL":
				AccObj 	= 	AccObj.\
							filter(MKT_ACCOUNT.Branch.in_(Branch))

			AccObj 		=	AccObj.\
							filter(MKT_ACCOUNT.Balance != 0)

			BankDate 		= 	mktdate.getBankDate()
			ExchangeRateDic =	mktnbc.getNBCExchangeRate(BankDate.year, BankDate.month)

			AccountDic 		=	{}
			# get BreakDownOfDeposit AppSetting
			BreakDownDepositSetting = 	mktsetting.getAppSetting('BreakDownOfDeposit').splitlines()
			for b in BreakDownDepositSetting:
				Key = b.split(':')
				AccountDic.update({Key[0]:Key[1].split()})

			# AccountDic 	=	{'Demand':['101'], 'Saving':['102','122'], 'Term':['103'], 'Other':[], 'Program1':['101'], 'Program2':[], 'Program3':[]}
			TmpDic 	= 	{}
			Total1 	=	0
			Total2 	=	0
			Total3 	=	0

			for k, v in AccountDic.iteritems():
				AccountObj = AccObj.filter(MKT_ACC_PRODUCT.ID.in_(v)).all()
				if AccountObj:
					TotalTA = 0

					AccProductObj = MKT_ACC_PRODUCT.query.get(AccountObj[0].AccProduct)
					DisplayRate = ""
					if AccProductObj:
						InterestObj = 	MKT_INTEREST_RATE.query.filter(MKT_INTEREST_RATE.ID == AccProductObj.InterestKey).first()
						if InterestObj:
							Rate = InterestObj.Rate.split()
							DisplayRate = "%s / Year"%(Rate)
					TmpDic.update({k:DisplayRate})
					
					for a in AccountObj:
						Currency 		= 	a.Currency
						Rate 			=	ExchangeRateDic[Currency]
						Balance 		= 	float(a.Balance) * float(Rate)
						

						if 250000 > Balance:
							TmpDic.update({'1%s'%k:TmpDic.get('1%s'%k,0)+Balance, '1A%s'%k:TmpDic.get('1A%s'%k,0)+1})
							Total1 += Balance
						elif 250000 <= Balance <= 1000000 :
							Total2 += Balance
							TmpDic.update({'2%s'%k:TmpDic.get('2%s'%k,0)+Balance, '2A%s'%k:TmpDic.get('2A%s'%k,0)+1})
						elif 1000000 < Balance :
							Total3 += Balance
							TmpDic.update({'3%s'%k:TmpDic.get('3%s'%k,0)+Balance, '3A%s'%k:TmpDic.get('3A%s'%k,0)+1})
			
			RowRecord.append({1:u'%s-%s' %(mktnbc.getOrderNumberKh(mktmessage.getNBCLang(Language, '110000'), '1'), mktmessage.getNBCLang(Language, '110021')),2:'',3:'',4:'',5:'',6:'',7:'',8:'',9:'',10:'','format':'font-weight:bold;'})
			
			Subtotal1 	=	0
			Subtotal2 	=	0
			Subtotal3 	=	0
			SubtotalC1  =	0
			SubtotalC2  =	0
			SubtotalC3  =	0
			Counter  	=	0

			for x in ['Demand', 'Saving', 'Term', 'Other']:
				R1 	=	TmpDic.get('1%s'%x,0)/1000000
				R2 	=	TmpDic.get('2%s'%x,0)/1000000
				R3 	=	TmpDic.get('3%s'%x,0)/1000000
				RT 	=	R1+R2+R3
				Subtotal1 	+=	R1
				Subtotal2 	+=	R2
				Subtotal3 	+=	R3

				C1 	= 	TmpDic.get('1A%s'%x,0)
				C2 	= 	TmpDic.get('2A%s'%x,0)
				C3 	= 	TmpDic.get('3A%s'%x,0)
				CT  =	C1+C2+C3
				SubtotalC1  +=	C1
				SubtotalC2  +=	C2
				SubtotalC3  +=	C3

				Counter  	+=	1
				RowRecord.append({  1:'1-%s %s'%(Counter,x), 2:TmpDic.get(x,''), 
									3:C1, 4:mktmoney.formatNumber(R1),
									5:C2, 6:mktmoney.formatNumber(R2),
									7:C3, 8:mktmoney.formatNumber(R3),
									9:CT, 10:mktmoney.formatNumber(RT)})

			GTotalC 	=	SubtotalC1+SubtotalC2+SubtotalC3
			TotalAmount = 	Subtotal1+Subtotal2+Subtotal3

			RowRecord.append({1:u'%s-%s %s' %(mktnbc.getOrderNumberKh(mktmessage.getNBCLang(Language, '110000'), '1'), mktnbc.getOrderNumberKh(mktmessage.getNBCLang(Language, '110000'), '5'), mktmessage.getNBCLang(Language, '110026')),
								2:'',
								3:SubtotalC1, 4:mktmoney.formatNumber(Subtotal1),
								5:SubtotalC2, 6:mktmoney.formatNumber(Subtotal2),
								7:SubtotalC3, 8:mktmoney.formatNumber(Subtotal3),
								9:GTotalC, 10:mktmoney.formatNumber(TotalAmount),
								'format':'font-weight:bold;background:#99CCFF;'
								})
			RowRecord.append({	1:u'%s-%s' %(mktnbc.getOrderNumberKh(mktmessage.getNBCLang(Language, '110000'), '2'), mktmessage.getNBCLang(Language, '110027')),
								2:'',3:'',4:'',5:'',6:'',7:'',8:'',9:'',10:'','format':'font-weight:bold;'})
			PSubtotal1 	=	0
			PSubtotal2 	=	0
			PSubtotal3 	=	0
			PSubtotalC1  =	0
			PSubtotalC2  =	0
			PSubtotalC3  =	0
			Counter  	=	0

			for x in ['Program1', 'Program2', 'Program3']:
				R1 	=	TmpDic.get('1%s'%x,0)/1000000
				R2 	=	TmpDic.get('2%s'%x,0)/1000000
				R3 	=	TmpDic.get('3%s'%x,0)/1000000
				RT 	=	R1+R2+R3
				PSubtotal1 	+=	R1
				PSubtotal2 	+=	R2
				PSubtotal3 	+=	R3

				PC1 	= 	TmpDic.get('1A%s'%x,0)
				PC2 	= 	TmpDic.get('2A%s'%x,0)
				PC3 	= 	TmpDic.get('3A%s'%x,0)
				PCT  =	PC1+PC2+PC3
				PSubtotalC1  +=	PC1
				PSubtotalC2  +=	PC2
				PSubtotalC3  +=	PC3

				Counter  	+=	1
				RowRecord.append({  1:'2-%s %s %s'%(Counter, x[:-1], Counter), 2:TmpDic.get(x,''), 
									3:PC1, 4:mktmoney.formatNumber(R1),
									5:PC2, 6:mktmoney.formatNumber(R2),
									7:PC3, 8:mktmoney.formatNumber(R3),
									9:PCT, 10:mktmoney.formatNumber(RT)})

			PGTotalC 	=	PSubtotalC1+PSubtotalC2+PSubtotalC3
			PTotalAmount = 	PSubtotal1+PSubtotal2+PSubtotal3

			RowRecord.append({1:u'%s-%s %s' %(mktnbc.getOrderNumberKh(mktmessage.getNBCLang(Language, '110000'), '2'), mktnbc.getOrderNumberKh(mktmessage.getNBCLang(Language, '110000'), '4'), mktmessage.getNBCLang(Language, '110031')),
								2:'',
								3:PSubtotalC1, 4:mktmoney.formatNumber(PSubtotal1),
								5:PSubtotalC2, 6:mktmoney.formatNumber(PSubtotal2),
								7:PSubtotalC3, 8:mktmoney.formatNumber(PSubtotal3),
								9:PGTotalC, 10:mktmoney.formatNumber(PTotalAmount),
								'format':'font-weight:bold;background:#99CCFF;'
								})

			RowRecord.append({1:'Total',
								2:'',
								3:PSubtotalC1+SubtotalC1, 4:mktmoney.formatNumber(PSubtotal1+Subtotal1),
								5:PSubtotalC2+SubtotalC2, 6:mktmoney.formatNumber(PSubtotal2+Subtotal2),
								7:PSubtotalC3+SubtotalC3, 8:mktmoney.formatNumber(PSubtotal3+Subtotal3),
								9:PGTotalC+GTotalC, 10:mktmoney.formatNumber(PTotalAmount+TotalAmount),
								'format':'font-weight:bold;background:#99CCFF;'
								})
			RowRecord.append({	1:'',2:'',3:'',4:'',5:'',6:'',7:'',8:'',9:'',10:''})
			RowRecord.append({	1:'TOTAL RESERVABLE DEPOSITS',
								2:mktmoney.formatNumber(TotalAmount),3:'',4:'',5:'',6:'',7:'',8:'',
								9:'5% RESERVE REQUIREMENT',10:mktmoney.formatNumber(TotalAmount*5/100)})

	return RowRecord

def getCalReportingRate(CurrencyObj,Balance,Currency):

	CurrencyObj = CurrencyObj.get(Currency)
	if CurrencyObj:
		ReportingRate = CurrencyObj.ReportingRate
		Balance = float(Balance * ReportingRate)
	return Balance
	
def getWorksheetN004(workbook, worksheet, Language, Branch="ALL", Period=6, ReportedDate="", GLTable='', GLObj='', Year='', Month='', CYear='', CMonth=''):
	try:

		# Add a number format for cells with money.
		money = workbook.add_format({'num_format': '_(* #,##0.00_);_(* \(#,##0.00\);_(* "-"??_);_(@_)','font_name':'Arial'})

		red 			= workbook.add_format({'color': 'red'})
		blue 			= workbook.add_format({'color': 'blue'})

		styleHeader 	= workbook.add_format({
			'font_name':'Arial',
			'align': 'center',
			'valign': 'vcenter',
			'border': 1,
			'bold':True,
			'bg_color':'#CCCCCC'
		})

		DicStyle = {
			'font_name':'Arial',
			'valign': 'vcenter',
			'border': 1,
		}

		bold = workbook.add_format({'bold': True,'font_name':'Arial'})
		boldcenter = workbook.add_format({'bold': True, 'align': 'center','font_name':'Arial'})

		Header = getN004(Branch, ReportedDate)

		worksheet.merge_range('A2:J2', Header['ReportHeader']['Title'].upper(), boldcenter)
		worksheet.merge_range('A4:J4', Header['ReportHeader']['ReportName'].upper(), boldcenter)
		
		worksheet.write('A6',u"%s: %s" %(mktmessage.getNBCLang(Language, '110002').upper(), Header['ReportHeader']['CompanyName'].upper()))
		worksheet.write('A8',u"%s %s" %(mktmessage.getNBCLang(Language, '110003').upper(), Header['ReportHeader']['AsAt'].upper()))

		right = workbook.add_format({'align': 'right'})
		# Write some data headers.
		worksheet.merge_range('A10:J10', u'(%s)' %mktmessage.getNBCLang(Language, '110009'), right)

		worksheet.merge_range('A11:A13', u'%s' %mktmessage.getNBCLang(Language, '110014'), styleHeader)
		worksheet.merge_range('B11:B13', u'%s' %mktmessage.getNBCLang(Language, '110015'), styleHeader)
		worksheet.merge_range('C11:D12', u'%s' %mktmessage.getNBCLang(Language, '110016'), styleHeader)

		worksheet.merge_range('E11:F12', u'%s' %mktmessage.getNBCLang(Language, '110017'), styleHeader)

		worksheet.merge_range('G11:H12', u'%s' %mktmessage.getNBCLang(Language, '110018'), styleHeader)

		worksheet.merge_range('I11:J12', u'%s' %mktmessage.getNBCLang(Language, '700005'), styleHeader)

		worksheet.write('C13', u'%s' %mktmessage.getNBCLang(Language, '110019'), styleHeader)
		worksheet.write('D13', u'%s' %mktmessage.getNBCLang(Language, '110020'), styleHeader)

		worksheet.write('E13', u'%s' %mktmessage.getNBCLang(Language, '110019'), styleHeader)
		worksheet.write('F13', u'%s' %mktmessage.getNBCLang(Language, '110020'), styleHeader)

		worksheet.write('G13', u'%s' %mktmessage.getNBCLang(Language, '110019'), styleHeader)
		worksheet.write('H13', u'%s' %mktmessage.getNBCLang(Language, '110020'), styleHeader)

		worksheet.write('I13', u'%s' %mktmessage.getNBCLang(Language, '110019'), styleHeader)
		worksheet.write('J13', u'%s' %mktmessage.getNBCLang(Language, '110020'), styleHeader)

		worksheet.set_column('A:A', 28)
		worksheet.set_column('B:B', 25)
		worksheet.set_column('C:C', 12)
		worksheet.set_column('D:D', 13)
		worksheet.set_column('E:E', 16)
		worksheet.set_column('F:F', 19)
		worksheet.set_column('G:G', 13)
		worksheet.set_column('H:H', 13)
		worksheet.set_column('I:I', 11)
		worksheet.set_column('J:J', 12)
		# Some data we want to write to the worksheet.

		Data = getBreakDownDeposit(Branch)

		# Start from the first cell below the headers.
		row = 13

		# Iterate over the data and write it out row by row.
		for item in Data:
			col = 0
			for key, value in item.iteritems():

				if 'format' in item:
					DicFormat 	= {}
					DicFormat.update({'bg_color':'#CCCCCC', 'border':1, 'bold':False,'font_name':'Arial'})
					format 	= workbook.add_format(DicFormat)
				else:
					format 	= workbook.add_format({'border':1})

				if key !='format':
					if col >= 2:
						format.set_num_format('_(* #,##0.00_);_(* \(#,##0.00\);_(* "-"??_);_(@_)')
						# value = '0' if value == '' else float(str(value).replace(',',''))
						worksheet.write(row, col, value,format)
					else:
						worksheet.write(row, col, value,format)
					col += 1
			row += 1
		# worksheet.write(row+2, 0, 'TOTAL RESERVABLE DEPOSITS')
		# worksheet.write(row+2, 4, '5% RESERVE REQUIREMENT')
		BorderBottom = workbook.add_format({'bottom':True})
		worksheet.write(row+5, 0, u'Name:', BorderBottom)
		worksheet.write(row+6, 0, u'Position:', BorderBottom)
		worksheet.write(row+5, 7, u'Date:', BorderBottom)

	except Exception, e:
		raise