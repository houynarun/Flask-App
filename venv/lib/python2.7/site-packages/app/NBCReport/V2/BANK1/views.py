# -*- coding: utf-8 -*-
from app.mktcore.imports 		import *
from app.tools.mktdate 			import *
import app.tools.mktnbc 		as mktnbc
import os
from .N01 import *
from .N02 import *
try:
	from openpyxl import load_workbook
except Exception, e:
	pass
FILENAME = os.path.dirname(__file__)+'/EXCEL_BANK2.xlsx'

def setReportList(**kwargs):
	Branch 			= kwargs.get("Branch", "ALL")
	ReportedDate 	= kwargs.get("ReportedDate","")
	Month 			= kwargs.get("Month","")
	Year			= kwargs.get("Year","")

	ReportList  = 	{ 	
						'01':{ 	'Khmer'		:u'របាយការណ៍ប្រចាំខែស្តីពី ប្លង់គណនីឯកភាព',
								'English'	:'MONTHLY REPORT OF UNIFORM COA',
								'Title'		:'NBC-UNIFORM COA',
								'Result'	:'getBANK01(Branch, ReportedDate, 2, Month="", Year="")'
								},
						'02':{ 'Khmer'	:u'របាយការណ៍ប្រចាំខែស្តីពី ប្លង់គណនីឯកភាព',
								'English'	:'MONTHLY REPORT OF UNIFORM COA SHORT',
								'Title'		:'NBC-UNIFORM COA SHORT',
								'Result'	:'getBANK02(Branch, ReportedDate, 2, Month="", Year="")'
								},
					}	
	return ReportList
@app.route('/Morakot/Report/NBC/BANK1', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getNBCBANK1Report():
	try:

		ErrorMsg 	= []
		getCheck 	= checkAccess("/Morakot/Report/NBC/BANK1","Search")
		if getCheck != True: 
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)


		Branch 			=	request.args.get("Branch") if "Branch" in request.args else session.get("ChangeBranch")

		ReportList 	=	setReportList(	Branch 			= Branch)
		html        =   "nbc/v2/nbc.html"
		Title 		=	"Bank"
		Type 		=	"BANK1"
		Function 	=	"getNBCBANK1Report"

		return render_template(	html,
								ReportList 	= ReportList,
								Title 		= Title,
								Type 		= Type,
								Function 	= Function,
								sorted 		= sorted,
								Branch 		= Branch)
	except:
		raise
@app.route('/Morakot/Report/NBC/BANK1/<ID>', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getNBCBANK1ReportDetail(ID):
	try:
		ErrorMsg    = []
		getCheck    = checkAccess("/Morakot/Report/NBC/BANK1","Search")
		if getCheck != True: 
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)

		''' Setup parameters '''
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else session.get("ChangeBranch")
		ReportedDate 	= mktnbc.getHeaderReport().get("ReportedDate","")
		Month 			= mktnbc.getHeaderReport().get("Month","")
		Year			= mktnbc.getHeaderReport().get("Year","")
		ReportList 	=	setReportList(	Branch 			= Branch, 
										ReportedDate 	= ReportedDate,
										Month 			= Month,
										Year 			= Year)

		Result , Style		=	eval(ReportList.get(ID,{}).get('Result',{}))
		Type 		= 	"BANK1"
		Function 	=	"getNBCBANK1ReportDetail"
		html 		= 	"nbc/v2/nbc_master.html"

		return render_template(html,
								ID 				=	ID,
								str 			=	str,
								mktmoney 		=	mktmoney,
								float 			=	float,
								Branch 			=	Branch,
								Result 			=	Result,
								Type 			=	Type,
								Function 		=	Function
								)
		return Result
	except:
		raise
from openpyxl.styles import Border, Side

@app.route('/Morakot/Report/NBC/BANK1/Excel', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getNBCBANK1Excel():
	try:
		workbook = load_workbook(FILENAME, keep_links=False)

		''' Setup parameters '''
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else session.get("ChangeBranch")
		ReportedDate 	= 	mktnbc.getHeaderReport().get("ReportedDate","")
		Month 			= 	mktnbc.getHeaderReport().get("Month","")
		Year			= 	mktnbc.getHeaderReport().get("Year","")
		
		ReportList 		= 	setReportList(	Branch 			= Branch, 
											ReportedDate 	= ReportedDate,
											Month 			= Month,
											Year 			= Year)

		for key,value in ReportList.iteritems():
			Result 		= eval(value.get('Result',{}))
			Excel 		= Result[0].get('Excel',{})
			SheetName 	= Result[0].get("ReportHeader",{}).get('Form',"")
			bs_sheet 	= mktnbc.getSheet(workbook, SheetName)

			mktnbc.setWriteWorkSheet(bs_sheet, Excel)
			setBorder(bs_sheet,Result[1])
			
		response = mktnbc.getExcelFile(workbook, 'NBC_REPORTS_BANK')

		return response
	except Exception as e:
		raise
def setBorder(Sheet,DictData):
	# Dict = {'G8':'left*thin,FF000000:right*thin,FF000000',
	# 'K7':'top*medium,FF000000',
	# 'L8':'bottom*thin,FF000000:right*thin,FF000000',
	# 'F25':'left*medium,FF000000'
	# }

	if Sheet:
		if isinstance(DictData, dict):

			for key, value in DictData.iteritems():
				Dict = {}
				Val1 = value.split(':')
				for v in Val1:
					Val2 = v.split('*')
					Val3 = Val2[1].split(',')
					Dict.update({Val2[0]:Side(border_style=Val3[0],color=Val3[1])})
				
				Sheet.cell(key).border = Border(**Dict)

""" Route to export each report to excel """
@app.route('/Morakot/Report/NBC/BANK1/Excel/<ID>', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getNBCBANK1Sheet(ID):
	try:
		ID = str(ID)
		ReportName = 'NBC_REPORTS_BANK_%s'%ID
		workbook = load_workbook(FILENAME, keep_links=False)

		''' Setup parameters '''
		Branch 			= request.args.get("Branch") if "Branch" in request.args else session.get("ChangeBranch")
		ReportedDate 	= mktnbc.getHeaderReport().get("ReportedDate","")
		Month 			= mktnbc.getHeaderReport().get("Month","")
		Year			= mktnbc.getHeaderReport().get("Year","")

		ReportList 		= 	setReportList(	Branch 			= Branch, 
											ReportedDate 	= ReportedDate,
											Month 			= Month,
											Year 			= Year)

		Result 		=	eval(ReportList.get(ID,{}).get('Result',{}))
		Excel 		= 	Result[0].get('Excel',{})
		SheetName 	= 	Result[0].get("ReportHeader",{}).get('Form',"")

		bs_sheet = mktnbc.getSheet(workbook, SheetName)
		mktnbc.setWriteWorkSheet(bs_sheet, Excel)
		setBorder(bs_sheet,Result[1])

		response = mktnbc.getExcelFile(workbook, ReportName)

		return response
	except Exception as e:
		raise
