# -*- coding: utf-8 -*-
'''
Report Name: 	MONTHLY REPORT OF UNIFORM COA SHORT
				
URL 		: 	/Morakot/Report/NBC/N041
'''
from app.mktcore.imports 		import *
import app.tools.mktnbc			as mktnbc
from app.GLBalance.models         import MKT_GL_BALANCE, MKT_GL_BALANCE_BACKUP
from app.Currency.models        import MKT_CURRENCY

import app.tools.mktdate         as mktdate
import app.tools.mktsetting     as mktsetting
import app.tools.mktmoney         as mktmoney
import app.tools.mktnbc            as mktnbc
import app.tools.mktgl             as mktgl
import app.tools.mktmessage     as mktmessage
from decimal                     import Decimal
import app.NBCReport.V2.BANK.BankSetting  as NBCBankSetting



def getGLValueForField(Branch = "ALL", Period = 2,NBCBank04Key='', NBCExchangeRateDict={},**Kargs):
	return NBCBankSetting.getGLValueFromField(Branch, Period, "NBCBankN041",NBCBank041Key, NBCExchangeRateDict,**Kargs)

def getBANK02(Branch="ALL", ReportedDate="",Period=2,Month = "", Year = ""):
	try:
		Data 			= []
		Excel 			= {}
		ReportHeader 	= {}
		ReportHeader 	= mktnbc.getHeaderReport(	ReportName 		=	u'MONTHLY REPORT OF UNIFORM COA SHORT',
													Title 			=	u'របាយការណ៏ប្រចាំខែសី្តពី ប្លង់គណនីឯកភាពសង្ខេប',
													Form 			=	'COA Short'
													)
		ID = 'N005'
		Result1 		=	mktnbc.getNBCLineReport(ID, int(Period), Branch, ReportedDate, Year=Year, Month=Month)
		Data1 			= 	Result1[0].get("Data",[])
		Result2			=	mktnbc.getNBCLineReport(ID, 5, Branch, ReportedDate, Year=Year, Month=Month)
		Data2 			= 	Result2[0].get("Data",[])
		RecordRow 	= []
		ReportingRate = ReportHeader.get('ReportingRate',0)
		Excel.update({
				"B2" : ((ReportHeader.get('CompanyName',"")).splitlines())[0],
				"B3" : u'%s'%(NBCBankSetting.formatDateNBC(ReportHeader.get('ReportedDate',""))),
				"D3" : u'%s%s'%(ReportingRate,''),
			})
		Condition 	= []
		if Year and Month:
			GLTable       = MKT_GL_BALANCE_BACKUP
			Condition     = [GLTable.GLYear == Year,GLTable.GLMonth == Month]
			CYear         = Year
			CMonth        = Month
		else:
			GLTable       = MKT_GL_BALANCE
			BankDate      = mktdate.getBankDate()
			CYear         = BankDate.year
			CMonth        = BankDate.month
		GLObj             = GLTable.query.filter(*Condition)
		Kargs             = {'GLTable':GLTable, 'GLObj':GLObj, 'FCY':True}
		CurrencyDic       =   mktnbc.getNBCExchangeRate(CYear, CMonth)
		CellRow 		  = 11

		TableHeader 	= {}
		TableHeader 	= mktnbc.setTableHeader(Text=u'Account ID*', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader 	= mktnbc.setTableHeader(Text=u'Account name', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		#----------------------------------------------------------------------------------------------------------------#
		TableHeader 	= mktnbc.setTableHeader(Text=u'USD Balance', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader 	= mktnbc.setTableHeader(Text=u'KHR Balance', 
											Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		#----------------------------------------------------------------------------------------------------------------#
		#Result.update({'TableHeader':TableHeader,'ReportHeader':ReportHeader,'Data':Data, 'Excel': Excel})
		RowNumber = 6
		Data 	= Data1 + Data2
		for item in Data:
			row = dict(item)
			Description = row.get("Description","")
			AmountInDollars = row.get("AmountInDollars",0)
			AmountInRiels 	= row.get("AmountInRiels",0)
			LineType 	= row.get("LineType",'LD')
			Indent		= row.get("Indent",0)
			RowBGColor 	= row.get("RowBGColor","")
			LineFormat  = row.get("LineFormat","")
			LineNumber 	= int(row.get("LineNumber",""))
			if LineNumber >= 15790 and LineNumber <= 16068:
				RecordRow.append({
							1:"",
							2:Description,
							3:mktmoney.formatNumber(AmountInDollars, 1, 2),
							4:mktmoney.formatNumber(AmountInRiels, 1, 2),
							'LineType':LineType,
							'Indent':Indent,
							'RowBGColor':RowBGColor,
							'LineFormat':'LineFormat'
						})
				Excel.update({
									"C%s"%(RowNumber) : AmountInDollars,
									"D%s"%(RowNumber) : AmountInRiels,
								})
				RowNumber += 1
			if LineNumber >= 16069 and LineNumber <= 16281:
				RecordRow.append({
							1:"",
							2:Description,
							3:mktmoney.formatNumber(AmountInDollars, 1, 2),
							4:mktmoney.formatNumber(AmountInRiels, 1, 2),
							'LineType':LineType,
							'Indent':Indent,
							'RowBGColor':RowBGColor,
							'LineFormat':'LineFormat'
						})
				Excel.update({
									"C%s"%(RowNumber) : AmountInDollars,
									"D%s"%(RowNumber) : AmountInRiels,
								})
				RowNumber += 1
			if LineNumber >= 16282 and LineNumber <= 16301:
				RecordRow.append({
							1:"",
							2:Description,
							3:mktmoney.formatNumber(AmountInDollars, 1, 2),
							4:mktmoney.formatNumber(AmountInRiels, 1, 2),
							'LineType':LineType,
							'Indent':Indent,
							'RowBGColor':RowBGColor,
							'LineFormat':'LineFormat'
						})
				Excel.update({
									"C%s"%(RowNumber) : AmountInDollars,
									"D%s"%(RowNumber) : AmountInRiels,
								})
				RowNumber += 1
			if RowNumber > 517:
				break

		Result = {'ReportHeader': ReportHeader, 'TableHeader': TableHeader, 'Data':RecordRow, 'Excel':Excel}
		CellStyle ={}
		return Result,CellStyle
	except Exception, e:
		raise

