# -*- coding: utf-8 -*-
'''
Report Name: 21 (SEMETER REPORT ON LOAN IN 24 PROVINCES AND 1 CAPITAL)
'''

from app.mktcore.imports 		import *
import app.tools.mktdate 		as mktdate
import app.tools.mktsetting 	as mktsetting
import app.tools.mktmoney 		as mktmoney
import app.tools.mktnbc			as mktnbc
import app.tools.mktgl 			as mktgl
import app.tools.mktmessage 	as mktmessage

from app.LoanContract.models import *
from app.Currency.models import *
from app.Customer.models import *
from app.Province.models import *
from app.District.models import *
from app.PD.models import *
from app.LoanWriteOff.models import *

def getMFI21(Branch = "ALL",ReportedDate=''):
	''' This function must return result like below:
			Result = {
				'Data': 		Data,
				'Excel': 		Excel,
				'ReportHeader': ReportHeader,
				'TableHeader': 	TableHeader
				}
	'''
	try:
		ReportHeader 	=   mktnbc.getHeaderReport(	ReportName 		=	u'របាយការណ៍ប្រចាំឆមាស ស្តីពីឥណទានទូទាំង ២៤ ខេត្ត និង ០១ រាជធានី',
													Title 			=	'',
													Form 			=	'21',
													SubTitleReport	=	'')
		Result			=   {}
		TableHeader 	= 	{}

		TableHeader = mktnbc.setTableHeader(Text=u'No', 
									 Rowspan=2,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		
		TableHeader = mktnbc.setTableHeader(Text=u"Provinces 1 City 24 Provinces (1)", 
									 Rowspan=2,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u"Operating Area (2)", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"District", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#		

		TableHeader = mktnbc.setTableHeader(Text=u"Loan ≤ 2,500$ or Equivalence (A)", 
									 Rowspan=0,Colspan=4,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Loan Amount", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Par>30days", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Write-Off", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"No. of Borrower", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#	

		TableHeader = mktnbc.setTableHeader(Text=u"Loan 2,501$ to ≤ 10,000$ or Equivalence (B)", 
									 Rowspan=0,Colspan=4,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Loan Amount", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Par>30days", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Write-Off", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"No. of Borrower", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#

		TableHeader = mktnbc.setTableHeader(Text=u"Loans 10,001$ to ≤ 50,000$ or Equivalence (C)", 
									 Rowspan=0,Colspan=4,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Loan Amount", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Par>30days", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Write-Off", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"No. of Borrower", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#

		TableHeader = mktnbc.setTableHeader(Text=u"Loans > 50,000$ or Equivalence.(D)", 
									 Rowspan=0,Colspan=4,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Loan Amount", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Par>30days", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Write-Off", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"No. of Borrower", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#

		TableHeader = mktnbc.setTableHeader(Text=u"Total (E)", 
									 Rowspan=0,Colspan=4,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Loan Amount", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Par>30days", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Write-Off", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"No. of Borrower", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#

		Data,Excel = getFinalResult(Branch, ReportHeader)

		Result.update({'TableHeader':TableHeader,'ReportHeader':ReportHeader,'Data':Data,'Excel':Excel})
		
		CellStyle = {}
		# ListChar = 'ABCDEFGHIJKLMNOPQRSTUVW'
		for c in range(10,232):
			CellStyle.update({'A%s'%(c):'top*thin,FF000000:right*thin,FF000000:bottom*thin,FF000000','C%s'%(c):'top*thin,FF000000:right*thin,FF000000:left*thin,FF000000'})
		CellStyle.update({
							'B8':'top*double,FF000000',
							'C8':'top*double,FF000000:right*thin,FF000000:left*thin,FF000000',
							'D8':'top*double,FF000000',
							'E8':'top*double,FF000000',
							'F8':'top*double,FF000000',
							'G8':'top*double,FF000000:right*thin,FF000000',
							'H8':'top*double,FF000000',
							'I8':'top*double,FF000000',
							'J8':'top*double,FF000000',
							'K8':'top*double,FF000000:right*thin,FF000000',
							'L8':'top*double,FF000000',
							'M8':'top*double,FF000000',
							'N8':'top*double,FF000000',
							'O8':'top*double,FF000000:right*thin,FF000000',
							'P8':'top*double,FF000000',
							'Q8':'top*double,FF000000',
							'R8':'top*double,FF000000',
							'S8':'top*double,FF000000:right*thin,FF000000',
							'T8':'top*double,FF000000',
							'U8':'top*double,FF000000',
							'V8':'top*double,FF000000',
							'W8':'top*double,FF000000:right*double,FF000000',
							'B9':'left*thin,FF000000:right*thin,FF000000',
							'B19':'top*thin,FF000000:bottom*thin,FF000000',
							'B34':'top*thin,FF000000:bottom*thin,FF000000',
							'B45':'top*thin,FF000000:bottom*thin,FF000000',
							'B54':'top*thin,FF000000:bottom*thin,FF000000',
							'B63':'top*thin,FF000000:bottom*thin,FF000000',
							'B72':'top*thin,FF000000:bottom*thin,FF000000',
							'B81':'top*thin,FF000000:bottom*thin,FF000000',
							'B93':'top*thin,FF000000:bottom*thin,FF000000',
							'B101':'top*thin,FF000000:bottom*thin,FF000000',
							'B108':'top*thin,FF000000:bottom*thin,FF000000',
							'B114':'top*thin,FF000000:bottom*thin,FF000000',
							'B127':'top*thin,FF000000:bottom*thin,FF000000',
							'B136':'top*thin,FF000000:bottom*thin,FF000000',
							'B150':'top*thin,FF000000:bottom*thin,FF000000',
							'B157':'top*thin,FF000000:bottom*thin,FF000000',
							'B167':'top*thin,FF000000:bottom*thin,FF000000',
							'B180':'top*thin,FF000000:bottom*thin,FF000000',
							'B185':'top*thin,FF000000:bottom*thin,FF000000',
							'B191':'top*thin,FF000000:bottom*thin,FF000000',
							'B200':'top*thin,FF000000:bottom*thin,FF000000',
							'B211':'top*thin,FF000000:bottom*thin,FF000000',
							'B217':'top*thin,FF000000:bottom*thin,FF000000',
							'B220':'top*thin,FF000000:bottom*thin,FF000000',
							'B223':'top*thin,FF000000:bottom*thin,FF000000',
							'B231':'top*thin,FF000000:bottom*thin,FF000000',
							'B232':'top*thin,FF000000:bottom*double,FF000000',
							'C232':'top*thin,FF000000:bottom*double,FF000000',

							})

		return Result, CellStyle

	except Exception as e:
		raise


def getFinalResult(Branch, ReportHeader):
	try:
		RecordRow 	= []
		ExcelRecord 	= {}
		ExcelRecord.update({
				"K3" : ReportHeader.get('ReportedDate',""),
				"D4" : ReportHeader.get('CompanyName',""),
				"T7" : Decimal(ReportHeader.get('ReportingRate',0))
			})
		i = 1
		CellRow = 10
		PreProID = 0

		OutAmount2k5ByPro		= 0
		OutAmountOfPar2k5ByPro	= 0
		NumOfBorrower2k5ByPro	= 0
		OutAmount10kByPro		= 0
		OutAmountOfPar10kByPro	= 0
		NumOfBorrower10kByPro	= 0
		OutAmount50kByPro		= 0
		OutAmountOfPar50kByPro	= 0
		NumOfBorrower50kByPro	= 0
		OutAmount100kByPro		= 0
		OutAmountOfPar100kByPro	= 0
		NumOfBorrower100kByPro	= 0
		TotalOutAmountByPro 	= 0
		TotalOutAmountOfParByPro= 0
		TotalNumOfBorrowerByPro = 0

		TotOutAmount2k5ByPro		= 0
		TotOutAmountOfPar2k5ByPro	= 0
		TotNumOfBorrower2k5ByPro	= 0
		TotOutAmount10kByPro		= 0
		TotOutAmountOfPar10kByPro	= 0
		TotNumOfBorrower10kByPro	= 0
		TotOutAmount50kByPro		= 0
		TotOutAmountOfPar50kByPro	= 0
		TotNumOfBorrower50kByPro	= 0
		TotOutAmount100kByPro		= 0
		TotOutAmountOfPar100kByPro	= 0
		TotNumOfBorrower100kByPro	= 0
		TotOutAmountByPro 	= 0
		TotOutAmountOfParByPro= 0
		TotNumOfBorrowerByPro = 0

		SumOutAmount2k5ByPro		= 0
		SumOutAmountOfPar2k5ByPro	= 0
		SumNumOfBorrower2k5ByPro	= 0
		SumOutAmount10kByPro		= 0
		SumOutAmountOfPar10kByPro	= 0
		SumNumOfBorrower10kByPro	= 0
		SumOutAmount50kByPro		= 0
		SumOutAmountOfPar50kByPro	= 0
		SumNumOfBorrower50kByPro	= 0
		SumOutAmount100kByPro		= 0
		SumOutAmountOfPar100kByPro	= 0
		SumNumOfBorrower100kByPro	= 0
		SumOutAmountByPro 			= 0
		SumOutAmountOfParByPro 		= 0
		SumNumOfBorrowerByPro 		= 0

		LoanObj = getLoanByDistrict()
		if LoanObj[0].ProvinceID:
			PreProID = LoanObj[0].ProvinceID
		for LC in LoanObj:

			if str(PreProID) != str(LC.ProvinceID):
					PreProID = LC.ProvinceID
					CellRow +=1
					i += 1
					RecordRow.append({
						1:'',
						2:'',
						3:'Total',

						4:u'%s' %mktmoney.formatNumber(OutAmount2k5ByPro),
							5:u'%s' %mktmoney.formatNumber(OutAmountOfPar2k5ByPro),
							6:u'%s' %mktmoney.formatNumber(0),
							7:u'%s' %mktmoney.formatNumber(NumOfBorrower2k5ByPro),

							8:u'%s' %mktmoney.formatNumber(OutAmount10kByPro),
							9:u'%s' %mktmoney.formatNumber(OutAmountOfPar10kByPro),
							10:u'%s' %mktmoney.formatNumber(0),
							11:u'%s' %mktmoney.formatNumber(NumOfBorrower10kByPro),

							12:u'%s' %mktmoney.formatNumber(OutAmount50kByPro),
							13:u'%s' %mktmoney.formatNumber(OutAmountOfPar50kByPro),
							14:u'%s' %mktmoney.formatNumber(0),
							15:u'%s' %mktmoney.formatNumber(NumOfBorrower50kByPro),

							16:u'%s' %mktmoney.formatNumber(OutAmount100kByPro),
							17:u'%s' %mktmoney.formatNumber(OutAmountOfPar100kByPro),
							18:u'%s' %mktmoney.formatNumber(0),
							19:u'%s' %mktmoney.formatNumber(NumOfBorrower100kByPro),

							20:u'%s' %TotalOutAmountByPro,
							21:u'%s' %TotalOutAmountOfParByPro,
							22:u'%s' %mktmoney.formatNumber(0),
							23:u'%s' %TotalNumOfBorrowerByPro,
						'LineType':'LD',
						'Indent':0,
						'RowBGColor':mktnbc.BG_HEADER_COLOR,
						'LineFormat':'bold'
					})
					

					SumOutAmount2k5ByPro		+= OutAmount2k5ByPro
					SumOutAmountOfPar2k5ByPro	+= OutAmountOfPar2k5ByPro
					SumNumOfBorrower2k5ByPro	+= NumOfBorrower2k5ByPro

					SumOutAmount10kByPro		+= OutAmount10kByPro
					SumOutAmountOfPar10kByPro	+= OutAmountOfPar10kByPro
					SumNumOfBorrower10kByPro	+= NumOfBorrower10kByPro

					SumOutAmount50kByPro		+= OutAmount50kByPro
					SumOutAmountOfPar50kByPro	+= OutAmountOfPar50kByPro
					SumNumOfBorrower50kByPro	+= NumOfBorrower50kByPro

					SumOutAmount100kByPro		+= OutAmount100kByPro
					SumOutAmountOfPar100kByPro	+= OutAmountOfPar100kByPro
					SumNumOfBorrower100kByPro	+= NumOfBorrower100kByPro

					SumOutAmountByPro 			+= TotalOutAmountByPro
					SumOutAmountOfParByPro 		+= TotalOutAmountOfParByPro
					SumNumOfBorrowerByPro 		+= TotalNumOfBorrowerByPro
					OutAmount2k5ByPro		= 0
					OutAmountOfPar2k5ByPro	= 0
					NumOfBorrower2k5ByPro	= 0

					OutAmount10kByPro		= 0
					OutAmountOfPar10kByPro	= 0
					NumOfBorrower10kByPro	= 0

					OutAmount50kByPro		= 0
					OutAmountOfPar50kByPro	= 0
					NumOfBorrower50kByPro	= 0

					OutAmount100kByPro		= 0
					OutAmountOfPar100kByPro	= 0
					NumOfBorrower100kByPro	= 0

					TotalOutAmountByPro 	= 0
					TotalOutAmountOfParByPro= 0
					TotalNumOfBorrowerByPro = 0


			TOutAmount 			= mktmoney.formatNumber(LC.TotalOutAmount) if LC.TotalOutAmount else '0'
			TOutAmountOfPar 	= mktmoney.formatNumber(LC.TotalOutAmountOfPar) if LC.TotalOutAmountOfPar else '0'
			TNumOfBorrower 		= mktmoney.formatNumber(LC.TotalNumOfBorrower) if LC.TotalNumOfBorrower else '0'
			
			OutAmount2k5 		= mktmoney.formatNumber(LC.OutAmount2k5)
			OutAmountOfPar2k5 	= mktmoney.formatNumber(LC.OutAmountOfPar2k5)
			NumOfBorrower2k5 	= mktmoney.formatNumber(LC.NumOfBorrower2k5)

			OutAmount10k		= mktmoney.formatNumber(LC.OutAmount10k)
			OutAmountOfPar10k	= mktmoney.formatNumber(LC.OutAmountOfPar10k)
			NumOfBorrower10k	= mktmoney.formatNumber(LC.NumOfBorrower10k)

			OutAmount50k		= mktmoney.formatNumber(LC.OutAmount50k)
			OutAmountOfPar50k	= mktmoney.formatNumber(LC.OutAmountOfPar50k)
			NumOfBorrower50k	= mktmoney.formatNumber(LC.NumOfBorrower50k)

			OutAmount100k		= mktmoney.formatNumber(LC.OutAmount100k)
			OutAmountOfPar100k	= mktmoney.formatNumber(LC.OutAmountOfPar100k)
			NumOfBorrower100k	= mktmoney.formatNumber(LC.NumOfBorrower100k)

			OutAmount2k5ByPro		+= float(OutAmount2k5.replace(',',''))
			OutAmountOfPar2k5ByPro	+= float(OutAmountOfPar2k5.replace(',',''))
			NumOfBorrower2k5ByPro	+= float(NumOfBorrower2k5.replace(',',''))

			OutAmount10kByPro		+= float(OutAmount10k.replace(',',''))
			OutAmountOfPar10kByPro	+= float(OutAmountOfPar10k.replace(',',''))
			NumOfBorrower10kByPro	+= float(NumOfBorrower10k.replace(',',''))

			OutAmount50kByPro		+= float(OutAmount50k.replace(',',''))
			OutAmountOfPar50kByPro	+= float(OutAmountOfPar50k.replace(',',''))
			NumOfBorrower50kByPro	+= float(NumOfBorrower50k.replace(',',''))

			OutAmount100kByPro		+= float(OutAmount100k.replace(',',''))
			OutAmountOfPar100kByPro	+= float(OutAmountOfPar100k.replace(',',''))
			NumOfBorrower100kByPro	+= float(NumOfBorrower100k.replace(',',''))

			TotalOutAmountByPro 	+= float(TOutAmount.replace(',',''))
			TotalOutAmountOfParByPro+= float(TOutAmountOfPar.replace(',',''))
			TotalNumOfBorrowerByPro += float(TNumOfBorrower.replace(',',''))
			RecordRow.append({
							1:u'%s' %LC.ProvinceID,
							2:u'%s' %LC.Province,
							3:u'%s' %LC.District,

							4:u'%s' %OutAmount2k5,
							5:u'%s' %OutAmountOfPar2k5,
							6:u'%s' %mktmoney.formatNumber(0),
							7:u'%s' %NumOfBorrower2k5,

							8:u'%s' %OutAmount10k,
							9:u'%s' %OutAmountOfPar10k,
							10:u'%s' %mktmoney.formatNumber(0),
							11:u'%s' %NumOfBorrower10k,

							12:u'%s' %OutAmount50k,
							13:u'%s' %OutAmountOfPar50k,
							14:u'%s' %mktmoney.formatNumber(0),
							15:u'%s' %NumOfBorrower50k,

							16:u'%s' %OutAmount100k,
							17:u'%s' %OutAmountOfPar100k,
							18:u'%s' %mktmoney.formatNumber(0),
							19:u'%s' %NumOfBorrower100k,

							20:u'%s' %TOutAmount,
							21:u'%s' %TOutAmountOfPar,
							22:u'%s' %mktmoney.formatNumber(0),
							23:u'%s' %TNumOfBorrower,
							'LineType':'LD',
							'Indent':0,
							'RowBGColor':'',
							'LineFormat':''
						})
			ExcelRecord.update({
					"D%s"%(CellRow) : float(OutAmount2k5.replace(',','')),
					"E%s"%(CellRow) : float(OutAmountOfPar2k5.replace(',','')),
					"F%s"%(CellRow) : 0,
					"G%s"%(CellRow) : float(NumOfBorrower2k5.replace(',','')),

					"H%s"%(CellRow) : float(OutAmount10k.replace(',','')),
					"I%s"%(CellRow) : float(OutAmountOfPar10k.replace(',','')),
					"J%s"%(CellRow) : 0,
					"K%s"%(CellRow) : float(NumOfBorrower10k.replace(',','')),

					"L%s"%(CellRow) : float(OutAmount50k.replace(',','')),
					"M%s"%(CellRow) : float(OutAmountOfPar50k.replace(',','')),
					"N%s"%(CellRow) : 0,
					"O%s"%(CellRow) : float(NumOfBorrower50k.replace(',','')),

					"P%s"%(CellRow) : float(OutAmount100k.replace(',','')),
					"Q%s"%(CellRow) : float(OutAmountOfPar100k.replace(',','')),
					"R%s"%(CellRow) : 0,
					"S%s"%(CellRow) : float(NumOfBorrower100k.replace(',','')),

					"T%s"%(CellRow) : float(TOutAmount.replace(',','')),
					"U%s"%(CellRow) : float(TOutAmountOfPar.replace(',','')),
					"V%s"%(CellRow) : 0,
					"W%s"%(CellRow) : float(TNumOfBorrower.replace(',','')),
				})
			CellRow +=1
			i += 1
			if str(LC.DistrictID) == str(LoanObj[-1:][0].DistrictID):
				RecordRow.append({
					1:'',
					2:'',
					3:'Total',

					4:u'%s' %mktmoney.formatNumber(OutAmount2k5ByPro),
						5:u'%s' %mktmoney.formatNumber(OutAmountOfPar2k5ByPro),
						6:u'%s' %mktmoney.formatNumber(0),
						7:u'%s' %mktmoney.formatNumber(NumOfBorrower2k5ByPro),

						8:u'%s' %mktmoney.formatNumber(OutAmount10kByPro),
						9:u'%s' %mktmoney.formatNumber(OutAmountOfPar10kByPro),
						10:u'%s' %mktmoney.formatNumber(0),
						11:u'%s' %mktmoney.formatNumber(NumOfBorrower10kByPro),

						12:u'%s' %mktmoney.formatNumber(OutAmount50kByPro),
						13:u'%s' %mktmoney.formatNumber(OutAmountOfPar50kByPro),
						14:u'%s' %mktmoney.formatNumber(0),
						15:u'%s' %mktmoney.formatNumber(NumOfBorrower50kByPro),

						16:u'%s' %mktmoney.formatNumber(OutAmount100kByPro),
						17:u'%s' %mktmoney.formatNumber(OutAmountOfPar100kByPro),
						18:u'%s' %mktmoney.formatNumber(0),
						19:u'%s' %mktmoney.formatNumber(NumOfBorrower100kByPro),

						20:u'%s' %TotalOutAmountByPro,
						21:u'%s' %TotalOutAmountOfParByPro,
						22:u'%s' %mktmoney.formatNumber(0),
						23:u'%s' %TotalNumOfBorrowerByPro,
					'LineType':'LD',
					'Indent':0,
					'RowBGColor':mktnbc.BG_HEADER_COLOR,
					'LineFormat':'bold'
				})

				SumOutAmount2k5ByPro		+= OutAmount2k5ByPro
				SumOutAmountOfPar2k5ByPro	+= OutAmountOfPar2k5ByPro
				SumNumOfBorrower2k5ByPro	+= NumOfBorrower2k5ByPro

				SumOutAmount10kByPro		+= OutAmount10kByPro
				SumOutAmountOfPar10kByPro	+= OutAmountOfPar10kByPro
				SumNumOfBorrower10kByPro	+= NumOfBorrower10kByPro

				SumOutAmount50kByPro		+= OutAmount50kByPro
				SumOutAmountOfPar50kByPro	+= OutAmountOfPar50kByPro
				SumNumOfBorrower50kByPro	+= NumOfBorrower50kByPro

				SumOutAmount100kByPro		+= OutAmount100kByPro
				SumOutAmountOfPar100kByPro	+= OutAmountOfPar100kByPro
				SumNumOfBorrower100kByPro	+= NumOfBorrower100kByPro

				SumOutAmountByPro 			+= TotalOutAmountByPro
				SumOutAmountOfParByPro 		+= TotalOutAmountOfParByPro
				SumNumOfBorrowerByPro 		+= TotalNumOfBorrowerByPro
				OutAmount2k5ByPro		= 0
				OutAmountOfPar2k5ByPro	= 0
				NumOfBorrower2k5ByPro	= 0

				OutAmount10kByPro		= 0
				OutAmountOfPar10kByPro	= 0
				NumOfBorrower10kByPro	= 0

				OutAmount50kByPro		= 0
				OutAmountOfPar50kByPro	= 0
				NumOfBorrower50kByPro	= 0

				OutAmount100kByPro		= 0
				OutAmountOfPar100kByPro	= 0
				NumOfBorrower100kByPro	= 0

				TotalOutAmountByPro 	= 0
				TotalOutAmountOfParByPro= 0
				TotalNumOfBorrowerByPro = 0

		RecordRow.append({
						1:'',
						2:'',
						3:'Total All',

						4:mktmoney.formatNumber(SumOutAmount2k5ByPro),
						5:mktmoney.formatNumber(SumOutAmountOfPar2k5ByPro),
						6:mktmoney.formatNumber(0),
						7:mktmoney.formatNumber(SumNumOfBorrower2k5ByPro),

						8:mktmoney.formatNumber(SumOutAmount10kByPro),
						9:mktmoney.formatNumber(SumOutAmountOfPar10kByPro),
						10:mktmoney.formatNumber(0),
						11:mktmoney.formatNumber(SumNumOfBorrower10kByPro),

						12:mktmoney.formatNumber(SumOutAmount50kByPro),
						13:mktmoney.formatNumber(SumOutAmountOfPar50kByPro),
						14:mktmoney.formatNumber(0),
						15:mktmoney.formatNumber(SumNumOfBorrower50kByPro),

						16:mktmoney.formatNumber(SumOutAmount100kByPro),
						17:mktmoney.formatNumber(SumOutAmountOfPar100kByPro),
						18:mktmoney.formatNumber(0),
						19:mktmoney.formatNumber(SumNumOfBorrower100kByPro),

						20:mktmoney.formatNumber(SumOutAmountByPro),
						21:mktmoney.formatNumber(SumOutAmountOfParByPro),
						22:mktmoney.formatNumber(0),
						23:mktmoney.formatNumber(SumNumOfBorrowerByPro),
						'LineType':'LD',
						'Indent':0,
						'RowBGColor':mktnbc.BG_HEADER_COLOR,
						'LineFormat':'bold'
					})
		
		return RecordRow,ExcelRecord

	except Exception as e:
		raise

def getLoanPD():

	NumDayDueOfPar = 30
	# Get All Loan PD
	LoanPDOBJ=db.session.query(
							MKT_LOAN_CONTRACT.ID.label('LoanID'),
							MKT_LOAN_CONTRACT.ContractCustomerID.label('CustomerID'),
							(MKT_LOAN_CONTRACT.Disbursed * cast(MKT_CURRENCY.OtherRate1,Float)
							).label('DisAmount'),
							(MKT_LOAN_CONTRACT.OutstandingAmount * cast(MKT_CURRENCY.OtherRate1,Float)
							).label('OutAmount'),
							case([(
								cast(MKT_PD_DATE.NumDayDue,INT) == None,
								0
								)],
							else_=cast(MKT_PD_DATE.NumDayDue,INT)
							).label('NumDayDue'),
							).\
							join(MKT_CURRENCY, MKT_CURRENCY.ID==MKT_LOAN_CONTRACT.Currency).\
							outerjoin(MKT_PAST_DUE,MKT_PAST_DUE.LoanID==MKT_LOAN_CONTRACT.ID).\
							outerjoin(MKT_PD_DATE,and_(
													MKT_PD_DATE.ID==MKT_PAST_DUE.ID,
													or_(
														MKT_PD_DATE.OutPriAmount>0,
														MKT_PD_DATE.OutIntAmount>0,
														MKT_PD_DATE.OutChgAmount>0
														))).\
							filter(MKT_LOAN_CONTRACT.OutstandingAmount>0).\
							order_by(MKT_LOAN_CONTRACT.ID,
									cast(MKT_PD_DATE.NumDayDue,INT).desc()
							).subquery()
	# Get Distinct Loan PD
	LoanPDOBJ = db.session.query(
								LoanPDOBJ.c.LoanID.label('LoanID'),
								LoanPDOBJ.c.CustomerID.label('CustomerID'),
								LoanPDOBJ.c.DisAmount.label('DisAmount'),
								LoanPDOBJ.c.OutAmount.label('OutAmount'),
								LoanPDOBJ.c.NumDayDue.label('NumDayDue')
								).\
								distinct(LoanPDOBJ.c.LoanID).subquery()
	# Get Par Amount of Loan PD Greater Then 30 days
	LoanPDOBJ = db.session.query(
								LoanPDOBJ.c.LoanID.label('LoanID'),
								LoanPDOBJ.c.CustomerID.label('CustomerID'),
								LoanPDOBJ.c.DisAmount.label('DisAmount'),
								LoanPDOBJ.c.OutAmount.label('OutAmount'),
								LoanPDOBJ.c.NumDayDue.label('NumDayDue'),
								case([(
									LoanPDOBJ.c.NumDayDue > NumDayDueOfPar,
									LoanPDOBJ.c.OutAmount
									)],
								else_= 0
								).label('OutAmountOfPar')
								).\
								distinct(LoanPDOBJ.c.LoanID).subquery()
	# Sum Customer's Loan's Amount
	LoanPDOBJ = db.session.query(
								LoanPDOBJ.c.CustomerID.label('CustomerID'),
								func.sum(LoanPDOBJ.c.DisAmount).label('DisAmount'),
								func.sum(LoanPDOBJ.c.OutAmount).label('OutAmount'),
								func.sum(LoanPDOBJ.c.OutAmountOfPar).label('OutAmountOfPar')
								).\
								group_by(LoanPDOBJ.c.CustomerID).subquery()
	LoanPDOBJ = db.session.query(
								LoanPDOBJ.c.CustomerID.label('CustomerID'),
								LoanPDOBJ.c.DisAmount.label('DisAmount'),
								LoanPDOBJ.c.OutAmount.label('OutAmount'),
								LoanPDOBJ.c.OutAmountOfPar.label('OutAmountOfPar')
								).subquery()
	return LoanPDOBJ

def getLoanByDistrict():
	LoanPDOBJ 	=  getLoanPD()
	Amount2k5 	= 2500
	Amount10k 	= 10000
	Amount50k 	= 50000
	# ReadAs 		= 1000000
	NBCRateOBJ = MKT_CURRENCY.query.get('USD')
	NBCRate =NBCRateOBJ.OtherRate1
	ReadAsUSD = NBCRate

	# Get Customer's Address Information
	CUOBJ = db.session.query(
							MKT_PROVINCE.ID.label('ProvinceID'),
							MKT_PROVINCE.Description.label('Province'),
							MKT_DISTRICT.ID.label('DistrictID'),
							MKT_DISTRICT.Description.label('District'),
							MKT_CUSTOMER.ID.label('CustomerID'),
							LoanPDOBJ.c.DisAmount.label('DisAmount'),
							LoanPDOBJ.c.OutAmount.label('OutAmount'),
							LoanPDOBJ.c.OutAmountOfPar.label('OutAmountOfPar')
							).\
							join(MKT_DISTRICT,MKT_DISTRICT.Province==MKT_PROVINCE.ID).\
							outerjoin(MKT_CUSTOMER,MKT_CUSTOMER.District==MKT_DISTRICT.ID).\
							outerjoin(LoanPDOBJ,LoanPDOBJ.c.CustomerID==MKT_CUSTOMER.ID).\
							distinct(LoanPDOBJ.c.CustomerID,MKT_DISTRICT.ID).\
							subquery()
	# Get Loan's Amount Detail For Each Row
	CUOBJ = db.session.query(
							CUOBJ.c.ProvinceID.label('ProvinceID'),
							CUOBJ.c.DistrictID.label('DistrictID'),
							CUOBJ.c.Province.label('Province'),
							CUOBJ.c.District.label('District'),
							CUOBJ.c.CustomerID.label('CustomerID'),
							CUOBJ.c.OutAmount.label('OutAmount'),
							CUOBJ.c.OutAmountOfPar.label('OutAmountOfPar'),
							case([(
								CUOBJ.c.OutAmount != None,
								1
								)],
								else_=0
							).label('NumOfBorrower'),
							case([(
								CUOBJ.c.DisAmount /NBCRate <= Amount2k5,
								CUOBJ.c.OutAmount
								)],
								else_=0
							).label('OutAmount2k5'),
							case([(
								and_(CUOBJ.c.DisAmount /NBCRate > Amount2k5, CUOBJ.c.DisAmount /NBCRate <=Amount10k),
								CUOBJ.c.OutAmount
								)],
								else_=0
							).label('OutAmount10k'),
							case([(
								and_(CUOBJ.c.DisAmount /NBCRate > Amount10k, CUOBJ.c.DisAmount /NBCRate <=Amount50k),
								CUOBJ.c.OutAmount
								)],
								else_=0
							).label('OutAmount50k'),
							case([(
								CUOBJ.c.DisAmount /NBCRate > Amount50k,
								CUOBJ.c.OutAmount
								)],
								else_=0
							).label('OutAmount100k'),
							case([(
								CUOBJ.c.DisAmount /NBCRate <= Amount2k5,
								CUOBJ.c.OutAmountOfPar
								)],
								else_=0
							).label('OutAmountOfPar2k5'),
							case([(
								and_(CUOBJ.c.DisAmount /NBCRate > Amount2k5, CUOBJ.c.DisAmount /NBCRate <=Amount10k),
								CUOBJ.c.OutAmountOfPar
								)],
								else_=0
							).label('OutAmountOfPar10k'),
							case([(
								and_(CUOBJ.c.DisAmount /NBCRate > Amount10k, CUOBJ.c.DisAmount /NBCRate <=Amount50k),
								CUOBJ.c.OutAmountOfPar
								)],
								else_=0
							).label('OutAmountOfPar50k'),
							case([(
								CUOBJ.c.DisAmount /NBCRate > Amount50k,
								CUOBJ.c.OutAmountOfPar
								)],
								else_=0
							).label('OutAmountOfPar100k'),
							case([(
								CUOBJ.c.DisAmount /NBCRate <= Amount2k5,
								1
								)],
								else_=0
							).label('NumOfBorrower2k5'),
							case([(
								and_(CUOBJ.c.DisAmount /NBCRate > Amount2k5, CUOBJ.c.DisAmount /NBCRate <=Amount10k),
								1
								)],
								else_=0
							).label('NumOfBorrower10k'),
							case([(
								and_(CUOBJ.c.DisAmount /NBCRate > Amount10k, CUOBJ.c.DisAmount /NBCRate <=Amount50k),
								1
								)],
								else_=0
							).label('NumOfBorrower50k'),
							case([(
								CUOBJ.c.DisAmount /NBCRate > Amount50k,
								1
								)],
								else_=0
							).label('NumOfBorrower100k'),
							).subquery()

	# Sum Amount Of Each District
	CUOBJ = db.session.query(
							CUOBJ.c.ProvinceID.label('ProvinceID'),
							CUOBJ.c.DistrictID.label('DistrictID'),
							CUOBJ.c.Province.label('Province'),
							CUOBJ.c.District.label('District'),
							(func.sum(CUOBJ.c.OutAmount)/ReadAsUSD).label('TotalOutAmount'),
							(func.sum(CUOBJ.c.OutAmountOfPar)/ReadAsUSD).label('TotalOutAmountOfPar'),
							(func.sum(CUOBJ.c.NumOfBorrower)).label('TotalNumOfBorrower'),
							(func.sum(CUOBJ.c.OutAmount2k5)/ReadAsUSD).label('OutAmount2k5'),
							(func.sum(CUOBJ.c.OutAmount10k)/ReadAsUSD).label('OutAmount10k'),
							(func.sum(CUOBJ.c.OutAmount50k)/ReadAsUSD).label('OutAmount50k'),
							(func.sum(CUOBJ.c.OutAmount100k)/ReadAsUSD).label('OutAmount100k'),
							(func.sum(CUOBJ.c.OutAmountOfPar2k5)/ReadAsUSD).label('OutAmountOfPar2k5'),
							(func.sum(CUOBJ.c.OutAmountOfPar10k)/ReadAsUSD).label('OutAmountOfPar10k'),
							(func.sum(CUOBJ.c.OutAmountOfPar50k)/ReadAsUSD).label('OutAmountOfPar50k'),
							(func.sum(CUOBJ.c.OutAmountOfPar100k)/ReadAsUSD).label('OutAmountOfPar100k'),
							func.sum(CUOBJ.c.NumOfBorrower2k5).label('NumOfBorrower2k5'),
							func.sum(CUOBJ.c.NumOfBorrower10k).label('NumOfBorrower10k'),
							func.sum(CUOBJ.c.NumOfBorrower50k).label('NumOfBorrower50k'),
							func.sum(CUOBJ.c.NumOfBorrower100k).label('NumOfBorrower100k')
							).\
							group_by(CUOBJ.c.ProvinceID,CUOBJ.c.DistrictID,CUOBJ.c.Province,CUOBJ.c.District).\
							order_by(CUOBJ.c.ProvinceID,CUOBJ.c.DistrictID).all()

	return CUOBJ