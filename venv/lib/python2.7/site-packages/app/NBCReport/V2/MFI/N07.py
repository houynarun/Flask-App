# -*- coding: utf-8 -*-

'''
	Report Name: LIQUIDITY RATIO
'''

from app.mktcore.imports        	import *
from app.GLBalance.models       	import MKT_GL_BALANCE, MKT_GL_BALANCE_BACKUP
from app.Currency.models            import *
from app.LoanContract.models        import *
from decimal 						import *
from sqlalchemy.sql.expression      import cast

import app.tools.mktdate            as mktdate
import app.tools.mktsetting         as mktsetting
import app.tools.mktmoney           as mktmoney
import app.tools.mktnbc         	as mktnbc
import app.tools.mktgl              as mktgl
import app.tools.mktmessage         as mktmessage
import sqlalchemy
import app.NBCReport.V2.MFI.NBCMFISetting  as nbcmfisetting



def getGLValueForField(Branch = "ALL", Period = 2,NBCMFI07Key='', NBCExchangeRateDict={},**Kargs):
    return nbcmfisetting.getGLValueFromField(Branch, Period, "NBCMFI07",NBCMFI07Key, NBCExchangeRateDict,**Kargs)


def getMFI07(Branch = "ALL", ReportedDate = "", Period = 2, Month = "", Year = ""):
	try:
		''' 
			This function must return result like below:
			Result = {
					'Data'			: Data,
					'Excel'			: Excel,
					'ReportHeader'	: ReportHeader,
					'TableHeader'	: TableHeader
				}
		'''
		ReportHeader 	=	mktnbc.getHeaderReport(	ReportName 		=	u'របាយការណ៍ប្រចាំខែស្តីពី អនុបាតសន្ទនីយភាព',
													Title 			=	'MONTHLY REPORT ON LIQUIDITY RATIO',
													Form 			=	'7')
		TableHeader		=	{}
		ExcelRecord		=	{}
		Data 			=	[]

		ExcelRecord.update({
				"C3" : ReportHeader.get('ReportedDate',""),
				"C5" : ReportHeader.get('CompanyName',""),
				"D7" : Decimal(ReportHeader.get('ReportingRate',0))
			})


		ID 				= 	"N001" # ID of Report 01 Balance Sheet
		getAccSetting 	=	mktsetting.getAccSetting()
		BaseCurrency 	=	getAccSetting.BaseCurrency
		BaseCurrObj		=	mktmoney.getCurrencyObj(BaseCurrency)

		LineObj 		=	mktnbc.getNBCLineReport(ID, int(Period), Branch, ReportedDate, Year=Year, Month=Month)[0].get("Data",[])

		Condition = []
		if Year and Month:
			GLTable   	= MKT_GL_BALANCE_BACKUP
			Condition 	= [GLTable.GLYear == Year,GLTable.GLMonth == Month]
			CYear 	  	= Year
			CMonth 	  	= Month
		else:
			GLTable   	= MKT_GL_BALANCE
			BankDate  	= mktdate.getBankDate()
			CYear 	  	= BankDate.year
			CMonth		= BankDate.month


		GLObj   		=   GLTable.query.filter(*Condition)
		Kargs           =   {'GLTable':GLTable, 'GLObj':GLObj, 'FCY':True}

		DataList 		=	mktnbc.getNBCLineDetail(ID, Branch, Period, GLTable=GLTable, GLObj=GLObj, Year=CYear, Month=CMonth)
		SubTotal        =  0
		SubTotalA 		= 0
		ReportingRate   =   ReportHeader.get('ReportingRate',0)
		CurrencyObj     =   db.session.query(MKT_CURRENCY.ID).all()		
		CurrencyDic =   mktnbc.getNBCExchangeRate(CYear, CMonth)

		Data.append({
		                1:u'១. ភាគយក៖ ទ្រព្យសកម្មងាយស្រួល\n1. NUMERATOR : Liquid Assets',
		                2:u'',
		                3:u'',
		                4:u'',
						'LineType':'GH',
						'Indent':0,
						'RowBGColor':mktnbc.BG_HEADER_COLOR,
						'LineFormat':'bold'
		            })

		ChashInHand 	= 	getGLValueForField(Branch, Period,"ChashInHand", CurrencyDic,**Kargs)
		SubTotal        +=  Decimal(ChashInHand)
		SubTotalA 		+=  Decimal(ChashInHand)
		Data.append({
		                1:u'សាច់ប្រាក់ក្នុងដៃ\nCash in hand',
		                2:u'',
		                3:u'',
		                4:u'%s' %ChashInHand,
		                'LineType':'LD',
						'Indent':1.5,
						'RowBGColor':"",
						'LineFormat':""
		            })

		ExcelRecord.update({
		"F9" : Decimal(ChashInHand),
			})

		CurrencyObj =   MKT_CURRENCY.query
		if not CurrencyDic:
		    flash(msg_error+"NBC Exchange Rate isn't defined")
		    return []
		    
		if not CurrencyDic:
		    flash(msg_error+"NBC Exchange Rate isn't defined") 
		    return  {
		                'ReportHeader'  : ReportHeader,
		                'ColumnHeader'  : 'ColumnHeader',
		                'Data'          : [],
		                'Type'          : 'Type',
		                'TotalLiquidAsset': '%s' %0,
		                'VoluntarySaving': '%s' %0,
		                'DevidedResult' : '%s' %0
		            }
		
		DepositNBC 				= 	getGLValueForField(Branch, Period,"DepositNBC", CurrencyDic,**Kargs)
		SubTotal    			+=  DepositNBC
		SubTotalA 				+=   Decimal(DepositNBC)

		Data.append({
		                1:u'ប្រាក់បញ្ជើនៅធនាគារជាតិនៃកម្ពុជា \nDeposit with NBC',
		                2:u'',
		                3:u'',
		                4:u'%s' %DepositNBC,
		                'LineType':'LD',
						'Indent':1.5,
						'RowBGColor':"",
						'LineFormat':""
		            })

		ExcelRecord.update({
			"F10" : Decimal(DepositNBC),
			})

		DepositBank 		= 	getGLValueForField(Branch, Period,"DepositBank", CurrencyDic,**Kargs)
		SubTotal        	+=  Decimal(DepositBank)
		SubTotalA 			+=   Decimal(DepositBank)

		Data.append({
		                1:u'ប្រាក់បញ្ជើនៅធនាគារផ្សេងៗ\nDeposit with Banks',
		                2:u'',
		                3:u'',
		                4:u'%s' %DepositBank,
		                'LineType':'LD',
						'Indent':1.5,
						'RowBGColor':"",
						'LineFormat':""
		            })
		ExcelRecord.update({
			"F11" : Decimal(DepositBank),
			})

		Data.append({
		                1:u'<div class="text-center">សរុប\nTotal</div>',
		                2:u'',
		                3:u'',
		                4:mktmoney.formatNumber(float(SubTotalA), 1, 2),
		                'LineType':'LD',
						'Indent':0,
						'RowBGColor':mktnbc.BG_BODY_COLOR,
						'LineFormat':'bold'
		            })

		TAmountOwedNBC 			= 	getGLValueForField(Branch, Period,"AmountOwedNBC", CurrencyDic,**Kargs)
		SubTotal        		+= 	Decimal(TAmountOwedNBC)

		Data.append({
		                1:u'ដក ៖ &emsp;&nbsp;&nbsp; ចំនួនទឹកប្រាក់ជំពាក់ធនាគារជាតិនៃកម្ពុជា ដែលមានរយៈពេលនៅសល់មិនលើសពី១ខែ\nMinus : &nbsp;&nbsp;&nbsp;Amounts Owed to NBC with maturities of 1 Month or Less',
		                2:u'',
		                3:u'',
		                4:u'%s' %TAmountOwedNBC,
		                'LineType':'GH',
						'Indent':0,
						'RowBGColor':"",
						'LineFormat':""
		            })

		ExcelRecord.update({
			"F13" : Decimal(TAmountOwedNBC),
			})


		TAmountOwedBank 		= 	getGLValueForField(Branch, Period,"AmountOwedBank", CurrencyDic,**Kargs)
		SubTotal        		+=  Decimal(TAmountOwedBank)

		Data.append({
		                1:u'ចំនួនទឹកប្រាក់ជំពាក់ធនាគារ និងគ្រឹះស្ថានផ្សេងៗ ដែលមានរយៈពេលនៅសល់មិនលើសពី១ខែ\nAmounts Owed to Banks and Other Institutions with maturities of 1 Month or Less',
		                2:u'',
		                3:u'',
		                4:u'%s' %TAmountOwedBank,
		                'LineType':'LD',
						'Indent':1.5,
						'RowBGColor':"",
						'LineFormat':""
		            })
		ExcelRecord.update({
			"F14" : Decimal(TAmountOwedBank),
			})

		SubTotalB 		= TAmountOwedBank + TAmountOwedNBC
		NetLiquidity 	= SubTotalA - SubTotalB
		Data.append({ 	
						1:u'<div class="text-center">សរុប\nTotal</div>',
		                2:u'',
		                3:u'',
		                4:mktmoney.formatNumber(float(SubTotalB), 1, 2),
		                'LineType':'LD',
						'Indent':0,
						'RowBGColor':mktnbc.BG_BODY_COLOR,
						'LineFormat':'bold'
		            })
		Data.append({
		                1:u'សាច់ប្រាក់ងាយស្រួលសុទ្ធ\nNet Liquidity',
		                2:u'',
		                3:u'',
		                4:mktmoney.formatNumber(float(NetLiquidity), 1, 2),
		                'LineType':'LD',
						'Indent':1.5,
						'RowBGColor':"",
						'LineFormat':""
		            })


		LoanAmount 		= nbcmfisetting.getAmountBeforeLoanReachMaturity(Branch)
		if BaseCurrency =='USD':
			LoanAmount = LoanAmount * Decimal(BaseCurrObj.OtherRate1) /1000000
		TotalLiquidAsset = LoanAmount + NetLiquidity

		Data.append({
		                1:u'បូក ៖ &emsp;&nbsp;&nbsp; ឥណទានដែលមានឥណប្រតិទាននៅសល់តិចជាង ១ ខែ\nPlus : &emsp;&nbsp; Portion of Loans Maturing in Less than 1 Month',
		                2:u'',
		                3:u'',
		                4:u'%s' %(mktmoney.formatNumber(float(str(LoanAmount).replace(',','')), 1, 2)),
		                'LineType':'GH',
						'Indent':0,
						'RowBGColor':"",
						'LineFormat':""
		            })
		ExcelRecord.update({
			"F17" : Decimal(LoanAmount),
			})

		Data.append({
		                1:u'<div class="text-center">សរុបទ្រព្យសកម្មងាយស្រួល\n\tTotal Liquid Assets</div>',
		                2:u'',
		                3:u'',
		                4:u'%s' %(mktmoney.formatNumber(float(TotalLiquidAsset), 1, 2)),
		                'LineType':'LD',
						'Indent':0,
						'RowBGColor':mktnbc.BG_BODY_COLOR,
						'LineFormat':'bold'
		            })


		Data.append({
		                1:u'២. ភាគបែង៖ ចំនួនប្រាក់បញ្ជើដែលបានកែសម្រួល\n2. DENOMINATOR: Adjusted Amount of Deposits',
		                2:u'',
		                3:u'',
		                4:u'',
		                'LineType':'GH',
						'Indent':0,
						'RowBGColor':mktnbc.BG_HEADER_COLOR,
						'LineFormat':'bold'
		            })

		Data.append({
		                1:u'ប្រភពប្រាក់បញ្ញើ\nCATEGORY OF DEPOSITS',
		                2:u'ចំនួនទឹកប្រាក់\nAMOUNT',
		                3:u'%',
		                4:u'ចំនួនទឹកប្រាក់ដែលបានកែសម្រួល\nADJUSTED AMOUNT',
						'LineType':'GH',
						'Indent':0,
						'RowBGColor':mktnbc.BG_BODY_COLOR,
						'LineFormat':'bold'
		            })


		TVoluntarySaving	= 	getGLValueForField(Branch, Period,"VoluntaryDeposits", CurrencyDic,**Kargs)
		Adjusted        	=   TVoluntarySaving * 25 / 100
		Data.append({
		                1:u'ប្រាក់សន្សំដោយស្ម័គ្រចិត្ត\nVoluntary Deposits',
		                2:u'%s' %TVoluntarySaving,
		                3:u'25%',
		                4:u'%s' %mktmoney.formatNumber(float(Adjusted),1,2),
		                'LineType':'LD',
						'Indent':1.5,
						'RowBGColor':"",
						'LineFormat':""
		            })
		ExcelRecord.update({
			"D21" : Decimal(TVoluntarySaving),
			})
		Data.append({
		                1:u'<div class="text-center">សរុប\nTotal</div>',
		                2:u'',
		                3:u'',
		                4:mktmoney.formatNumber(Adjusted,1,2),
		                'LineType':'GH',
						'Indent':'',
						'RowBGColor':mktnbc.BG_BODY_COLOR,
						'LineFormat':'bold'	
		            })

		DevidedResult   =   0 if Adjusted == 0 else float(TotalLiquidAsset) / float(Adjusted)*100
		
		Data.append({
		                1:u'៣. អនុបាតសន្ទនីយភាព (៣ = ១ / ២)\n3. Liquidity Ratio (3 = 1 / 2)',
		                2:u'',
		                3:u'',
		                4:u'%s %s' %(mktmoney.formatNumber(DevidedResult,1,2), "%"),
		                'LineType':'GH',
						'Indent':0,
						'RowBGColor':mktnbc.BG_HEADER_COLOR,
						'LineFormat':'bold'
		            })


		Result 	=	{'Data':Data, 'ReportHeader':ReportHeader,'TableHeader':TableHeader, 'Excel': ExcelRecord}
		CellSyle = {
					'B8':'top*medium,FF000000',
					'C8':'top*medium,FF000000:bottom*thin,FF000000',
					'D8':'top*medium,FF000000:bottom*thin,FF000000',
					'E8':'top*medium,FF000000:bottom*thin,FF000000',
					'F8':'top*medium,FF000000:right*medium,FF000000',

					'C10':'top*thin,FF000000:bottom*thin,FF000000',
					'D10':'top*thin,FF000000:bottom*thin,FF000000',
					'E10':'top*thin,FF000000:bottom*thin,FF000000',


					'C12':'top*thin,FF000000:bottom*thin,FF000000',
					'D12':'top*thin,FF000000:bottom*thin,FF000000',
					'E12':'top*thin,FF000000:bottom*thin,FF000000',


					'C14':'top*thin,FF000000:bottom*thin,FF000000',
					'D14':'top*thin,FF000000:bottom*thin,FF000000',
					'E14':'top*thin,FF000000:bottom*thin,FF000000',


					'C16':'top*thin,FF000000:bottom*thin,FF000000',
					'D16':'top*thin,FF000000:bottom*thin,FF000000',
					'E16':'top*thin,FF000000:bottom*thin,FF000000',

					'B18':'bottom*thin,FF000000',
					'C18':'top*thin,FF000000:bottom*thin,FF000000',
					'D18':'top*thin,FF000000:bottom*thin,FF000000',
					'E18':'top*thin,FF000000:bottom*thin,FF000000',


					'C20':'top*thin,FF000000:bottom*thin,FF000000',
					'B20':'top*thin,FF000000:bottom*thin,FF000000',

					'C22':'top*thin,FF000000:bottom*thin,FF000000',
					'B22':'top*thin,FF000000:bottom*thin,FF000000',

					'C23':'top*thin,FF000000:bottom*medium,FF000000',
					'B23':'top*thin,FF000000:bottom*medium,FF000000',
					'D23':'top*thin,FF000000:bottom*medium,FF000000',
					'E23':'top*thin,FF000000:bottom*medium,FF000000',


					}

		return Result, CellSyle

	except:
		raise
