# -*- coding: utf-8 -*-
'''
Report Name: Network Information
'''

from app.mktcore.imports 		import *

import app.tools.mktsetting     as mktsetting
import app.tools.mktmoney       as mktmoney
import app.tools.mktnbc         as mktnbc
import app.tools.mktaddress 	as mktaddress

from decimal                    import *

from app.Province.models 		import *
from app.District.models 		import *
from app.Commune.models 		import *
from app.LoanContract.models 	import *
from app.AccProduct.models 		import *
from app.Employee.models 		import MKT_EMPLOYEE
from app.Customer.models 		import *
import app.NBCReport.V2.MFI.NBCMFISetting as NBCMFISetting
from app.Currency.models 		import *

def getMFI20(Branch = 'ALL'):
	''' This function must return result like below:
		Result = {
			'Data': 		Data,
			'Excel': 		Excel,
			'ReportHeader': ReportHeader,
			'TableHeader': 	TableHeader
			}
	'''
	try:
		ReportHeader 	=   mktnbc.getHeaderReport(	ReportName 		=	u'MONTHLY REPORT ON NETWORK INFORMATION',
													Title 			=	u'របាយការណ៍ប្រចាំត្រីមាសស្តីពី ព័ត៌មានបណ្តាញប្រតិបត្តិការ',
													Form 			=	'20')
		Result			=   {}
		TableHeader 	= 	{}

		TableHeader = mktnbc.setTableHeader(Text=u"ខេត្ត-រាជធានី\nProvincial/Cities Branches", 
									 Rowspan=4,Colspan=2,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនសាខា\nNumber of branches", 
									 Rowspan=0,Colspan=3,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ស្នាក់ការ\nកណ្តាល HQ", 
									 Rowspan=3,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ខេត្ត-ក្រុង\nProvince/Krong", 
									 Rowspan=3,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ខណ្ឌ-ស្រុក\nKhan/ Srok", 
									 Rowspan=3,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u"សមតុល្យឥណទាន\nLoan Outstanding", 
									 Rowspan=0,Colspan=5,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនទឹកប្រាក់\nAmount", 
									 Rowspan=3,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនអ្នកខ្ចី\nNumber of borrowers", 
									 Rowspan=0,Colspan=4,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"រូបវ័ន្តបុគ្គល\nIndividual", 
									 Rowspan=0,Colspan=2,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"និតិបុគ្គល\nLegal Entities", 
									 Rowspan=2,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"សរុប\nTotal", 
									 Rowspan=2,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ប្រុស\nMale​", 
									 Rowspan=0,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ស្រី\nFemale", 
									 Rowspan=0,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")


		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u"សមតុល្យប្រាក់បញ្ញើ\nDeposit Balance", 
									 Rowspan=0,Colspan=5,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនទឹកប្រាក់\nAmount", 
									 Rowspan=3,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនអ្នកខ្ចី\nNumber of borrowers", 
									 Rowspan=0,Colspan=4,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"រូបវ័ន្តបុគ្គល\nIndividual", 
									 Rowspan=0,Colspan=2,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"និតិបុគ្គល\nLegal Entities", 
									 Rowspan=2,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"សរុប\nTotal", 
									 Rowspan=2,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")
		
		TableHeader = mktnbc.setTableHeader(Text=u"ប្រុស\nMale​", 
									 Rowspan=0,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ស្រី\nFemale", 
									 Rowspan=0,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនបុគ្គលិក\nNumber of staff", 
									 Rowspan=0,Colspan=3,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ប្រុស\nMale​",
									 Rowspan=3,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ស្រី\nFemale",
									 Rowspan=3,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"សរុប\nTotal",
									 Rowspan=3,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u"ប៉ុស្តិ៍សេវា\nService Post", 
									 Rowspan=5,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")


		Data, Excel = getNBCReportByProvince(Branch, ReportHeader)


		Result.update({'TableHeader':TableHeader,'ReportHeader':ReportHeader,'Data':Data, 'Excel': Excel})
		CellSyle = {
					'C6':'top*medium,FF000000',
					'D6':'top*medium,FF000000',
					'F6':'top*medium,FF000000',
					'G6':'top*medium,FF000000:bottom*thin,FF000000',
					'H6':'top*medium,FF000000:bottom*thin,FF000000',
					'I6':'top*medium,FF000000:bottom*thin,FF000000',
					'K6':'top*medium,FF000000',
					'L6':'top*medium,FF000000:bottom*thin,FF000000',
					'M6':'bottom*thin,FF000000',
					'N6':'top*medium,FF000000:bottom*thin,FF000000',
					'P6':'top*medium,FF000000',

					'B8':'left*thin,FF000000:right*thin,FF000000',
					'B9':'left*thin,FF000000:right*thin,FF000000',


					'D8':'left*thin,FF000000:right*thin,FF000000',
					'D9':'left*thin,FF000000:right*thin,FF000000',
					'G8':'top*thin,FF000000',
					'I9':'left*thin,FF000000:right*thin,FF000000',
					'L8':'top*thin,FF000000',
					'N9':'left*thin,FF000000:right*thin,FF000000',

					'P8':'left*thin,FF000000:right*thin,FF000000',
					'P9':'left*thin,FF000000:right*thin,FF000000',

					'R7':'right*medium,FF000000',
					'R8':'left*thin,FF000000:right*medium,FF000000',
					'R9':'left*thin,FF000000:right*medium,FF000000',

					}

		return Result, CellSyle

		return Result, {}

	except Exception as e:
		raise

def getNBCReportByProvince(Branch, ReportHeader):
	try:
		CurrencyDic 		= ReportHeader['DicExchangeRate'] 
		Language 			=	mktnbc.getDefaultLang()
		RowRecord 			=	[] # Return value
		ExcelRecord			=	{} # Excel

		ExcelRecord.update({
				"I3" : ReportHeader.get('ReportedDate',""),
				"C4" : ReportHeader.get('CompanyName',""),
				"O5" : Decimal(ReportHeader.get('ReportingRate',0))
			})

		i 						= 1
		CellRow 				= 10
		TotalHQ 				= 0
		TotalProvince 			= 0
		TotalDistrict 			= 0
		TotOutstandingAmount 	= 0
		TotalMale 				= 0
		TotalFemale 			= 0
		TotalMaleFemale 		= 0
		BranchInfoObj = getFinalBranchInfo(Branch)

		ProLineDict1 = {u'Banteay Meanchey': 10 , u'Battambang': 11 , u'Kampong Cham': 12,
							u'Kampong Chhnang': 13 , u'Kampong Speu': 14 , u'Kampong Thom': 15, 
							u'Kampot': 16 , 'Kandal': 17 , u'Koh Kong': 18,
							u'Kratie': 19 , 'Mondul Kiri': 20 , u'Phnom Penh': 21,
							u'Preah Vihear': 22 , 'Prey Veng': 23 , u'Pursat': 24,
							u'Ratanak Kiri': 25 , 'Siemreap': 26 , u'Preah Sihanouk': 27,
							u'Stung Treng': 28 , 'Svay Rieng': 29 , u'Takeo': 30,
							u'Oddar Meanchey': 31 , 'Kep Province': 32 , u'Pailin': 33,
							u'Tboung Khmum': 34}

		ProLineDict2 = {10:u'Banteay Meanchey' , 11:u'Battambang' , 12:u'Kampong Cham',
							13:u'Kampong Chhnang' , 14:u'Kampong Speu' , 15:u'Kampong Thom', 
							 16:u'Kampot', 17:'uKandal' , 18:u'Koh Kong',
							19:u'Kratie' , 20:u'Mondul Kiri' , 21:u'Phnom Penh',
							22:u'Preah Vihear', 23:u'Prey Veng' , 24:u'Pursat',
							25:u'Ratanak Kiri', 26:u'Siemreap', 27:u'Preah Sihanouk',
							28:u'Stung Treng' , 29:'uSvay Rieng' , 30:u'Takeo',
							31:u'Oddar Meanchey' , 32:'Kep Province' , 33:u'Pailin',
							34:u'Tboung Khmum'}
		RowNumber = 10
		for Pro in ProLineDict1:
			RNum =int(ProLineDict1[Pro])
			ExcelRecord.update({
					"A%s"%RNum:Pro,
					"B%s"%RNum: '',
					"C%s"%RNum: '',
					"D%s"%RNum: '',
					"E%s"%RNum: '',
					"F%s"%RNum: '',
					"G%s"%RNum: '',
					"H%s"%RNum: '',
					"J%s"%RNum: '',
					"K%s"%RNum: '',
					"L%s"%RNum: '',
					"M%s"%RNum: '',
					"O%s"%RNum: '',
					"P%s"%RNum: '',
					"R%s"%RNum: ''
				})
			RowNumber = RowNumber + 1
		if BranchInfoObj:
			for Obj in BranchInfoObj:
				num = ProLineDict1.get(Obj.Province)
				RowRecord.append({
								1:str(i),
								2:Obj.Province,
								3:str(Obj.HQ),
								4:str(Obj.ProvinceBranch),
								5:str(Obj.DistrictBranch),
								6:mktmoney.formatNumber(Obj.OutstandingAmount if Obj.OutstandingAmount else 0),
								7:str(Obj.Male),
								8:str(Obj.Female),
								9:'0',
								10:str(Obj.Gender),
								11:mktmoney.formatNumber(0),
								12:'',
								13:'',
								14:'0',
								15:'0',
								16:'',
								17:'',
								18:'0',
								19:'0',
								'LineType':'GH',
								'Indent':0,
								'RowBGColor':'',
								'LineFormat':''
							})

				ExcelRecord.update({
							"A%s"%(num) : Obj.Province,
							"B%s"%(num) : Obj.HQ,
							"C%s"%(num) : Obj.ProvinceBranch,
							"D%s"%(num) : Obj.DistrictBranch,
							"E%s"%(num) : Obj.OutstandingAmount  if Obj.OutstandingAmount else 0,
							"F%s"%(num) : Obj.Male,
							"G%s"%(num) : Obj.Female,
							"H%s"%(num) : 0,
							"J%s"%(num) : 0,
							"K%s"%(num) : '',
							"L%s"%(num) : '',
							"M%s"%(num) : 0,
							"O%s"%(num) : '',
							"P%s"%(num) : '',
							"R%s"%(num) : 0
						})

				i 						+= 1
				CellRow 				+= 1
				TotalHQ 				+= Obj.HQ
				TotalProvince 			+= Obj.ProvinceBranch
				TotalDistrict 			+= Obj.DistrictBranch
				TotOutstandingAmount 	+= Obj.OutstandingAmount  if Obj.OutstandingAmount else 0
				TotalMale 				+= Obj.Male
				TotalFemale 			+= Obj.Female
				TotalMaleFemale 		+= Obj.Gender

		RowRecord.append({
							1:'',
							2:u'សរុប',
							3:str(TotalHQ),
							4:str(TotalProvince),
							5:str(TotalDistrict),
							8:mktmoney.formatNumber(TotOutstandingAmount),
							9:str(TotalMale),
							10:str(TotalFemale),
							11:'0',
							12:str(TotalMaleFemale),
							13:mktmoney.formatNumber(0),
							14:str(0),
							15:str(0),
							16:'0',
							17:'0',
							18:'0',
							19:'0',
							20:'0',
							21:'0',
							'LineType':'GH',
							'Indent':0,
							'RowBGColor':mktnbc.BG_BODY_COLOR,
							'LineFormat':'bold'
						})

		return RowRecord, ExcelRecord

	except:
		raise



def getBranchInfo(Branch='ALL'):
	BranchInfo = db.session.query(
									MKT_PROVINCE.Description.label('Province'),
									MKT_LOAN_CONTRACT.ContractCustomerID.label('CustomerID'),
									case([(
										MKT_BRANCH.ID.in_(['HO','HQ']),
										MKT_BRANCH.ID
									)]).label('HQ'),
									case([(
										MKT_PROVINCE.ID  == MKT_BRANCH.Province,
										MKT_BRANCH.ID
									)]).label('ProvinceBranch'),
									case([(
										MKT_DISTRICT.ID  == MKT_BRANCH.District,
										MKT_BRANCH.ID
									)]).label('DistrictBranch'),
									(MKT_LOAN_CONTRACT.OutstandingAmount * cast(MKT_CURRENCY.OtherRate1, Float)).label('OutstandingAmount'),
									case([(
										MKT_CUSTOMER.Gender == 'Male',
										MKT_CUSTOMER.Gender
									)]).label('Male'),
									case([(
									MKT_CUSTOMER.Gender == 'Female',
									MKT_CUSTOMER.Gender
									)]).label('Female'),
									MKT_CUSTOMER.Gender.label('Gender')
								).\
								outerjoin(MKT_BRANCH , MKT_PROVINCE.ID  == MKT_BRANCH.Province).\
								outerjoin(MKT_DISTRICT , MKT_DISTRICT.ID  == MKT_BRANCH.District).\
								outerjoin(MKT_LOAN_CONTRACT , MKT_LOAN_CONTRACT.Branch == MKT_BRANCH.ID).\
								outerjoin(MKT_CUSTOMER , MKT_CUSTOMER.ID == MKT_LOAN_CONTRACT.ContractCustomerID).\
								outerjoin(MKT_CURRENCY, MKT_CURRENCY.ID==MKT_LOAN_CONTRACT.Currency).\
								filter(MKT_LOAN_CONTRACT.OutstandingAmount > 0).\
								subquery()

	BranchInfo = db.session.query(BranchInfo.c.Province,
								BranchInfo.c.CustomerID,
								BranchInfo.c.HQ,
								BranchInfo.c.ProvinceBranch,
								BranchInfo.c.DistrictBranch,
								func.sum(BranchInfo.c.OutstandingAmount).label('OutstandingAmount'),
								BranchInfo.c.Male,
								BranchInfo.c.Female,
								BranchInfo.c.Gender).\
								group_by(BranchInfo.c.Province,
								BranchInfo.c.CustomerID,
								BranchInfo.c.HQ,
								BranchInfo.c.ProvinceBranch,
								BranchInfo.c.DistrictBranch,
								BranchInfo.c.Male,
								BranchInfo.c.Female,
								BranchInfo.c.Gender).subquery()
	if Branch not in ['','ALL',None]:
		Branch = NBCMFISetting.getSplitData(Branch)
		BranchInfo = db.session.query(BranchInfo).filter(BranchInfo.c.HQ.in_(Branch)).subquery()

	return BranchInfo

def getFinalBranchInfo(Branch='ALL'):
	BranchInfoObj = getBranchInfo(Branch)
	ReadAs = 1000000
	BranchInfo = db.session.query(
									BranchInfoObj.c.Province.label('Province'),
									func.count(distinct(BranchInfoObj.c.HQ)).label('HQ'),
									func.count(
										distinct(BranchInfoObj.c.Province)
										).label('ProvinceBranch'),
									func.count(distinct(BranchInfoObj.c.DistrictBranch)).label('DistrictBranch'),
									(func.sum(BranchInfoObj.c.OutstandingAmount)/ReadAs).label('OutstandingAmount'),
									func.count(BranchInfoObj.c.Male).label('Male'),
									func.count(BranchInfoObj.c.Female).label('Female'),
									func.count(BranchInfoObj.c.Gender).label('Gender')
								).\
								group_by(BranchInfoObj.c.Province).\
								distinct(BranchInfoObj.c.Province).\
								order_by(BranchInfoObj.c.Province.asc()).all()
	
	return BranchInfo
