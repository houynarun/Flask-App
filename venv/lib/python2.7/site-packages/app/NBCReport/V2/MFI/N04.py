# -*- coding: utf-8 -*-

'''
Report Name : Off Balance

'''

from app.mktcore.imports 		import *
import app.tools.mktmessage 	as mktmessage
import app.tools.mktdate		as mktdate
import app.tools.mktnbc			as mktnbc
import app.tools.mktmoney		as mktmoney
from decimal 					import Decimal

from app.GLBalance.models 		import MKT_GL_BALANCE, MKT_GL_BALANCE_BACKUP


def getMFI04(Branch = "ALL", ReportedDate = "", Period = 2, Month = "", Year = ""):
	try:

		ID = 'N003'
		Result 			=	mktnbc.getNBCLineReport(ID, int(Period), Branch, ReportedDate, Year=Year, Month=Month)
		Data 			= 	Result[0].get("Data",[])

		ReportHeader 	=	mktnbc.getHeaderReport(	ReportName 		=	u'របាយការណ៏ប្រចាំខែសី្តពី ក្រៅតារាងតុល្យការ',
													Title 			=	'',
													Form 			=	'4')
		RecordRow 	= []
		ExcelRecord = {}
		TableHeader = {}

		ExcelRecord.update({
						"D4" : ReportHeader.get('ReportedDate',""),
						"C6" : ReportHeader.get('CompanyName',""),
						"E8" : Decimal(ReportHeader.get('ReportingRate',0))
					})

		TableHeader = mktnbc.setTableHeader(Text=u'', 
                                            Rowspan=2,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u'រៀល\nRiels', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u'1', 
                                            Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u'រូបិយបណ្ណផ្សេងៗគិតជារៀល\nOther Currencies Translated into Riels', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u'2', 
                                            Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u'សរុបជារៀល\nTotal in Riels', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u'3 = 2 + 1', 
                                            Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		LineNumber = 11
		for item in Data:
			row = dict(item)
			Description = row.get("Description","")
			AmountInRiel= row.get("AmountInRiels",0)
			OtherAmount = row.get("OtherAmount",0)
			TotalAmount = row.get("TotalInRiels",0)
			LineType 	= row.get("LineType",'LD')
			Indent		= row.get("Indent",0)
			RowBGColor 	= row.get("RowBGColor","")
			LineFormat  = row.get("LineFormat","")
			YTDBalance 	= row.get("YTDBalance","")


			RecordRow.append({
					1:Description,
					2:mktmoney.formatNumber(AmountInRiel, 1, 2),
					3:mktmoney.formatNumber(OtherAmount, 1, 2),
					4:mktmoney.formatNumber(TotalAmount, 1, 2),
					'LineType':LineType,
					'Indent':Indent,
					'RowBGColor':RowBGColor,
					'LineFormat':'LineFormat'
				})

			ExcelRecord.update({
							"E%s"%(LineNumber) : AmountInRiel,
							"F%s"%(LineNumber) : OtherAmount,
						})
			LineNumber += 1
		Result = {'ReportHeader': ReportHeader, 'TableHeader': TableHeader, 'Data':RecordRow, 'Excel':ExcelRecord}
		'''
		BORDER_NONE = None
		BORDER_DASHDOT = 'dashDot'
		BORDER_DASHDOTDOT = 'dashDotDot'
		BORDER_DASHED = 'dashed'
		BORDER_DOTTED = 'dotted'
		BORDER_DOUBLE = 'double'
		BORDER_HAIR = 'hair'
		BORDER_MEDIUM = 'medium'
		BORDER_MEDIUMDASHDOT = 'mediumDashDot'
		BORDER_MEDIUMDASHDOTDOT = 'mediumDashDotDot'
		BORDER_MEDIUMDASHED = 'mediumDashed'
		BORDER_SLANTDASHDOT = 'slantDashDot'
		BORDER_THICK = 'thick'
		BORDER_THIN = 'thin'
		'''
		CellSyle = {
					'D8':'bottom*medium,FF000000',
					'B10':'bottom*thin,FF000000',
					'C10':'bottom*thin,FF000000',
					'D10':'bottom*thin,FF000000',
					'C12':'bottom*thin,FF000000:top*thin,FF000000',
					'D12':'bottom*thin,FF000000:top*thin,FF000000',
					'C14':'bottom*thin,FF000000:top*thin,FF000000',
					'D14':'bottom*thin,FF000000:top*thin,FF000000',

					'C16':'bottom*thin,FF000000:top*thin,FF000000',
					'D16':'bottom*thin,FF000000:top*thin,FF000000',

					'C18':'bottom*thin,FF000000:top*thin,FF000000',
					'D18':'bottom*thin,FF000000:top*thin,FF000000',

					'C20':'bottom*thin,FF000000:top*thin,FF000000',
					'D20':'bottom*thin,FF000000:top*thin,FF000000',
					'B20':'bottom*thin,FF000000',

					'B21':'bottom*medium,FF000000',
					'C21':'bottom*medium,FF000000',
					'D21':'bottom*medium,FF000000',
					}

		return Result, CellSyle
	except:
		raise