# -*- coding: utf-8 -*-
'''
Report Name: MONTHLY REPORT ON LOANS CLASSIFIED BY TYPES OF CURRENCIES

'''

from app.mktcore.imports        import *
import app.tools.mktdate        as mktdate
import app.tools.mktsetting     as mktsetting
import app.tools.mktmoney       as mktmoney
import app.tools.mktnbc         as mktnbc
import app.tools.mktmessage     as mktmessage
from app.LoanContract.models    import *
from app.Currency.models        import MKT_CURRENCY
from app.LoanProduct.models     import MKT_LOAN_PRODUCT
from app.InterestRate.models    import MKT_INTEREST_RATE
from app.Customer.models        import MKT_CUSTOMER
from decimal                    import *


def getMFI18(Branch = "ALL", ReportedDate = ""):
    try:

        Result          = {}
        Data            = []
        Excel           = {}

        ReportHeader    = mktnbc.getHeaderReport(   ReportName      =   u'MONTHLY REPORT ON LOANS CLASSIFIED BY TYPES OF CURRENCIES',
                                                    Title           =   u'របាយការណ៍ប្រចាំខែស្តីពី ឥណទានចំណាត់ថ្នាក់តាមប្រភេទរូបិយប័ណ្ណ',
                                                    Form            =   '18'
                                                    )
        TableHeader     = {}
        TableHeader     = mktnbc.setTableHeader(Text=u'ប្រភេទរូបិយប័ណ្ណ\nCurrency', 
                                            Rowspan=2,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
        #----------------------------------------------------------------------------------------------------------------#
        TableHeader     = mktnbc.setTableHeader(Text=u'និវេសជន\nResidents', 
                                            Rowspan=0,Colspan=3,RowIndex=1, TableHeader=TableHeader, Class="text-center")

        TableHeader     = mktnbc.setTableHeader(Text=u'ចំនួនឥណទាន\nNumber of Loans', 
                                            Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

        TableHeader     = mktnbc.setTableHeader(Text=u'ចំនួនទឹកប្រាក់តាមប្រភេទរូបិយប័ណ្ណ\nAmount by Currency', 
                                            Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

        TableHeader     = mktnbc.setTableHeader(Text=u'ចំនួនទឹកប្រាក់ជារៀល\nAmount in KHR', 
                                            Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
        #----------------------------------------------------------------------------------------------------------------#
        TableHeader     = mktnbc.setTableHeader(Text=u'អនិវេសជន\nNon-Residends', 
                                            Rowspan=0,Colspan=3,RowIndex=1, TableHeader=TableHeader, Class="text-center")

        TableHeader     = mktnbc.setTableHeader(Text=u'ចំនួនឥណទាន\nNumber of Loans', 
                                            Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

        TableHeader     = mktnbc.setTableHeader(Text=u'ចំនួនទឹកប្រាក់តាមប្រភេទរូបិយប័ណ្ណ\nAmount by Currency', 
                                            Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

        TableHeader     = mktnbc.setTableHeader(Text=u'ចំនួនទឹកប្រាក់ជារៀល\nAmount in KHR', 
                                            Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
        #----------------------------------------------------------------------------------------------------------------#

        TableHeader     = mktnbc.setTableHeader(Text=u'កំណត់សំគាល់\nRemarks', 
                                            Rowspan=2,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")

        Excel.update({
                "C4" : ReportHeader.get('ReportedDate',""),
                "B6" : ReportHeader.get('CompanyName',""),
                "G8" : Decimal(ReportHeader.get('ReportingRate',0))
            })
        
        RowRecord       =   []
        CurrencyList        =   ['KHR','USD','EUR','JPY','THB','HKD','MYR','SGD']
        KhCurrencyList  =   {
                                "KH":{'KHR':u'បា្រក់រៀល', 'USD':u'បា្រក់ដុល្លារអាមេរិក', 'THB':u'បា្រក់បាត'},
                                "EN":{'KHR':u'KHMER RIELS', 'USD':u'US DOLLARS', 'THB':u'THAI BAHTS'}
                            }
        OrderNumber     =   {'1':u'១', '2':u'២', '3':u'៣', '4':u'៤', '5':u'៥', '6':u'៦', '7':u'៧', '8':u'៨'}

        RecordObj       =   db.session.query(
                                MKT_CURRENCY.ID,
                                func.count(MKT_CURRENCY.ID).label('NumberOfLoan'),
                                func.sum(MKT_LOAN_CONTRACT.OutstandingAmount).label('OutstandingAmount'),
                                MKT_CUSTOMER.Resident
                            ).\
                            outerjoin(
                                MKT_LOAN_CONTRACT,
                                MKT_LOAN_CONTRACT.Currency == MKT_CURRENCY.ID
                            ).\
                            outerjoin(
                                MKT_CUSTOMER, 
                                MKT_CUSTOMER.ID == MKT_LOAN_CONTRACT.ContractCustomerID
                              ).\
                            filter(MKT_CURRENCY.ID.in_(CurrencyList)).\
                            filter(MKT_LOAN_CONTRACT.DisbursedStat == 'Y').\
                            filter(MKT_LOAN_CONTRACT.OutstandingAmount > 0)
        CurrencyObj     =   MKT_CURRENCY.query
        if Branch != "ALL":
            Branch      =   Branch.split()
            RecordObj   =   RecordObj.\
                            filter(MKT_LOAN_CONTRACT.Branch.in_(Branch))

        RecordObj       =   RecordObj.\
                            group_by(MKT_CURRENCY.ID,MKT_CUSTOMER.Resident).\
                            order_by(MKT_CURRENCY.ID.asc())

        DataDict        =   {}

        if RecordObj:
            for item in RecordObj:
                KeyGroupBy = '%s%s'%(item.ID,item.Resident)
                DataDict.update({KeyGroupBy: {
                                            'OutstandingAmount': item.OutstandingAmount,
                                            'NumberOfLoan': item.NumberOfLoan,
                                            'Resident':item.Resident
                                        }}) 
        
        ReportedDate    =   datetime.strptime(str(ReportedDate), "%Y-%m-%d").date()
        Year            =   ReportedDate.year
        Month           =   ReportedDate.month
        CurrencyDic     =   mktnbc.getNBCExchangeRate(Year, Month)

        ResTAmountInRiel   =   0
        ResTNumOfRecord    =   0
        NonResTAmountInRiel=   0
        NonResTNumOfRecord =   0
        
        CellRow             =   11

        for item in CurrencyList:

            ResidentKey     =   '%sY'%(item) # Y : Mean that Customer is Resident
            NonResidentKey  =   '%sN'%(item) # N : Mean that Customer is Non-Resident

            # Get Data by group by
            ResidentData    =   DataDict.get(ResidentKey, {})
            NonResidentData =   DataDict.get(NonResidentKey, {})

            ExchageRate     =   Decimal(CurrencyDic.get(item,1))
            """
                Resident
            """
            # Block Resident 
            ResOutstanding     =   ResidentData.get('OutstandingAmount',0)

            ResAmountInRiel    =   ResOutstanding * ExchageRate / 1000000

            ResNumberOfLoan    =   ResidentData.get('NumberOfLoan',0)
            # Total
            ResTAmountInRiel   +=  ResAmountInRiel
            ResTNumOfRecord    +=  ResNumberOfLoan

            # End Block Resident 

            """
                Non-Resident
            """
            # Block Non-Resident
            NonResOutstanding     =   NonResidentData.get('OutstandingAmount',0)

            NonResAmountInRiel    =   NonResOutstanding * ExchageRate / 1000000

            NonResNumberOfLoan    =   NonResidentData.get('NumberOfLoan',0)
            
            # Total
            NonResTAmountInRiel   +=  NonResAmountInRiel
            NonResTNumOfRecord    +=  NonResNumberOfLoan
            RowRecord.append({
                    1:item,
                    2:u'%s' %(mktmoney.formatNumber(float(ResNumberOfLoan), 1, 0)),
                    3:u'%s' %(mktmoney.toMoney(float(ResOutstanding), CurrencyObj.get(item)) if CurrencyObj.get(item) else '0.00'),
                    4:u'%s' %(mktmoney.formatNumber(float(ResAmountInRiel), 1, 2)),
                    5:u'%s' %(mktmoney.formatNumber(float(NonResNumberOfLoan), 1, 0)),
                    6:u'%s' %(mktmoney.formatNumber(float(NonResOutstanding), 1, 2)),
                    7:u'%s' %(mktmoney.formatNumber(float(NonResAmountInRiel), 1, 2)),
                    8:u'',
                })

            Excel.update({
                "B%s"%(CellRow) : Decimal(ResNumberOfLoan),
                "C%s"%(CellRow) : Decimal(ResOutstanding),
                "D%s"%(CellRow) : Decimal(ResAmountInRiel),
                "E%s"%(CellRow) : Decimal(NonResNumberOfLoan),
                "F%s"%(CellRow) : Decimal(NonResOutstanding),
                "G%s"%(CellRow) : Decimal(NonResAmountInRiel),
                "H%s"%(CellRow) : ""
            })
            CellRow+=1
                
        RowRecord.append({
                        1:u"Other",
                        2:u'0',
                        3:u'0.00',
                        4:u'0.00',
                        5:u'0',
                        6:u'0.00',
                        7:u'0.00',
                        8:u'',
                    })
        Excel.update({
                "B%s"%(CellRow) : Decimal(0),
                "C%s"%(CellRow) : Decimal(0.0),
                "D%s"%(CellRow) : Decimal(0.0),
                "E%s"%(CellRow) : Decimal(0),
                "F%s"%(CellRow) : Decimal(0.0),
                "G%s"%(CellRow) : Decimal(0.0),
                "H%s"%(CellRow) : ""
            })
        

        RowRecord.append({
                            1:u"សរុប\nTOTAL",
                            2:u'%s' %(mktmoney.formatNumber(float(ResTNumOfRecord), 1, 0)),
                            3:u'-',
                            4:u'%s' %(mktmoney.formatNumber(float(ResTAmountInRiel), 1, 2)),
                            5:u'%s' %(mktmoney.formatNumber(float(NonResTNumOfRecord), 1, 0)),
                            6:u'-',
                            7:u'%s' %(mktmoney.formatNumber(float(NonResTAmountInRiel), 1, 2)),
                            8:u'',
                            'LineType':'GH',
                            'Indent':0,
                            'RowBGColor':mktnbc.BG_HEADER_COLOR,
                            'LineFormat':'bold'
                        })

        # if ReturnRate:
        #     return RateStr

        Result.update({'TableHeader':TableHeader,'ReportHeader':ReportHeader,'Data':RowRecord, 'Excel': Excel})
        CellSyle = {
                    'C9':'top*medium,FF000000',
                    'F9':'top*medium,FF000000',
                    'G9':'top*medium,FF000000',

                    'I10':'left*thin,FF000000:right*medium,FF000000',

                    }
        return Result, CellSyle
    except:
        raise
