# -*- coding: utf-8 -*-
'''
Report Name: Deposit by Currencies
'''

from app.mktcore.imports 		import *

import app.tools.mktsetting     as mktsetting
import app.tools.mktmoney       as mktmoney
import app.tools.mktnbc         as mktnbc
import app.tools.mktaddress 	as mktaddress

from decimal                    import *

from app.LoanContract.models    import *
from app.Currency.models        import MKT_CURRENCY
from app.LoanProduct.models     import MKT_LOAN_PRODUCT
from app.InterestRate.models    import MKT_INTEREST_RATE
from app.Account.models         import MKT_ACCOUNT
from app.AccProduct.models      import *


def getNGO08(Branch = "ALL", ReportedDate = ""):
	''' This function must return result like below:
		Result = {
			'Data': 		Data,
			'Excel': 		Excel,
			'ReportHeader': ReportHeader,
			'TableHeader': 	TableHeader
			}
	'''
	try:
		ReportHeader 	=   mktnbc.getHeaderReport(	ReportName 		=	u'ប្រាក់បញ្ញើតាមប្រភេទរូបិយប័ណ្ណ',
													Title 			=	'',
													Form 			=	'8-Deposit by Currencies')
		Result			=   {}
		TableHeader 	= 	{}

		TableHeader = mktnbc.setTableHeader(Text=u'រូបិយប័ណ្ណ', 
									 Rowspan=3,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ចំនួនគណនី', 
									 Rowspan=3,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")


		TableHeader = mktnbc.setTableHeader(Text=u'ចំនួនទឹកប្រាក់', 
									 Rowspan=0,Colspan=5,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ស្ម័គ្រចិត្ត', 
									 Rowspan=0,Colspan=4,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ចរន្ត', 
									 Rowspan=0,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")
		
		TableHeader = mktnbc.setTableHeader(Text=u'សំចៃ', 
									 Rowspan=0,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'មានកាលកំណត់', 
									 Rowspan=0,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")
		
		TableHeader = mktnbc.setTableHeader(Text=u'ផ្សេងៗ', 
									 Rowspan=0,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'កាតព្វកិច្ច', 
									 Rowspan=2,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'សរុប', 
									 Rowspan=3,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'អត្រាការប្រាក់\nបានបង់/គ្រាបង់', 
									 Rowspan=3,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'កំណត់សំគាល់', 
									 Rowspan=3,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")


		Data, Excel = getDepositBreakDownByCurrency(Branch, ReportHeader)


		Result.update({'TableHeader':TableHeader,'ReportHeader':ReportHeader,'Data':Data, 'Excel': Excel})
		return Result

	except Exception as e:
		raise

def getDepositBreakDownByCurrency(Branch, ReportHeader):
	try:
		RowRecord       =   []
		ExcelRecord 	=	{}
		ExcelRecord.update({
				"D3" : ReportHeader.get('ReportedDate',""),
				"B5" : ReportHeader.get('CompanyName',""),
				"H7" : Decimal(ReportHeader.get('ReportingRate',0))
			})

		if Branch != "ALL":
			Branch = Branch.split()

		Language        =   mktnbc.getDefaultLang()
		getAccSetting   =   mktsetting.getAccSetting()
		CurrencyObj 	=	MKT_CURRENCY.query.all()
		CurrencyList    =   ['KHR', 'USD', 'THB']
		if CurrencyObj:
			for item in CurrencyObj:
				if item.ID not in CurrencyList:
					CurrencyList.append(item.ID)

		VolunteerList 	=	['Demand', 'Saving', 'Term', 'Other']
		CompulsoryList 	=	['Program1', 'Program2', 'Program3']
		CurrencyDesc    =   {'KHR':u'១. ប្រាក់រៀល',
							 'USD':u'២. ប្រាក់ដុល្លារអាមេរិក',
							 'THB':u'៣. ប្រាក់បាតថៃ'
							}

		RecordObj       =   db.session.query(
											MKT_CURRENCY.ID,
											MKT_ACCOUNT.InterestRate,
											MKT_CURRENCY.Description,
											MKT_ACC_PRODUCT.ID.label('AccProductID'),
											func.count(MKT_CURRENCY.ID).label('NumOfRecord'),
											func.sum(MKT_ACCOUNT.Balance).label('Balance')
											).\
										outerjoin(
											MKT_ACCOUNT,
											MKT_ACCOUNT.Currency == MKT_CURRENCY.ID
											).\
										outerjoin(
											MKT_ACC_PRODUCT,
											MKT_ACC_PRODUCT.ID == MKT_ACCOUNT.AccProduct
											).\
										filter(MKT_ACC_PRODUCT.ProductType == 'E').\
										filter(MKT_ACCOUNT.InterestRate > str(0)).\
										filter(MKT_ACCOUNT.Balance != 0).\
										group_by(	MKT_CURRENCY.ID,
													MKT_ACC_PRODUCT.ID, 
													MKT_ACCOUNT.InterestRate, 
													MKT_CURRENCY.Description).\
										order_by(MKT_CURRENCY.ID.asc())
		AccObj 			=	MKT_ACCOUNT.query

		if Branch != "ALL":
		    RecordObj   =   RecordObj.\
							filter(MKT_ACCOUNT.Branch.in_(Branch))

		AccountDic 			=	{}
		Data                =   {}

		# get BreakDownOfDeposit AppSetting
		BreakDownDepositSetting = 	mktsetting.getAppSetting('NBCBreakDownOfDeposit').splitlines()
		for b in BreakDownDepositSetting:
			Key = b.split('*')
			AccountDic.update({Key[0]:Key[1].split()})
			# AccountDic 	=	{'Demand':['101'], 'Saving':['102','122'], 'Term':['103'], 'Other':[], 'Program1':['101'], 'Program2':[], 'Program3':[]}

		CurrencyDic = ReportHeader['DicExchangeRate'] 
		if not CurrencyDic:
			flash(msg_error+"NBC Exchange Rate isn't defined")
			return []

		if RecordObj:
			for item in RecordObj:
				Tmp      =  Data.get(item.ID,{})
				Interest =  Tmp.get('Interest',[])

				if item.InterestRate != '0' and not (item.InterestRate in Interest) :
					Interest.append(item.InterestRate)

				Tmp.update({ 'NumOfRecord': Tmp.get('NumOfRecord',0) + item.NumOfRecord, 
							 'Amount': Tmp.get('Amount', 0) + Decimal(item.Balance),
							 'Interest': Interest })

				for key, value in AccountDic.iteritems():
					if item.AccProductID in value:
						Tmp.update({key:Tmp.get(key,0) + Decimal(item.Balance)})
					elif 'Program' in key:
						Tmp.update({'Compulsary':Tmp.get('Compulsary',0) + Decimal(item.Balance)})

				if item.ID in CurrencyList:
					Data.update({item.ID: Tmp})
				else:
					Data.update({'OTH': Tmp})

		i = 1

		OtherNumOfRecord	=	0
		OtherAmount			=	0
		OtherDemandAmt 		=	0
		OtherSavingAmt 		=	0
		OtherTermAmt 		=	0
		OtherOtherAmt 		=	0
		OtherCompulsaryAmt 	=	0

		TotAmount			=	0
		TotNumOfRecord 		=	0
		TotDemandAmt 		= 	0
		TotSavingAmt 		=	0
		TotTermAmt			=	0
		TotOtherAmt 		= 	0
		TotCompulsaryAmt	= 	0

		CellRow 			=	11
		for item in CurrencyList:
			ExchangeRate 	=	CurrencyDic.get(item,0)

			Record 			=	Data.get(item,{})

			Rate 			=	mktnbc.getRate(Record.get('Interest',[])) 
			NumOfRecord 	=	Record.get('NumOfRecord',0)
			Amount 			=	Record.get('Amount',0) * Decimal(ExchangeRate) / mktnbc.OneMillion
			DemandAmt 		=	Record.get('Demand',0) * Decimal(ExchangeRate) / mktnbc.OneMillion
			SavingAmt 		=	Record.get('Saving',0) * Decimal(ExchangeRate) / mktnbc.OneMillion
			TermAmt 		=	Record.get('Term',0) * Decimal(ExchangeRate) / mktnbc.OneMillion
			OtherAmt 		=	Record.get('Other',0) * Decimal(ExchangeRate) / mktnbc.OneMillion
			CompulsaryAmt 	=	Record.get('Compulsary',0) * Decimal(ExchangeRate) / mktnbc.OneMillion

			# Append to row Currency 'KHR','USD','THB'
			RowRecord.append({
						1:CurrencyDesc.get(item),
						2:str(NumOfRecord),
						3:mktmoney.formatNumber(float(DemandAmt), 1, 2),
						4:mktmoney.formatNumber(float(SavingAmt), 1, 2),
						5:mktmoney.formatNumber(float(TermAmt), 1, 2),
						6:mktmoney.formatNumber(float(OtherAmt), 1, 2),
						7:mktmoney.formatNumber(float(CompulsaryAmt), 1, 2),
						8:mktmoney.formatNumber(float(Amount), 1, 2),
						9:u"%s" %Rate,
						10:'',
						'LineType':'GH',
						'Indent':0,
						'RowBGColor':'',
						'LineFormat':''
					})

			ExcelRecord.update({
						"B%s"%(CellRow) : NumOfRecord,
						"C%s"%(CellRow) : DemandAmt,
						"D%s"%(CellRow) : SavingAmt,
						"E%s"%(CellRow) : TermAmt,
						"F%s"%(CellRow) : OtherAmt,
						"G%s"%(CellRow) : CompulsaryAmt,
						"I%s"%(CellRow) : Rate,
						"J%s"%(CellRow) : "",
					})

			if item not in CurrencyList:
				ExchangeRate 		=	CurrencyDic.get(item,0)
				Record 				=	Data.get('OTH',{})
				Rate 				=	Interest.append(item.InterestRate)
				OtherNumOfRecord	+=	Record.get('NumOfRecord', 0)
				OtherAmount 		+=	Record.get('Amount', 0) * Decimal(ExchangeRate) / mktnbc.OneMillion
				OtherDemandAmt 		+=	Record.get('Demand',0) * Decimal(ExchangeRate) / mktnbc.OneMillion
				OtherSavingAmt 		+=	Record.get('Saving',0) * Decimal(ExchangeRate) / mktnbc.OneMillion
				OtherTermAmt 		+=	Record.get('Term',0) * Decimal(ExchangeRate) / mktnbc.OneMillion
				OtherOtherAmt 		+=	Record.get('Other',0) * Decimal(ExchangeRate) / mktnbc.OneMillion
				OtherCompulsaryAmt 	+=	Record.get('Compulsary',0) * Decimal(ExchangeRate) / mktnbc.OneMillion

			TotAmount  		+=	Amount
			TotNumOfRecord 	+=	NumOfRecord
			TotDemandAmt 	+= 	DemandAmt
			TotSavingAmt 	+=	SavingAmt
			TotTermAmt		+=	TermAmt
			TotOtherAmt 	+= 	OtherAmt
			TotCompulsaryAmt+= 	CompulsaryAmt
			i += 1
			CellRow += 1

		# Append to row Other Currency
		RowRecord.append({
						1:u'៤. រូបិយវត្ថុផ្សេងទៀត',
						2:str(OtherNumOfRecord),
						3:mktmoney.formatNumber(float(OtherDemandAmt), 1, 2),
						4:mktmoney.formatNumber(float(OtherSavingAmt), 1, 2),
						5:mktmoney.formatNumber(float(OtherTermAmt), 1, 2),
						6:mktmoney.formatNumber(float(OtherOtherAmt), 1, 2),
						7:mktmoney.formatNumber(float(OtherCompulsaryAmt), 1, 2),
						8:mktmoney.formatNumber(float(OtherAmount), 1, 2),
						9:u"%s" %Rate,
						10:'',
						'LineType':'GH',
						'Indent':0,
						'RowBGColor':'',
						'LineFormat':''
					})
		ExcelRecord.update({
						"B%s"%(CellRow) : OtherNumOfRecord,
						"C%s"%(CellRow) : OtherDemandAmt,
						"D%s"%(CellRow) : OtherSavingAmt,
						"E%s"%(CellRow) : OtherTermAmt,
						"F%s"%(CellRow) : OtherOtherAmt,
						"G%s"%(CellRow) : OtherCompulsaryAmt,
						"I%s"%(CellRow) : Rate,
						"J%s"%(CellRow) : "",
					})

		TotAmount 		+= 	OtherAmount
		TotNumOfRecord 	+= 	OtherNumOfRecord
		TotDemandAmt 	+= 	OtherDemandAmt
		TotSavingAmt 	+=	OtherSavingAmt
		TotTermAmt		+=	OtherTermAmt
		TotOtherAmt 	+= 	OtherOtherAmt
		TotCompulsaryAmt+= 	OtherCompulsaryAmt
		# Append to total row
		RowRecord.append({
						1:u'សរុប',
						2:str(TotNumOfRecord),
						3:mktmoney.formatNumber(float(TotDemandAmt), 1, 2),
						4:mktmoney.formatNumber(float(TotSavingAmt), 1, 2),
						5:mktmoney.formatNumber(float(TotTermAmt), 1, 2),
						6:mktmoney.formatNumber(float(TotOtherAmt), 1, 2),
						7:mktmoney.formatNumber(float(TotCompulsaryAmt), 1, 2),
						8:mktmoney.formatNumber(float(TotAmount), 1, 2),
						9:'',
						10:'',
						'LineType':'GH',
						'Indent':0,
						'RowBGColor':mktnbc.BG_BODY_COLOR,
						'LineFormat':'bold'
					})

		return RowRecord, ExcelRecord

	except:
		raise