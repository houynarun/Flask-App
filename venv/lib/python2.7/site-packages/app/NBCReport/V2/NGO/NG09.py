# -*- coding: utf-8 -*-
'''
Report Name: Network Information
'''

from app.mktcore.imports 		import *

import app.tools.mktsetting     as mktsetting
import app.tools.mktmoney       as mktmoney
import app.tools.mktnbc         as mktnbc
import app.tools.mktaddress 	as mktaddress

from decimal                    import *

from app.Province.models 		import *
from app.District.models 		import *
from app.Commune.models 		import *
from app.LoanContract.models 	import *
from app.AccProduct.models 		import *
from app.Employee.models 		import MKT_EMPLOYEE
from app.Customer.models 		import *


def getNGO09(Branch = "ALL", ReportedDate = ""):
	''' This function must return result like below:
		Result = {
			'Data': 		Data,
			'Excel': 		Excel,
			'ReportHeader': ReportHeader,
			'TableHeader': 	TableHeader
			}
	'''
	try:
		ReportHeader 	=   mktnbc.getHeaderReport(	ReportName 		=	u'របាយការណ៍ប្រចាំត្រីមាសស្តីពី ព័ត៌មានបណ្តាញប្រតិបត្តិការ',
													Title 			=	'',
													Form 			=	'9-Network Information')
		Result			=   {}
		TableHeader 	= 	{}

		TableHeader = mktnbc.setTableHeader(Text=u'ឈ្មោះខេត្ត-រាជធានី', 
									 Rowspan=3,Colspan=2,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u'ចំនួន', 
									 Rowspan=0,Colspan=5,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ស្នាក់ការ\nកណ្តាល', 
									 Rowspan=2,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ខេត្ត-ក្រុង', 
									 Rowspan=2,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ខណ្ឌ-ស្រុក', 
									 Rowspan=2,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ឃុំ', 
									 Rowspan=2,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ភូមិ', 
									 Rowspan=2,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u'សមតុល្យឥណទាន', 
									 Rowspan=0,Colspan=4,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ចំនួនទឹកប្រាក់', 
									 Rowspan=2,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ចំនួនអ្នកខ្ចី', 
									 Rowspan=0,Colspan=3,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ប្រុស', 
									 Rowspan=0,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ស្រី', 
									 Rowspan=0,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'សរុប', 
									 Rowspan=0,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u'សមតុល្យប្រាក់បញ្ញើ', 
									 Rowspan=0,Colspan=4,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ចំនួនទឹកប្រាក់', 
									 Rowspan=2,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ចំនួនអ្នកផ្ញើប្រាក់', 
									 Rowspan=0,Colspan=3,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ប្រុស', 
									 Rowspan=0,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ស្រី', 
									 Rowspan=0,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'សរុប', 
									 Rowspan=0,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u'ចំនួនបុគ្គលិក', 
									 Rowspan=0,Colspan=3,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ប្រុស', 
									 Rowspan=2,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'ស្រី', 
									 Rowspan=2,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u'សរុប', 
									 Rowspan=2,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		Data, Excel = getNBCReportByProvince(Branch, ReportHeader)


		Result.update({'TableHeader':TableHeader,'ReportHeader':ReportHeader,'Data':Data, 'Excel': Excel})
		return Result

	except Exception as e:
		raise

def getNBCReportByProvince(Branch, ReportHeader):
	try:
		CurrencyDic 		= ReportHeader['DicExchangeRate'] 
		Language 			=	mktnbc.getDefaultLang()
		RowRecord 			=	[] # Return value
		ExcelRecord			=	{} # Excel
		OutstandingAmount 	=	[] # Loan Outstanding = Amount + PD for each province
		TotOutstandingAmount=	[] # Total Loan Outstanding
		ProvinceDic 		=	[]
		DistrictDic 		=	[] # Number of district for each province
		CommuneDic 			=	[] # Number of commune for each province
		VillageDic 			=	[] # Number of village for each province
		TotalProvince 		=	[]
		TotalDistrict 		=	[] # Total for all district of each province
		TotalCommune 		=	[] # Total for all commune of each province
		TotalVillage 		=	[] # Total for all village of each province
		MaleDic 			=	[] # Number of customer(male) for each province
		FemaleDic			=	[] # Number of customer(female) for each province
		TotalMaleDic 		=	[] # Total for all male of each provicne
		TotalFemaleDic 		=	[] # Total for all female of each province
		DepositInRiels 		=	[] # Deposit balance of each customer for each province
		TotalDepositDic 	=	[] # Total for all customer's deposit for each provicne
		DepositMale 		=	[] # Number of customer(male)'s deposit
		DepositFemale 		=	[] # Number of customer(female)'s deposit
		TotalDepositMaleDic =	[] # Total of each customer(male)'s deposit for each provicne
		TotalDepositFemaleDic 	=	[] # Total of each customer(fmale)'s deposit for each provicne
		EmployeeMaleDic 	=	[] # Number of employee(male) for each province
		EmployeeFemaleDic 	=	[] # Number of employee(female) for each province
		TotalEmployeeMaleDic 	= 	[]
		TotalEmployeeFemaleDic	= 	[]

		ExcelRecord.update({
				"H2" : ReportHeader.get('ReportedDate',""),
				"C3" : ReportHeader.get('CompanyName',""),
				"O4" : Decimal(ReportHeader.get('ReportingRate',0))
			})

		ProvinceObj 		=	MKT_PROVINCE.query
		BranchObj 			=	MKT_BRANCH.query
		# Get all loan to Object
		LoanObj 			=	db.session.query(
									MKT_LOAN_CONTRACT.ContractCustomerID,
									MKT_LOAN_CONTRACT.ID,
									MKT_LOAN_CONTRACT.OutstandingAmount,
									MKT_LOAN_CONTRACT.Currency,
									MKT_CUSTOMER.Province,
									MKT_CUSTOMER.District,
									MKT_CUSTOMER.Commune,
									MKT_CUSTOMER.Village,
									MKT_CUSTOMER.Gender
								).\
								join(
									MKT_CUSTOMER,
									MKT_CUSTOMER.ID == MKT_LOAN_CONTRACT.ContractCustomerID
								).\
								filter(MKT_LOAN_CONTRACT.DisbursedStat == 'Y').\
								filter(MKT_LOAN_CONTRACT.OutstandingAmount > 0)

		if Branch != "ALL":
			Branch 			= 	Branch.split()
			LoanObj 		=	LoanObj.\
								filter(MKT_LOAN_CONTRACT.Branch.in_(Branch))

		# GET all external account to Object
		AccountObj 			=	db.session.query(
									MKT_ACCOUNT.ID,
									MKT_ACCOUNT.Balance,
									MKT_ACCOUNT.CustomerList,
									MKT_ACCOUNT.InterestRate,
									MKT_ACCOUNT.Currency,
									MKT_CUSTOMER.Province,
									MKT_CUSTOMER.District,
									MKT_CUSTOMER.Commune,
									MKT_CUSTOMER.Village,
									MKT_CUSTOMER.Gender
								).\
								join(
									MKT_CUSTOMER,
									MKT_CUSTOMER.ID == MKT_ACCOUNT.CustomerList
								).\
								join(
									MKT_ACC_PRODUCT,
									MKT_ACC_PRODUCT.ID == MKT_ACCOUNT.AccProduct
								).\
								filter(
									MKT_ACC_PRODUCT.ProductType == 'E'
								).\
								filter(
									MKT_ACCOUNT.InterestRate != "0"
								)
		if Branch != "ALL":
			AccountObj 		=	AccountObj.\
								filter(MKT_ACCOUNT.Branch.in_(Branch))

		# GET all number of employee to Object
		EmployeeObj 		=	MKT_EMPLOYEE.query

		if EmployeeObj:

			for item in EmployeeObj:

				EmployeeMaleDic.append({item.Province:item.Male})
				EmployeeFemaleDic.append({item.Province:item.Female})

		if AccountObj:

			for item in AccountObj:
				Currency 		= item.Currency
				ExchangeRate 	= CurrencyDic.get(Currency)

				DepositInRiels.append({item.Province:Decimal(item.Balance) * ExchangeRate})

				if item.Gender == 'Male':

					DepositMale.append({
						str(item.CustomerList) + "-" + str(item.Province):'1'
					})

				if item.Gender == 'Female':

					DepositFemale.append({
						str(item.CustomerList) + "-" + str(item.Province):'1'
					})

		if LoanObj:

			for item in LoanObj:
				Currency 		= item.Currency
				ExchangeRate 	= CurrencyDic.get(Currency)

				ID = item.ID

				ProvinceDic.append({
						item.Province:item.Province
					})

				DistrictDic.append({
						item.Province:item.District
					})

				CommuneDic.append({
						item.Province:item.Commune
					})

				VillageDic.append({
						item.Province:item.Village
					})

				OutstandingAmount.append({item.Province: Decimal(item.OutstandingAmount)* ExchangeRate})

				if item.Gender == 'Male':

					MaleDic.append({
						str(item.ContractCustomerID) + "-" + str(item.Province):'1'
					})

				if item.Gender == 'Female':

					FemaleDic.append({
						str(item.ContractCustomerID) + "-" + str(item.Province):'1'
					})

		i 			= 1
		CellRow 	= 8
		TotalBranch = 0

		if ProvinceObj:

			for item in ProvinceObj:
				ProvinceDesc=	item.LocalDescription
				Branch 		=	BranchObj.filter(MKT_BRANCH.Province == item.ID).all()
				NumBranch 	=	len(Branch) if Branch else 0

				Province 	=	getCountByList(ProvinceDic, str(item.ID))
				District 	=	getCountByList(DistrictDic, str(item.ID))
				Commune 	=	getCountByList(CommuneDic, str(item.ID))
				Village 	=	getCountByList(VillageDic, str(item.ID))
				TotalProvince.append(Province)
				TotalDistrict.append(District)
				TotalCommune.append(Commune)
				TotalVillage.append(Village)

				Amount 		=	getAmountByProvince(OutstandingAmount, str(item.ID))
				Amount 		=	mktnbc.getTotalByList(Amount) / mktnbc.OneMillion
				TotOutstandingAmount.append(Amount)

				Male 		=	getCountGenderByList(MaleDic, str(item.ID))
				Female 		=	getCountGenderByList(FemaleDic, str(item.ID))
				MaleFemale 	=	int(Male) + int(Female)
				TotalMaleDic.append(Male)
				TotalFemaleDic.append(Female)

				DepositAmt 	=	getTotalByProvicneFromList(DepositInRiels, str(item.ID))
				DepositAmt 	=	DepositAmt / mktnbc.OneMillion
				TotalDepositDic.append(DepositAmt)

				DepMale 	=	getCountGenderByList(DepositMale, str(item.ID))
				DepFemale 	=	getCountGenderByList(DepositFemale, str(item.ID))
				TotalDepMaleFemale 	= 	int(DepMale) + int(DepFemale)
				TotalDepositMaleDic.append(DepMale)
				TotalDepositFemaleDic.append(DepFemale)

				EmployeeMale 	=	getEmployeeByList(EmployeeMaleDic, str(item.ID))
				EmployeeFemale 	=	getEmployeeByList(EmployeeFemaleDic, str(item.ID))
				TotalEmMaleFemale 	=	int(EmployeeMale) + int(EmployeeFemale)
				TotalEmployeeMaleDic.append(EmployeeMale)
				TotalEmployeeFemaleDic.append(EmployeeFemale)

				RowRecord.append({
								1:str(i),
								2:ProvinceDesc,
								3:str(NumBranch),
								4:str(Province),
								5:str(District),
								6:str(Commune),
								7:str(Village),
								8:mktmoney.formatNumber(Amount),
								9:str(Male),
								10:str(Female),
								11:str(MaleFemale),
								12:mktmoney.formatNumber(DepositAmt),
								13:str(DepMale),
								14:str(DepFemale),
								15:str(TotalDepMaleFemale),
								16:str(EmployeeMale),
								17:str(EmployeeFemale),
								18:str(TotalEmMaleFemale),
								'LineType':'GH',
								'Indent':0,
								'RowBGColor':'',
								'LineFormat':''
							})

				ExcelRecord.update({
							"C%s"%(CellRow) : NumBranch,
							"D%s"%(CellRow) : Province,
							"E%s"%(CellRow) : District,
							"F%s"%(CellRow) : Commune,
							"G%s"%(CellRow) : Village,
							"H%s"%(CellRow) : Amount,
							"I%s"%(CellRow) : Male,
							"J%s"%(CellRow) : Female,
							"L%s"%(CellRow) : DepositAmt,
							"M%s"%(CellRow) : DepMale,
							"N%s"%(CellRow) : DepFemale,
							"P%s"%(CellRow) : EmployeeMale,
							"Q%s"%(CellRow) : EmployeeFemale,
						})

				i 			+= 1
				CellRow 	+= 1
				TotalBranch += 	NumBranch

			# Calculate Total Amount
			TotalProvince 			=	mktnbc.getTotalByList(TotalProvince)
			TotalDistrict 			=	mktnbc.getTotalByList(TotalDistrict)
			TotalCommune 			=	mktnbc.getTotalByList(TotalCommune)
			TotalVillage 			=	mktnbc.getTotalByList(TotalVillage)

			TotOutstandingAmount 	=	mktnbc.getTotalByList(TotOutstandingAmount)
			TotalMale 				=	mktnbc.getTotalByList(TotalMaleDic)
			TotalFemale 			=	mktnbc.getTotalByList(TotalFemaleDic)
			TotalMaleFemale 		=	int(TotalMale) + int(TotalFemale)

			TotalDeposit 			=	mktnbc.getTotalByList(TotalDepositDic)
			TotalDepositMale 		=	mktnbc.getTotalByList(TotalDepositMaleDic)
			TotalDepositFemale 		=	mktnbc.getTotalByList(TotalDepositFemaleDic)
			TotalDepMaleFemale 		=	int(TotalDepositMale) + int(TotalDepositFemale)

			TotalEmployeeMale 		=	mktnbc.getTotalByList(TotalEmployeeMaleDic)
			TotalEmployeeFemale 	=	mktnbc.getTotalByList(TotalEmployeeFemaleDic)
			TotalEmpMaleFemale 		=	int(TotalEmployeeMale) + int(TotalEmployeeFemale)

			RowRecord.append({
								1:'',
								2:u'សរុប',
								3:str(TotalBranch),
								4:str(TotalProvince),
								5:str(TotalDistrict),
								6:str(TotalCommune),
								7:str(TotalVillage),
								8:mktmoney.formatNumber(TotOutstandingAmount),
								9:str(TotalMale),
								10:str(TotalFemale),
								11:str(TotalMaleFemale),
								12:mktmoney.formatNumber(TotalDeposit),
								13:str(TotalDepositMale),
								14:str(TotalDepositFemale),
								15:str(TotalDepMaleFemale),
								16:str(TotalEmployeeMale),
								17:str(TotalEmployeeFemale),
								18:str(TotalEmpMaleFemale),
								'LineType':'GH',
								'Indent':0,
								'RowBGColor':mktnbc.BG_BODY_COLOR,
								'LineFormat':'bold'
							})

		return RowRecord, ExcelRecord

	except:
		raise

def getCountGenderByList(L, ID):
	try:

		NumOfRecord =	0
		Dic 		=	{}

		if len(L) > 0:

			for item in L:

				for key, value in item.iteritems():
					Customer = key.split('-')
					NewID = Customer[0] + "-" + ID
					if key in NewID and value:
						Dic.update({NewID:key})
			# print Dic
			NumOfRecord = 	len(Dic)

		return NumOfRecord

	except:
		raise

def getTotalByProvicneFromList(L, ID):
	try:

		Amount 		=	0
		Dic 		=	{}

		if len(L) > 0:

			for item in L:

				for key, value in item.iteritems():

					if key in ID and value:

						Amount += Decimal(item[key])

		return Amount

	except:
		raise

def getCountByList(L, ID):
	try:

		NumOfRecord =	0
		Dic 		=	{}

		if len(L) > 0:

			for item in L:

				for key, value in item.iteritems():

					if key in ID and value:
						Dic.update({item[key]:key})

			NumOfRecord = 	len(Dic)

		return NumOfRecord

	except:
		raise

def getEmployeeByList(L, ID):
	try:

		NumberOfEm 	=	0
		Dic 		=	{}

		if len(L) > 0:

			for item in L:

				for key, value in item.iteritems():

					if key in ID and value:

						NumberOfEm += int(item[key])

		return NumberOfEm

	except:
		raise

def getAmountByProvince(L, ID):
	try:

		DicAmount 	= 	[]
		Province 	=	[]

		if len(L) > 0:

			for item in L:

				for row in item:

					if str(row) in str(ID):

						DicAmount.append(Decimal(item[str(row)]))

		return DicAmount

	except:
		raise












