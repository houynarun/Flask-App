# -*- coding: utf-8 -*-
from app.mktcore.imports 		import *
from app.tools.mktdate 			import *
import os
from .NG01 import *
from .NG02 import *
from .NG03 import *
from .NG04 import *
from .NG05 import *
from .NG06 import *
from .NG07 import *
from .NG08 import *
from .NG09 import *
from .NG10 import *

try:
	from openpyxl import load_workbook
except Exception, e:
	pass

FILENAME = os.path.dirname(__file__)+'/EXCEL_NGO.xlsx'


def setReportList(**kwargs):
	Branch 			= kwargs.get("Branch", "ALL")
	ReportedDate 	= kwargs.get("ReportedDate","")
	Month 			= kwargs.get("Month","")
	Year			= kwargs.get("Year","")

	ReportList  = 	{ 	
						'01':{	'Khmer'		:u'របាយការណ៏ប្រចាំខែសី្តពី ទ្រព្យសកម្ម និងទ្រព្យអកម្ម',
								'English'	:'MONTHLY REPORT ON BALANCE SHEET',
								'Title'		:'NBC-BALANCE SHEET',
								'Result'	:'getNGO01(Branch, ReportedDate, 2, Month="", Year="")'
								},

						'02':{ 	'Khmer'		:u'របាយការណ៏ប្រចាំខែសី្តពី ចំណូល និងចំណាយ',
								'English'	:'MONTHLY REPORT ON INCOME STATEMENT',
								'Title'		:'NBC-INCOME STATEMENT',
								'Result'	:'getNGO02(Branch, ReportedDate, 1, Month="", Year="")'
								},

						'03':{	'Khmer'		:u'របាយការណ៏ប្រចាំខែសី្តពី ការធ្វើចំណាត់ថ្នាក់ឥណទាន',
								'English'	:'MONTHLY REPORT ON LOAN CLASSFICATION',
								'Title'		:'NBC-LOAN CLASSFICATION',
								'Result'	:'getNGO03(Branch, ReportedDate)'
								},

						'04':{ 	'Khmer'		:u'របាយការណ៏ប្រចាំខែសី្តពី ឥណទានតាមប្រភេទជំនួញ',
								'English'	:'MONTHLY REPORT ON CREDIT BY TYPES',
								'Title'		:'NBC-CREDIT BY TYPES',
								'Result'	:'getNGO04(Branch, ReportedDate)'
								},

						'05':{ 	'Khmer'		:u'របាយការណ៏ប្រចាំខែសី្តពី ឥណទានតាមប្រភេទរូបិយប័ណ្ណ',
								'English'	:'MONTHLY REPORT ON CREDIT BY CURRENCIES',
								'Title'		:'NBC-CREDIT BY CURRENCIES',
								'Result'	:'getNGO05(Branch, ReportedDate)'
								},

						'06':{ 	'Khmer'		:u'របាយការណ៏ប្រចាំខែសី្តពី ឥណទានតាមឥណទានធំបំផុត',
								'English'	:'MONTHLY REPORT ON LARGE EXPOSURE',
								'Title'		:'NBC-LARGE EXPOSURE',
								'Result'	:'getNGO06(Branch, ReportedDate)'
								},

						'07':{ 	'Khmer'		:u'របាយការណ៏ប្រចាំខែសី្តពី បញ្ញើតាមប្រភេទជំនួញ',
								'English'	:'MONTHLY REPORT ON DEPOSIT BY TYPES',
								'Title'		:'NBC-DEPOSIT BY TYPES',
								'Result'	:'getNGO07(Branch, ReportedDate)'
								},

						'08':{ 	'Khmer'		:u'របាយការណ៏ប្រចាំខែសី្តពី បញ្ញើតាមប្រភេទរូបិយប័ណ្ណ',
								'English'	:'MONTHLY REPORT ON DEPOSIT BY CURRENCIES',
								'Title'		:'NBC-CREDIT DEPOSIT BY CURRENCIES',
								'Result'	:'getNGO08(Branch, ReportedDate)'
								},

						'09':{ 	'Khmer'		:u'របាយការណ៏ប្រចាំខែសី្តពី ព័ត៌មានបណ្តាញប្រតិបត្តិការ',
								'English'	:'MONTHLY REPORT ON NETWORK INFORMATION',
								'Title'		:'NBC-NETWORK INFORMATION',
								'Result'	:'getNGO09(Branch, ReportedDate)'
								},

						'10':{ 	'Khmer'		:u'របាយការណ៏ប្រចាំខែសី្តពី ការតាមដានមធ្យមភាគអត្រាការប្រាក់ក្រោយថ្លឹងចំពោះប្រាក់បញ្ញើនិងឥណទានថ្មីៗ',
								'English'	:'MONTHLY REPORT ON WEIGTH INTEREST RATE',
								'Title'		:'NBC-WEIGTH INTEREST RATE',
								'Result'	:'getNGO10(Branch, ReportedDate)'
								},
						}

	return ReportList

@app.route('/Morakot/Report/NBC/NGO', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getNBCNGOReport():
	try:

		ErrorMsg 	= []
		getCheck 	= checkAccess("/Morakot/Report/NBC/NGO","Search")
		if getCheck != True: 
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)


		Branch 			=	request.args.get("Branch") if "Branch" in request.args else session.get("ChangeBranch")

		ReportList 	=	setReportList(	Branch 			= Branch)
		html        =   "nbc/v2/nbc.html"
		Title 		=	"Credit Operator"
		Type 		=	"NGO"

		return render_template(	html,
								ReportList 	= ReportList,
								Title 		= Title,
								Type 		= Type,
								sorted 		= sorted,
								Branch 		= Branch)

	except:
		raise

@app.route('/Morakot/Report/NBC/NGO/<ID>', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getNBCNGOReportDetail(ID):
	try:
		ErrorMsg    = []
		getCheck    = checkAccess("/Morakot/Report/NBC/NGO","Search")
		if getCheck != True: 
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)

		''' Setup parameters '''
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else session.get("ChangeBranch")
		ReportedDate 	= mktnbc.getHeaderReport().get("ReportedDate","")
		Month 			= mktnbc.getHeaderReport().get("Month","")
		Year			= mktnbc.getHeaderReport().get("Year","")
		ReportList 	=	setReportList(	Branch 			= Branch, 
										ReportedDate 	= ReportedDate,
										Month 			= Month,
										Year 			= Year)

		Result 		=	eval(ReportList.get(ID,{}).get('Result',{}))
		Type 		= 	"NGO"
		html 		= 	"nbc/v2/nbc_master.html"

		return render_template(html,
								ID 				=	ID,
								str 			=	str,
								mktmoney 		=	mktmoney,
								float 			=	float,
								Branch 			=	Branch,
								Result 			=	Result,
								Type 			= 	Type
								)
		return Result
	except:
		raise

@app.route('/Morakot/Report/NBC/NGO/Excel', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getNBCNGOExcel():
	try:
		workbook = load_workbook(FILENAME, keep_links=False)

		''' Setup parameters '''
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else session.get("ChangeBranch")
		ReportedDate 	= 	mktnbc.getHeaderReport().get("ReportedDate","")
		Month 			= 	mktnbc.getHeaderReport().get("Month","")
		Year			= 	mktnbc.getHeaderReport().get("Year","")
		
		ReportList 		= 	setReportList(	Branch 			= Branch, 
											ReportedDate 	= ReportedDate,
											Month 			= Month,
											Year 			= Year)

		for key,value in ReportList.iteritems():
			Result 		= eval(value.get('Result',{}))
			Excel 		= Result.get('Excel',{})
			SheetName 	= Result.get("ReportHeader",{}).get('Form',"")

			bs_sheet = mktnbc.getSheet(workbook, SheetName)

			mktnbc.setWriteWorkSheet(bs_sheet, Excel)

		response = mktnbc.getExcelFile(workbook, 'NBC_REPORTS_NGO')

		return response
	except Exception as e:
		raise


@app.route('/Morakot/Report/NBC/NGO/Excel/<ID>', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getNBCNGOSheet(ID):
	try:
		ID = str(ID)
		workbook = load_workbook(FILENAME, keep_links=False)

		''' Setup parameters '''
		Branch 			= request.args.get("Branch") if "Branch" in request.args else session.get("ChangeBranch")
		ReportedDate 	= mktnbc.getHeaderReport().get("ReportedDate","")
		Month 			= mktnbc.getHeaderReport().get("Month","")
		Year			= mktnbc.getHeaderReport().get("Year","")

		ReportList 		= 	setReportList(	Branch 			= Branch, 
											ReportedDate 	= ReportedDate,
											Month 			= Month,
											Year 			= Year)

		Result 		=	eval(ReportList.get(ID,{}).get('Result',{}))
		Excel 		= 	Result.get('Excel',{})
		SheetName 	= 	Result.get("ReportHeader",{}).get('Form',"")

		bs_sheet = mktnbc.getSheet(workbook, SheetName)
		mktnbc.setWriteWorkSheet(bs_sheet, Excel)

		response = mktnbc.getExcelFile(workbook, 'NBC_REPORTS_NGO_%s'%ID)

		return response
	except Exception as e:
		raise

