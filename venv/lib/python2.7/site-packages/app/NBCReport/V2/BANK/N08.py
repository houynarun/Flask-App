# -*- coding: utf-8 -*-
'''
Report Name: Net Open Position
'''

from app.mktcore.imports 		import *
from app.GLBalance.models 		import MKT_GL_BALANCE, MKT_GL_BALANCE_BACKUP
from app.Currency.models		import MKT_CURRENCY

import app.tools.mktdate 		as mktdate
import app.tools.mktsetting 	as mktsetting
import app.tools.mktmoney 		as mktmoney
import app.tools.mktnbc			as mktnbc
import app.tools.mktgl 			as mktgl
import app.tools.mktmessage 	as mktmessage
import app.NBCReport.V1.N016 					as N016
from decimal 					import Decimal
from .BankSetting 				import *
from app.Province.models 		import *
from app.District.models 		import *
from app.Commune.models 		import *
from app.Village.models 		import *
from .N06 						import *
from app.LoanPurpose.models 	import *

def getBANK08(Branch = "ALL", ReportedDate = "", Period = 2, Month = "", Year = ""):
	''' 
		This function must return result like below:
		Result = {
			'Data': 		Data,
			'Excel': 		Excel,
			'ReportHeader': ReportHeader,
			'TableHeader': 	TableHeader
			}
	'''

	try:
		ID 					= 	"N001" # ID of Report 01 Balance Sheet
		LiabilityEquityLine =	'75'
		TotalAssetLine 		=	'32'
		TotalEquityLine 	=	'61' 
		CurrencyObj			=	MKT_CURRENCY.query

		Condition = []
		if Year and Month:
			GLTable   	= MKT_GL_BALANCE_BACKUP
			Condition 	= [GLTable.GLYear == Year,GLTable.GLMonth == Month]
			CYear 	  	= Year
			CMonth 	  	= Month
		else:
			GLTable   	= MKT_GL_BALANCE
			BankDate  	= mktdate.getBankDate()
			CYear 	  	= BankDate.year
			CMonth 	  	= BankDate.month

		GLObj   		=   GLTable.query.filter(*Condition)

		Result 			= {}
		Data 			= []
		Excel 			= {}


		LineObj 		=	mktnbc.getNBCLineReport(ID, int(Period), Branch, ReportedDate, Year=Year, Month=Month)[0].get("Data",[])
		NetWorthN06 	= str(getBANK06("ALL", ReportedDate, Period, Year, Month, True)).replace(',','')
		TotalNetWorth 	=	NetWorthN06 # It should take from Sovency Ratio Report

		TotalNetWorth 	= float(mktmoney.formatNumber(TotalNetWorth,1,2).replace(',',''))



		ReportHeader 	= {}
		ReportHeader 	= mktnbc.getHeaderReport(	ReportName 		=	u'MONTHLY REPORT ON LARGE EXPOSURES OF BANK',
													Title 			=	u'របាយការណ៍ប្រចាំខែស្តីពី ហានិភ៍យធំៗរបស់ធនាគារ',
													Form 			=	'Large Exp.',
													NetWorth 		= 	u'%s' %mktmoney.formatNumber(float(TotalNetWorth), 1, 2)
													)
		Excel.update({
				"D3" : ReportHeader.get('ReportedDate',""),
				"C4" : ReportHeader.get('CompanyName',""),
				"C5" : Decimal(TotalNetWorth),
				"H6" : Decimal(ReportHeader.get('ReportingRate',0))
			})


		TableHeader 	= {}
		TableHeader = mktnbc.setTableHeader(Text=u'ល.រ \n No.', 
									 Rowspan=2,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")		
		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u"ឈ្មោះអ្នកខ្ចីប្រាក់ \n Name of Borroer", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"កាលបរិច្ឆេទយល់ព្រមពីធនាគារជាតិ \nDate of NBC's Approval", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"កាលអវសាន្ត \nMaturity Date", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"ប្រភេទ*ឥណទាន \nType of Loan", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"កំរិតឥណទានអនុម័ត \nApproved Limit", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"ឥណទានជាក់ស្តែង \nOutstanding Balance", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"ខ្ទង់ក្រៅតារាងតុល្យការ \nOff-Balance Sheet Commitments", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនឥណទានធំសរុប \nTotal Exposure", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"ការថ្លឹងហានិភ័យតាមប្រកាស \nWeighting Following Prakas", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"សរុបហានិភ័យធំៗក្រោយថ្លឹង​​​​​​​​ \nTotal Weighted Exposure", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"សរុបហានិភ័យធំៗក្រោយថ្លឹង ធៀបនឹងមូលនិធិផ្ទាល់សុទ្ធ \nTotal Weighted Exposure / Net Worth (%)", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"កំរិតហានិភ័យអតិបរមា \nMaximum (%)", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"អតិរេក Excess (%)", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"គោលបំណងឥណទាន \nLoan Purpose", 
									 Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(1)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(2)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(3)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(4)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(5)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(6) ", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(7)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(8) = (6)+(7)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(9)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(10) = (8)*(9)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(11) = (10)/NW", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(12)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(13) = (11)-(12)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"(14)", 
									 Rowspan=0,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")
		#----------------------------------------------------------------------------------------------------------------#
		
		Data, Excel =	getLoan( ReportHeader, TableHeader,TotalNetWorth)
		Result.update({'TableHeader':TableHeader,'ReportHeader':ReportHeader,'Data':Data, 'Excel': Excel})

		CellSyle = {
					# 'B8':'left*thin,FF000000',
					# 'B9':'left*thin,FF000000:right*thin,FF000000',
					# 'B10':'bottom*thin,FF000000:left*thin,FF000000',
					# 'D10':'left*thin,FF000000:top*thin,FF000000',
					# 'D9':'left*thin,FF000000',

					# 'H8':'left*thin,FF000000:right*thin,FF000000',
					# 'H9':'left*thin,FF000000:right*thin,FF000000',
					# 'H10':'right*thin,FF000000',

					# 'J8':'left*thin,FF000000:right*medium,FF000000',
					# 'J9':'left*thin,FF000000:right*medium,FF000000',
					# 'J10':'left*thin,FF000000:right*medium,FF000000',

					# 'B21':'top*thin,FF000000:bottom*medium,FF000000',
					# 'G21':'right*thin,FF000000:bottom*medium,FF000000:top*thin,FF000000',

					}

		return Result,CellSyle

	except Exception, e:
		raise

def getLoan(ReportHeader, TableHeader,TotalNetWorth):
	RecordRow 	= []
	ExcelRecord 	= {}
	ReportedDate = ReportHeader.get('ReportedDate',"")
	ExcelRecord.update({
				"B4" : u'As of:  %s'% mktdate.formatDate(ReportedDate,'%d %B %Y'),
				"C6" : ((ReportHeader.get('CompanyName',"")).splitlines())[0],
				"C7" : ((ReportHeader.get('CompanyName',"")).splitlines())[1],
				"D9" : Decimal(TotalNetWorth),
				"L9" : Decimal(ReportHeader.get('ReportingRate',0)),
				"L10" : Decimal(ReportHeader.get('ReportingRate',0)),
			})
	try:
		CellRow = 14
		i = 1
		LoanInfo = getLoanInfo(TotalNetWorth)
		TypeOfLoan 				= 'Term Loan'
		TotalApprovedAmount 	= 0
		TotalOutstandingAmount 	= 0
		TotalWeightPrakas 		= 0
		TotalWeighOut 			= 0
		TotalSubStandard 		= 0
		TotalDoubtful 			= 0
		TotalLoanLose 			= 0
		if LoanInfo:
			for L in LoanInfo:

				FullName 			= '%s %s - %s %s' %(L.LastNameEn, L.FirstNameEn, L.LastNameKh, L.FirstNameKh)
				ApprovedAmount 		= float(str(mktmoney.formatNumber(L.ApprovedAmount,0)).replace(',',''))
				OutstandingAmount 	= float(str(mktmoney.formatNumber(L.OutstandingAmount,0)).replace(',',''))
				BSCommitment 		= float(str(mktmoney.formatNumber(0,0)).replace(',',''))
				WeightPrakas 		= (OutstandingAmount/TotalNetWorth)*100
				WeightPrakas 		= float(str(mktmoney.formatNumber(WeightPrakas,0)).replace(',',''))
				Exposure 			= OutstandingAmount + BSCommitment
				Exposure 			= float(str(mktmoney.formatNumber(Exposure,0)).replace(',',''))
				WeightedExposure 	= Exposure * WeightPrakas
				WeightedExposure 	= float(str(mktmoney.formatNumber(WeightedExposure,0)).replace(',',''))
				WeightedExToNet 	= (WeightedExposure/TotalNetWorth)
				WeightedExToNet 	= float(str(mktmoney.formatNumber(WeightedExToNet,0)).replace(',',''))
				Maximum 			= 20
				Excess 				= (WeightedExposure - Maximum)/100
				Excess 				= float(str(mktmoney.formatNumber(Excess,0)).replace(',',''))

				TotalApprovedAmount 	+= ApprovedAmount
				TotalOutstandingAmount 	+= OutstandingAmount
				TotalWeightPrakas 		+= WeightPrakas

				RecordRow.append({
							1:u'%s' %i,
							2:u'%s' %(FullName),
							3:u'%s' %(formatDateNBC(L.ValueDate)),
							4:u'%s' %(formatDateNBC(L.MaturityDate)),
							5:u'%s' %(TypeOfLoan),
							6:u'%s' %(ApprovedAmount),
							7:u'%s' %(OutstandingAmount),
							8:u'%s' %(BSCommitment),
							9:u'%s' %(Exposure),
							10:u'%s%s' %(WeightPrakas,'%'),
							11:u'%s' %(WeightedExposure),
							12:u'%s%s' %(WeightedExToNet,'%'),
							13:u'%s%s' %(Maximum,'%'),
							14:u'%s%s' %(Excess,'%'),
							15:u'%s' %(L.LoanPurpose),
							'LineType':'GH',
							'Indent':1,
							'RowBGColor':'',
							'LineFormat':'bold'
						})
				ExcelRecord.update({
					"B%s"%(CellRow) : str(i),
					"C%s"%(CellRow) :u'%s' %(FullName),
					"D%s"%(CellRow) :'%s' %(formatDateNBC(L.ValueDate)),
					"E%s"%(CellRow) :'%s' %(formatDateNBC(L.MaturityDate)),
					"F%s"%(CellRow) :'%s' %(TypeOfLoan),
					"G%s"%(CellRow) : ApprovedAmount,
					"H%s"%(CellRow) : OutstandingAmount,
					"I%s"%(CellRow) : 0,
					"K%s"%(CellRow) : WeightPrakas/100,
					"P%s"%(CellRow) : u'%s' %(L.LoanPurpose),
				})
				i += 1
				CellRow += 1

		RecordRow.append({
							1:u'',
							2:u'',
							3:u'',
							4:u'',
							5:u'',
							6:u'%s' %(TotalApprovedAmount),
							7:u'%s' %(TotalOutstandingAmount),
							8:u'',
							9:u'%s%s' %(TotalWeightPrakas,'%'),
							10:u'%s' %(TotalWeighOut),
							11:u'%s' %(TotalSubStandard),
							12:u'%s' %(TotalDoubtful),
							13:u'%s' %(TotalLoanLose),
							14:u'',
							'LineType':'GH',
							'Indent':1,
							'RowBGColor':'',
							'LineFormat':'bold'
						})


		return RecordRow,ExcelRecord
	except Exception, e:
		raise
	else:
		pass
	finally:
		pass
def getLoanInfo(TotalNetWorth=1):
	''
	NBCPercentageOfNetworthBankN08 = mktsetting.getAppSetting('NBCPercentageOfNetworthBankN08')
	NBCPercentageOfNetworthBankN08 = NBCPercentageOfNetworthBankN08.split()
	StartNBCPercentage = 0
	EndNBCPercentage = 0
	NetWorthAmount10Percentage = 1
	NetWorthAmount20Percentage = 1
	if len(NBCPercentageOfNetworthBankN08)==2:
		StartNBCPercentage = Decimal(NBCPercentageOfNetworthBankN08[0])
		EndNBCPercentage = Decimal(NBCPercentageOfNetworthBankN08[1])
		NetWorthAmount10Percentage = (Decimal(TotalNetWorth) * StartNBCPercentage/100) if TotalNetWorth else 1
		NetWorthAmount20Percentage = (Decimal(TotalNetWorth) * EndNBCPercentage/100) if TotalNetWorth else 1
	else:
		StartNBCPercentage = Decimal(NBCPercentageOfNetworthBankN08[0])
		NetWorthAmount10Percentage = (Decimal(TotalNetWorth) * StartNBCPercentage/100) if TotalNetWorth else 1
	ReadAs = 1000000

	LoanObj = db.session.query(	MKT_LOAN_CONTRACT.ID,
								MKT_CUSTOMER.FirstNameEn,
								MKT_CUSTOMER.LastNameEn,
								MKT_CUSTOMER.FirstNameKh,
								MKT_CUSTOMER.LastNameKh,
								MKT_PROVINCE.Description.label('Province'),
								MKT_DISTRICT.Description.label('District'),
								MKT_COMMUNE.Description.label('Commune'),
								MKT_VILLAGE.Description.label('Village'),
								MKT_LOAN_PURPOSE.Description.label('LoanPurpose'),
								MKT_LOAN_CONTRACT.Disbursed,
								MKT_LOAN_CONTRACT.ValueDate,
								MKT_LOAN_CONTRACT.MaturityDate,
								MKT_LOAN_CONTRACT.InterestRate,
								(MKT_LOAN_CONTRACT.OutstandingAmount * cast(MKT_CURRENCY.OtherRate1, Float) / ReadAs).label('OutstandingAmount'),
								(MKT_LOAN_CONTRACT.ApprovedAmount * cast(MKT_CURRENCY.OtherRate1, Float) / ReadAs).label('ApprovedAmount'),
						).\
						join(MKT_CURRENCY, MKT_CURRENCY.ID==MKT_LOAN_CONTRACT.Currency).\
						outerjoin(MKT_CUSTOMER,MKT_CUSTOMER.ID == MKT_LOAN_CONTRACT.ContractCustomerID).\
						outerjoin(MKT_PROVINCE, MKT_PROVINCE.ID == MKT_CUSTOMER.Province).\
						outerjoin(MKT_DISTRICT, MKT_DISTRICT.ID == MKT_CUSTOMER.District).\
						outerjoin(MKT_COMMUNE, MKT_COMMUNE.ID == MKT_CUSTOMER.Commune).\
						outerjoin(MKT_VILLAGE, MKT_VILLAGE.ID == MKT_CUSTOMER.Village).\
						outerjoin(MKT_LOAN_PURPOSE,MKT_LOAN_PURPOSE.ID == MKT_LOAN_CONTRACT.LoanPurpose)

	if len(NBCPercentageOfNetworthBankN08)==2:
		LoanObj = LoanObj.filter(and_((MKT_LOAN_CONTRACT.OutstandingAmount * cast(MKT_CURRENCY.OtherRate1, Float) / ReadAs) >= NetWorthAmount10Percentage),
										(MKT_LOAN_CONTRACT.OutstandingAmount * cast(MKT_CURRENCY.OtherRate1, Float) / ReadAs) <= NetWorthAmount20Percentage)
	else:
		LoanObj = LoanObj.filter((MKT_LOAN_CONTRACT.OutstandingAmount * cast(MKT_CURRENCY.OtherRate1, Float) / ReadAs) >= NetWorthAmount10Percentage)
	LoanObj = LoanObj.all()
	return LoanObj
