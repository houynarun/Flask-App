# -*- coding: utf-8 -*-
'''
Report Name: Network Information
'''

from app.mktcore.imports 		import *

import app.tools.mktsetting     as mktsetting
import app.tools.mktmoney       as mktmoney
import app.tools.mktnbc         as mktnbc
import app.tools.mktaddress 	as mktaddress
import app.tools.mktdate 		as mktdate

from decimal                    import *

from app.Province.models 		import *
from app.District.models 		import *
from app.Commune.models 		import *
from app.LoanContract.models 	import *
from app.AccProduct.models 		import *
from app.Employee.models 		import MKT_EMPLOYEE
from app.Customer.models 		import *
from app.Currency.models 		import *
from .BankSetting 				import *
import app.NBCReport.V2.BANK.BankSetting  as NBCBankSetting

try:
	from app.OverdraftContract.models import *
except ImportError as e:
    print e

def getBANK27(Branch='ALL', ReportedDate = "", Period = 2, Month = "", Year = ""):
	''' This function must return result like below:
		Result = {
			'Data': 		Data,
			'Excel': 		Excel,
			'ReportHeader': ReportHeader,
			'TableHeader': 	TableHeader
			}
	'''
	try:
		CurrencyObj			=	MKT_CURRENCY.query
		Result 			= {}
		Data 			= []
		Excel 			= {}
		TableHeader 	= 	{}
		ReportHeader 	=   mktnbc.getHeaderReport(	ReportName 		=	u'MONTHLY REPORT ON NETWORK INFORMATION',
													Title 			=	u'របាយការណ៍ប្រចាំត្រីមាសស្តីពី ព័ត៌មានបណ្តាញប្រតិបត្តិការ',
													Form 			=	'Network Info')


		TableHeader = mktnbc.setTableHeader(Text=u"សាខាខេត្ត~ក្រុង\nProvincial/Cities Branches", 
									 Rowspan=5,Colspan=2,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនសាខា\nNumber of branches", 
									 Rowspan=1,Colspan=2,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"សាខាស្រុក/ខ័ណ្ឌ\nDistrict", 
									 Rowspan=4,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"សាខាឃំុ/សង្កាត់\nCommnune", 
									 Rowspan=4,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		# #-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u"សមតុល្យឥណទាន\nLoan Outstanding", 
									 Rowspan=1,Colspan=5,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនទឹកប្រាក់\nAmount", 
									 Rowspan=4,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនអ្នកខ្ចី\nNumber of borrowers", 
									 Rowspan=1,Colspan=4,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"រូបវ័ន្តបុគ្គល\nIndividual", 
									 Rowspan=1,Colspan=2,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"និតិបុគ្គល\n", 
									 Rowspan=1,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"សរុប\n", 
									 Rowspan=1,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ប្រុស\nMale​", 
									 Rowspan=2,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ស្រី\nFemale", 
									 Rowspan=2,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Legal Entities", 
									 Rowspan=2,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"Total", 
									 Rowspan=2,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")


		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u"សមតុល្យប្រាក់បញ្ញើ\nDeposit Balance", 
									 Rowspan=1,Colspan=5,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនទឹកប្រាក់\nAmount", 
									 Rowspan=4,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនអ្នកខ្ចី\nNumber of Depositors", 
									 Rowspan=1,Colspan=4,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"រូបវ័ន្តបុគ្គល\nIndividual", 
									 Rowspan=1,Colspan=2,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"និតិបុគ្គល\n", 
									 Rowspan=1,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"សរុប\n", 
									 Rowspan=1,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ប្រុស\nMale​", 
									 Rowspan=2,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ស្រី\nFemale", 
									 Rowspan=2,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Legal Entities", 
									 Rowspan=2,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")
		TableHeader = mktnbc.setTableHeader(Text=u"Total", 
									 Rowspan=2,Colspan=0,RowIndex=4, TableHeader=TableHeader, Class="text-center")
		#-----------------------------------------------------------------------------------#
		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនបុគ្គលិក\nNumber of Staff", 
									 Rowspan=1,Colspan=3,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"Total", 
									 Rowspan=4,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ប្រុស\nMale​", 
									 Rowspan=4,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ស្រី\nFemale", 
									 Rowspan=4,Colspan=0,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		#-----------------------------------------------------------------------------------#

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនម៉ាស៊ីន ATM\n\n\n\n\n Number Of ATM terminal", 
									 Rowspan=5,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនម៉ាស៊ីន POST*\n\n\n\n\n Number Of POST*", 
									 Rowspan=5,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនប៉ុស្តិ៍សេវាកម្ម\n\n\n\n\n Number Of​ Service Post", 
									 Rowspan=5,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		
		TableHeader = mktnbc.setTableHeader(Text=u"សមតុល្យប្រាក់បញ្ញើ\nDeposit Balance", 
									 Rowspan=1,Colspan=5,RowIndex=1, TableHeader=TableHeader, Class="text-center")
		
		TableHeader = mktnbc.setTableHeader(Text=u"ប័ណ្ណឥពន្ធ\n​ Debit Card", 
									 Rowspan=1,Colspan=2,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ប័ណ្ណឥទាន\n​ Credit Card", 
									 Rowspan=1,Colspan=2,RowIndex=2, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនទឹកប្រាក់\n Amount", 
									 Rowspan=3,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនប័ណ្ណ\n # of card", 
									 Rowspan=3,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនទឹកប្រាក់\n Amount", 
									 Rowspan=3,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		TableHeader = mktnbc.setTableHeader(Text=u"ចំនួនប័ណ្ណ\n # of card", 
									 Rowspan=3,Colspan=0,RowIndex=3, TableHeader=TableHeader, Class="text-center")

		Data, Excel = getNBCReportByProvince(Branch, ReportHeader)


		Result.update({'TableHeader':TableHeader,'ReportHeader':ReportHeader,'Data':Data, 'Excel': Excel})
		CellSyle = {
					'C10':'top*medium,FF000000',
					'E10':'top*medium,FF000000',
					'F10':'top*medium,FF000000',
					'G10':'top*medium,FF000000',
					'H10':'top*medium,FF000000',
					'J10':'top*medium,FF000000',
					'K10':'top*medium,FF000000',
					'L10':'top*medium,FF000000',
					'M10':'top*medium,FF000000:right*thin,FF000000',
					'P10':'top*medium,FF000000',
					'U10':'top*medium,FF000000',
					'V10':'top*medium,FF000000',
					'W10':'top*medium,FF000000:right*medium,FF000000',

					'B12':'top*thin,FF000000:right*thin,FF000000:left*thin,FF000000',
					'C11':'bottom*thin,FF000000',
					'B13':'left*thin,FF000000',
					'B14':'left*thin,FF000000:right*thin,FF000000',
					'B15':'right*thin,FF000000:left*thin,FF000000',
					'D12':'left*thin,FF000000:top*thin,FF000000:right*thin,FF000000',
					'E12':'bottom*thin,FF000000:top*thin,FF000000',
					'F12':'bottom*thin,FF000000:top*thin,FF000000',
					'G12':'bottom*thin,FF000000:top*thin,FF000000',
					'H12':'bottom*thin,FF000000:top*thin,FF000000',
					'E13':'left*thin,FF000000',
					'C13':'right*thin,FF000000:left*thin,FF000000',
					'E14':'bottom*thin,FF000000:top*thin,FF000000:left*thin,FF000000',
					'F14':'bottom*thin,FF000000:top*thin,FF000000',
					'G14':'bottom*thin,FF000000:top*thin,FF000000',
					'H14':'bottom*thin,FF000000:top*thin,FF000000',
					'E15':'right*thin,FF000000:left*thin,FF000000',
					'G15':'right*thin,FF000000:left*thin,FF000000',
					'C15':'right*thin,FF000000',
					'I13':'left*thin,FF000000:right*thin,FF000000',
					'I12':'right*thin,FF000000:top*thin,FF000000:left*thin,FF000000',
					'J12':'bottom*thin,FF000000:top*thin,FF000000',
					'K12':'bottom*thin,FF000000:top*thin,FF000000',
					'L12':'bottom*thin,FF000000:top*thin,FF000000',
					'M12':'bottom*thin,FF000000:top*thin,FF000000',
					'J14':'bottom*thin,FF000000:top*thin,FF000000:left*thin,FF000000',
					'K14':'bottom*thin,FF000000:top*thin,FF000000',
					'L14':'bottom*thin,FF000000:top*thin,FF000000',
					'M14':'bottom*thin,FF000000:top*thin,FF000000',
					'J15':'left*thin,FF000000:right*thin,FF000000',
					'L15':'left*thin,FF000000:right*thin,FF000000',
					'N12':'left*thin,FF000000:right*thin,FF000000:top*thin,FF000000',
					'N13':'left*thin,FF000000:right*thin,FF000000',
					'N14':'left*thin,FF000000:right*thin,FF000000',
					'N15':'right*thin,FF000000',
					'O12':'top*thin,FF000000:right*thin,FF000000',
					'P11':'bottom*thin,FF000000:right*thin,FF000000',
					'O13':'right*thin,FF000000',
					'O14':'right*thin,FF000000',
					'P15':'left*thin,FF000000:right*thin,FF000000',
					'R11':'left*thin,FF000000:right*thin,FF000000',
					'R12':'left*thin,FF000000:right*thin,FF000000',
					'R14':'left*thin,FF000000:right*thin,FF000000',
					'R15':'left*thin,FF000000:right*thin,FF000000',
					'T11':'left*thin,FF000000:bottom*thin,FF000000',
					'U11':'bottom*thin,FF000000',
					'V11':'bottom*thin,FF000000',
					'W11':'bottom*thin,FF000000:right*medium,FF000000',
					'T12':'left*thin,FF000000',
					'W12':'right*medium,FF000000',
					'W13':'right*medium,FF000000',
					'T14':'top*thin,FF000000:left*thin,FF000000:right*thin,FF000000',
					'T15':'left*thin,FF000000:right*thin,FF000000',
					'V14':'top*thin,FF000000',
					'W14':'top*thin,FF000000:left*thin,FF000000:right*medium,FF000000',
					'V15':'right*thin,FF000000',
					'U14':'top*thin,FF000000:right*thin,FF000000',
					}

		return Result,CellSyle

	except Exception as e:
		raise

def getNBCReportByProvince(Branch, ReportHeader,NBC10=False):
	try:
		CurrencyDic 		= ReportHeader['DicExchangeRate'] 
		Language 			=	mktnbc.getDefaultLang()
		RowRecord 			=	[] # Return value
		ExcelRecord			=	{} # Excel
		ReportedDate		=	ReportHeader.get('ReportedDate',"")
		ExcelRecord.update({
				"A5" : u'As of:  %s'% mktdate.formatDate(ReportedDate,'%d %B %Y'),
				"B7" : ((ReportHeader.get('CompanyName',"")).splitlines())[0],
				"B8" : ((ReportHeader.get('CompanyName',"")).splitlines())[1],
				"P7" : u'%s'%Decimal(ReportHeader.get('ReportingRate',0)),
				"P8" : u'%s'%Decimal(ReportHeader.get('ReportingRate',0))
			})

		i 						= 1
		CellRow 				= 10
		TotalHQ 				= 0
		TotalProvince 			= 0
		TotalDistrict 			= 0
		TotOutstandingAmount 	= 0
		TotAccrInterest			= 0
		TotalMale 				= 0
		TotalFemale 			= 0
		TotalOther 				= 0
		TotalMaleFemale 		= 0
		AccTotalMale 			= 0
		AccTotalFemale 			= 0
		AccTotalOther 			= 0
		AccTotalMaleFemale 		= 0
		AccTotAvailableBal		= 0
		LoanAndAdvanceN10 		= 0

		BranchInfoObj = FinalResult()
		ResultAccountingObj = getAccountObj()

		ProLineDict1 = {u'Banteay Meanchey': 16 , u'Battambang': 17 , u'Kampong Cham': 18,
							u'Kampong Chhnang': 19 , u'Kampong Speu': 20 , u'Kampong Thom': 21, 
							u'Kampot': 22 , 'Kandal': 23 , u'Koh Kong': 24,
							u'Kratie': 25 , 'Mondul Kiri': 26 , u'Phnom Penh': 27,
							u'Preah Vihear': 28 , 'Prey Veng': 29 , u'Pursat': 30,
							u'Ratanak Kiri': 31 , 'Siemreap': 32 , u'Preah Sihanouk': 33,
							u'Stung Treng': 34 , 'Svay Rieng': 35 , u'Takeo': 36,
							u'Oddar Meanchey': 37 , 'Kep Province': 38 , u'Pailin': 39,
							u'Tboung Khmum': 40}

		ProLineDict2 = {16:u'Banteay Meanchey' , 17:u'Battambang' , 18:u'Kampong Cham',
							19:u'Kampong Chhnang' , 20:u'Kampong Speu' , 21:u'Kampong Thom', 
							 22:u'Kampot', 23:'uKandal' , 24:u'Koh Kong',
							25:u'Kratie' , 26:u'Mondul Kiri' , 27:u'Phnom Penh',
							28:u'Preah Vihear', 29:u'Prey Veng' , 30:u'Pursat',
							31:u'Ratanak Kiri', 32:u'Siemreap', 33:u'Preah Sihanouk',
							34:u'Stung Treng' , 35:'uSvay Rieng' , 36:u'Takeo',
							37:u'Oddar Meanchey' , 38:'Kep Province' , 39:u'Pailin',
							40:u'Tboung Khmum'}
		RowNumber = 16
		for Pro in ProLineDict1:
			RNum =int(ProLineDict1[Pro])
			ExcelRecord.update({
					"A%s"%RNum:Pro,
					"B%s"%RNum: '',
					"C%s"%RNum: '',
					"D%s"%RNum: '',
					"E%s"%RNum: '',
					"F%s"%RNum: '',
					"G%s"%RNum: '',
					# "H%s"%RNum: '',
					"J%s"%RNum: '',
					"K%s"%RNum: '',
					"L%s"%RNum: '',
					# "M%s"%RNum: '',
					"O%s"%RNum: '',
					"P%s"%RNum: '',
					"R%s"%RNum: ''
				})
			RowNumber = RowNumber + 1
		if ResultAccountingObj:
			for row in ResultAccountingObj:
				Female 		= row.Female
				Male 		= row.Male
				Other 		= row.Other
				Gender 		= row.Gender
				Amount 		= row.AvailableBal
		if BranchInfoObj:
			for Obj in BranchInfoObj:
				num = ProLineDict1.get(Obj.Province)
				AccrInterest = Obj.AccrInterest if Obj.AccrInterest else 0
				RowRecord.append({
								1:str(i),
								2:Obj.Province,
								3:str(Obj.HQ),
								4:str(Obj.ProvinceBranch),
								5:mktmoney.formatNumber(Obj.OutstandingAmount + AccrInterest if Obj.OutstandingAmount else 0),
								6:str(Obj.Male),
								7:str(Obj.Female),
								8:str(Obj.Other),
								9:str(Obj.Gender),
								10:mktmoney.formatNumber(Amount),
								11:str(Male),
								12:str(Female),
								13:str(Other),
								14:str(Gender),
								15:'0',
								16:'0',
								17:'0',
								18:'0',
								19:'0',
								20:'0',
								21:'0',
								22:'0',
								23:'0',
								24:'0',
								'LineType':'GH',
								'Indent':0,
								'RowBGColor':'',
								'LineFormat':''
							})

				ExcelRecord.update({
							"A%s"%(num) : Obj.Province,
							"B%s"%(num) : Obj.HQ,
							"C%s"%(num) : Obj.ProvinceBranch,
							"D%s"%(num) : Obj.OutstandingAmount + AccrInterest if Obj.OutstandingAmount else 0,
							"E%s"%(num) : Obj.Male,
							"F%s"%(num) : Obj.Female,
							"G%s"%(num) : Obj.Other,
							"I%s"%(num) : Amount,
							"J%s"%(num) : Male,
							"K%s"%(num) : Female,
							"L%s"%(num) : Other,
							"P%s"%(num) : '',
							"R%s"%(num) : 0
						})

				i 						+= 1
				CellRow 				+= 1
				TotalHQ 				+= Obj.HQ
				TotalProvince 			+= Obj.ProvinceBranch
				TotalDistrict 			+= Obj.DistrictBranch
				TotOutstandingAmount 	+= Obj.OutstandingAmount  if Obj.OutstandingAmount else 0
				TotAccrInterest 		+= AccrInterest
				TotalMale 				+= Obj.Male
				TotalFemale 			+= Obj.Female
				TotalOther 				+= Obj.Other
				TotalMaleFemale 		+= Obj.Gender
				AccTotalMale 			+= Male
				AccTotalFemale 			+= Female
				AccTotalOther 			+= Other
				AccTotalMaleFemale 		+= Gender
				AccTotAvailableBal 		+= Amount
				if NBC10==True:
					LoanAndAdvanceN10 = TotOutstandingAmount+ TotAccrInterest
					return LoanAndAdvanceN10
		RowRecord.append({
							1:'',
							2:u'សរុប',
							3:str(TotalHQ),
							4:str(TotalProvince),
							5:mktmoney.formatNumber(TotOutstandingAmount + TotAccrInterest),
							6:str(TotalMale),
							7:str(TotalFemale),
							8:str(TotalOther),
							9:str(TotalMaleFemale),
							10:mktmoney.formatNumber(AccTotAvailableBal),
							11:str(AccTotalMale),
							12:str(AccTotalFemale),
							13:str(AccTotalOther),
							14:str(AccTotalMaleFemale),
							15:'0',
							16:'0',
							17:'0',
							18:'0',
							19:'0',
							20:'0',
							21:'0',
							22:'0',
							23:'0',
							24:'0',
							'LineType':'GH',
							'Indent':0,
							'RowBGColor':mktnbc.BG_BODY_COLOR,
							'LineFormat':'bold'
						})

		return RowRecord, ExcelRecord

	except:
		raise



def getBranchInfo(Branch='ALL'):
	BranchInfo = db.session.query(
									MKT_PROVINCE.Description.label('Province'),
									MKT_LOAN_CONTRACT.ContractCustomerID.label('CustomerID'),
									case([(
										MKT_BRANCH.ID.in_(['HO','HQ']),
										MKT_BRANCH.ID
									)]).label('HQ'),
									case([(
										MKT_PROVINCE.ID  == MKT_BRANCH.Province,
										MKT_BRANCH.ID
									)]).label('ProvinceBranch'),
									case([(
										MKT_DISTRICT.ID  == MKT_BRANCH.District,
										MKT_BRANCH.ID
									)]).label('DistrictBranch'),
									(MKT_LOAN_CONTRACT.OutstandingAmount * cast(MKT_CURRENCY.OtherRate1, Float)).label('OutstandingAmount'),
									(MKT_LOAN_CONTRACT.AccrInterest * cast(MKT_CURRENCY.OtherRate1, Float)).label('AccrInterest'),
									case([(
										MKT_CUSTOMER.Gender == 'Male',
										MKT_CUSTOMER.Gender
									)]).label('Male'),
									case([(
									MKT_CUSTOMER.Gender == 'Female',
									MKT_CUSTOMER.Gender
									)]).label('Female'),
									case([(
									MKT_CUSTOMER.Gender == 'Other',
									MKT_CUSTOMER.Gender
									)]).label('Other'),
									MKT_CUSTOMER.Gender.label('Gender')
								).\
								outerjoin(MKT_BRANCH , MKT_PROVINCE.ID  == MKT_BRANCH.Province).\
								outerjoin(MKT_DISTRICT , MKT_DISTRICT.ID  == MKT_BRANCH.District).\
								outerjoin(MKT_LOAN_CONTRACT , MKT_LOAN_CONTRACT.Branch == MKT_BRANCH.ID).\
								outerjoin(MKT_CUSTOMER , MKT_CUSTOMER.ID == MKT_LOAN_CONTRACT.ContractCustomerID).\
								outerjoin(MKT_CURRENCY, MKT_CURRENCY.ID==MKT_LOAN_CONTRACT.Currency).\
								filter(MKT_LOAN_CONTRACT.OutstandingAmount > 0)

 	return BranchInfo

def getOverDraft():
 	OverDraftObj = db.session.query(MKT_PROVINCE.Description.label('Province'),
		MKT_OVERDRAFT_CONTRACT.CustomerID.label('CustomerID'),
		case([(
		MKT_BRANCH.ID.in_(['HO','HQ']),
		MKT_BRANCH.ID
		)]).label('HQ'),
		case([(
		MKT_PROVINCE.ID == MKT_BRANCH.Province,
		MKT_BRANCH.ID
		)]).label('ProvinceBranch'),
		case([(
		MKT_DISTRICT.ID == MKT_BRANCH.District,
		MKT_BRANCH.ID
		)]).label('DistrictBranch'),
		(MKT_OVERDRAFT_CONTRACT.OutstandingAmount * cast(MKT_CURRENCY.OtherRate1, Float)).label('OutstandingAmount'),
		(0 * cast(MKT_CURRENCY.OtherRate1, Float)).label('AccrInterest'),
		case([(
		MKT_CUSTOMER.Gender == 'Male',
		MKT_CUSTOMER.Gender
		)]).label('Male'),
		case([(
		MKT_CUSTOMER.Gender == 'Female',
		MKT_CUSTOMER.Gender
		)]).label('Female'),
		case([(
		MKT_CUSTOMER.Gender == 'Other',
		MKT_CUSTOMER.Gender
		)]).label('Other'),
		MKT_CUSTOMER.Gender.label('Gender')
		).\
		join(MKT_BRANCH , MKT_PROVINCE.ID == MKT_BRANCH.Province).\
		join(MKT_DISTRICT , MKT_DISTRICT.ID == MKT_BRANCH.District).\
		join(MKT_OVERDRAFT_CONTRACT , MKT_OVERDRAFT_CONTRACT.Branch == MKT_BRANCH.ID).\
		join(MKT_CUSTOMER,MKT_CUSTOMER.ID==MKT_OVERDRAFT_CONTRACT.CustomerID).\
		join(MKT_CURRENCY,MKT_CURRENCY.ID==MKT_OVERDRAFT_CONTRACT.Currency)

	return OverDraftObj


def  FinalResult():
 	ReadAs = 1000000
	LoanObj = getBranchInfo(Branch='ALL')
	OverDraftObj = getOverDraft()
	Result = LoanObj.union_all(OverDraftObj).subquery()

	BranchInfo = db.session.query(Result.c.Province,
							Result.c.CustomerID,
							Result.c.HQ,
							Result.c.ProvinceBranch,
							Result.c.DistrictBranch,
							func.sum(Result.c.OutstandingAmount).label('OutstandingAmount'),
							func.sum(Result.c.AccrInterest).label('AccrInterest'),
							Result.c.Male,
							Result.c.Female,
							Result.c.Other,
							Result.c.Gender).\
							group_by(Result.c.Province,
							Result.c.CustomerID,
							Result.c.HQ,
							Result.c.ProvinceBranch,
							Result.c.DistrictBranch,
							Result.c.Male,
							Result.c.Female,
							Result.c.Other,
							Result.c.Gender).subquery()

	BranchInfo = db.session.query(BranchInfo.c.Province.label('Province'),
							func.count(distinct(BranchInfo.c.HQ)).label('HQ'),
							func.count(distinct(BranchInfo.c.Province)).label('ProvinceBranch'),
							func.count(distinct(BranchInfo.c.DistrictBranch)).label('DistrictBranch'),
							(func.sum(BranchInfo.c.OutstandingAmount)/ReadAs).label('OutstandingAmount'),
							(func.sum(BranchInfo.c.AccrInterest)/ReadAs).label('AccrInterest'),
							func.count(BranchInfo.c.Male).label('Male'),
							func.count(BranchInfo.c.Female).label('Female'),
							func.count(BranchInfo.c.Other).label('Other'),
							func.count(BranchInfo.c.Gender).label('Gender')
						).\
						group_by(BranchInfo.c.Province).\
						distinct(BranchInfo.c.Province).\
						order_by(BranchInfo.c.Province.asc()).all()
	return BranchInfo


def getAccountObj():
	ReadAs = 1000000
 	AccountObj = db.session.query(MKT_PROVINCE.Description.label('Province'),
				MKT_ACCOUNT.CustomerList.label('CustomerID'),
				case([(
				MKT_BRANCH.ID.in_(['HO','HQ']),
				MKT_BRANCH.ID
				)]).label('HQ'),
				case([(
				MKT_PROVINCE.ID == MKT_BRANCH.Province,
				MKT_BRANCH.ID
				)]).label('ProvinceBranch'),
				case([(
				MKT_DISTRICT.ID == MKT_BRANCH.District,
				MKT_BRANCH.ID
				)]).label('DistrictBranch'),
				(MKT_ACCOUNT.AvailableBal * cast(MKT_CURRENCY.OtherRate1, Float)).label('AvailableBal'),
				case([(
				MKT_CUSTOMER.Gender == 'Male',
				MKT_CUSTOMER.Gender
				)]).label('Male'),
				case([(
				MKT_CUSTOMER.Gender == 'Female',
				MKT_CUSTOMER.Gender
				)]).label('Female'),
				case([(
				MKT_CUSTOMER.Gender == 'Other',
				MKT_CUSTOMER.Gender
				)]).label('Other'),
				MKT_CUSTOMER.Gender.label('Gender')
				).\
				join(MKT_BRANCH , MKT_PROVINCE.ID == MKT_BRANCH.Province).\
				join(MKT_DISTRICT , MKT_DISTRICT.ID == MKT_BRANCH.District).\
				join(MKT_ACCOUNT , MKT_ACCOUNT.Branch == MKT_BRANCH.ID).\
				join(MKT_CUSTOMER,MKT_CUSTOMER.ID==MKT_ACCOUNT.CustomerList).\
				join(MKT_CURRENCY,MKT_CURRENCY.ID==MKT_ACCOUNT.Currency).\
				filter(MKT_ACCOUNT.AccProduct=='101').subquery()

	FinalAccountObj = db.session.query(AccountObj.c.Province,
								AccountObj.c.CustomerID,
								AccountObj.c.HQ,
								AccountObj.c.ProvinceBranch,
								AccountObj.c.DistrictBranch,
								(func.sum(AccountObj.c.AvailableBal)).label('AvailableBal'),
								AccountObj.c.Male,
								AccountObj.c.Female,
								AccountObj.c.Other,
								AccountObj.c.Gender).\
								group_by(AccountObj.c.Province,AccountObj.c.CustomerID,
									AccountObj.c.HQ,
									AccountObj.c.ProvinceBranch,
									AccountObj.c.DistrictBranch,
									AccountObj.c.Male,
									AccountObj.c.Female,
									AccountObj.c.Other,
									AccountObj.c.Gender).subquery()


	AccountObj = db.session.query(
									FinalAccountObj.c.Province.label('Province'),
									func.count(distinct(FinalAccountObj.c.HQ)).label('HQ'),
									func.count(distinct(FinalAccountObj.c.Province)).label('ProvinceBranch'),
									func.count(distinct(FinalAccountObj.c.DistrictBranch)).label('DistrictBranch'),
									(func.sum(FinalAccountObj.c.AvailableBal)/ReadAs).label('AvailableBal'),
									func.count(FinalAccountObj.c.Male).label('Male'),
									func.count(FinalAccountObj.c.Female).label('Female'),
									func.count(FinalAccountObj.c.Other).label('Other'),
									func.count(FinalAccountObj.c.Gender).label('Gender')
								).\
								group_by(FinalAccountObj.c.Province).\
								distinct(FinalAccountObj.c.Province).\
								order_by(FinalAccountObj.c.Province.asc()).all()

	return AccountObj