from flask 						import Flask,request,jsonify,make_response
from app.mktcore.imports 		import *
from decimal 					import *
from .. import app
import app.tools.mktdate 		as mktdate
import importlib
import StringIO
import csv
import app.tools.mkttool 		as mkttool

@app.route("/Morakot/DataExport", methods=['GET', 'POST'])
@checkLogOutSession
@checkLogOutTime
def download_file():
	# from app.urlregister 	import *
	Module = __import__("app.urlregister")
	FieldRequired 		= []
	ListAdministrator 	= [ 'Branch','Module','Form','Role','Access Right','Menu','Menu Item']
	ListOfValues 		= [	'Business','Category','Category Type','Country','Education',
							'Source Of Fund','Sector','Industry','ID Type','Transaction',
							'Loan Purpose','Loan CheckList','Officer',
							'Position','Province','District','Commune','Village']

	ListAdministrator.sort()
	ListOfValues.sort()

	DicAllowTableExport ={
	'Branch'		:'MKT_BRANCH',
	'Module'		:'MKT_MODULE',
	'Form'			:'MKT_FORM',
	'Role'			:'MKT_ROLE',
	'Menu'			:'MKT_MENU',
	'Menu Item'		:'MKT_MENU_ITEM',
	'Access Right'	:'MKT_ACCESS',
	'Business'		:'MKT_BUSINESS',
	'Category'		:'MKT_CATEGORY',
	'Category Type'	:'MKT_CATEG_TYPE',
	'Country'		:'MKT_COUNTRY',
	'Education'		:'MKT_EDUCATION',
	'Source Of Fund':'MKT_SOURCE_OF_FUND',
	'Sector'		:'MKT_SECTOR',
	'Industry'		:'MKT_INDUSTRY',
	'ID Type'		:'MKT_ID_TYPE',
	'Transaction'	:'MKT_TRANSACTION',
	'Loan Purpose'	:'MKT_LOAN_PURPOSE',
	'Loan CheckList':'MKT_CHECKLIST',
	'Officer'		:'MKT_OFFICER',
	'Position'		:'MKT_POSITION',
	'Province'		:'MKT_PROVINCE',
	'District'		:'MKT_DISTRICT',
	'Commune'		:'MKT_COMMUNE',
	'Village'		:'MKT_VILLAGE',

	}

	try:
		if request.method == 'POST':
			# csv = """"REVIEW_DATE","AUTHOR","ISBN","DISCOUNTED_PRICE"
			# "1985/01/21","Douglas Adams",0345391802,5.95
			# "1990/01/12","Douglas Hofstadter",0465026567,9.95
			# "1998/07/15","Timothy ""The Parser"" Campbell",0968411304,18.99
			# "1999/12/03","Richard Friedman",0060630353,5.95
			# "2004/10/04","Randel Helms",0879755725,4.50"""

			
			csvList 		= []
			TableName 		= str(request.form['Operation'])

			if TableName == 'None':
				FieldRequired.append(('Table Name','This field is required.'))
				return render_template("export.html",
							FieldRequired = FieldRequired,						
							ListAdministrator=ListAdministrator,
							ListOfValues=ListOfValues)

			Source = DicAllowTableExport[TableName]
			FieldInTable 	= []
			Mapper 			= inspect(getattr(Module,Source))
			FieldExclude    = ["Status","Curr","Inputter","Createdon","Authorizer","Authorizeon","Branch"]
			for item in Mapper.attrs:
				if not item.key in FieldExclude:						
					FieldInTable.append(item.key)
			csvList.append(FieldInTable)

			QueryTable 	= getattr(Module,Source).query.yield_per(100).order_by(getattr(Module,Source).ID.asc())
			for row in QueryTable:
				recordRow=[]
				for col in FieldInTable:
					if not col in FieldExclude:
						if mkttool.isString(getattr(row,col)) :
							recordRow.append(str((getattr(row,col) if getattr(row,col) else '').encode('utf-8')))	
							# recordRow.append(str(getattr(row,col)).encode('utf-8'))
						else:
							recordRow.append(getattr(row,col) if getattr(row,col) else 0)

				csvList.append(recordRow)
			StrIO = StringIO.StringIO()
			CSVWrite = csv.writer(StrIO)
			for row in csvList:
				CSVWrite.writerow(row)	
		
			# We need to modify the response, so the first thing we 
			# need to do is create a response out of the CSV string
			response = make_response(StrIO.getvalue())
			# This is the key: Set the right header for the response
			# to be downloaded, instead of just printed on the browser
			response.headers['Cache-Control'] = 'no-cache'
			response.headers["Content-Disposition"] = "attachment; filename=%s.csv"%TableName.replace(' ','_')
			response.headers["Content-type"] = "text/csv; charset=utf-8"
			return response

			# export txt
			# strIO = StringIO.StringIO()
			# strIO.write('Hello from Dan Jacob and Stephane Wirtel !')
			# strIO.seek(0)


	except Exception, e:
		raise
		flash(msg_error+e.message)

	return render_template("dataexport.html",
							FieldRequired = FieldRequired,						
							ListAdministrator=ListAdministrator,
							ListOfValues=ListOfValues)