from app.mktcore.imports 			import *
from app.tools.user 				import *
from app.tools.mktofficer 			import *
from app.tools.mktcustomer 			import *
from app.Module.models 				import MKT_FORM
from app.CategoryType.models 		import MKT_CATEG_TYPE
from app.AccProduct.models 			import MKT_ACC_PRODUCT
from app.Currency.models 			import MKT_CURRENCY
from app.JAccount.models 			import MKT_JACCOUNT
from app.InterestRate.models 		import MKT_INTEREST_RATE
from app.ChargeRate.models 			import MKT_CHARGE_RATE
from app.AccRuleDetail.models 		import MKT_ACC_RULE_DE
from app.Account.models 			import MKT_ACCOUNT
from app.Collateral.models 			import MKT_COLLATERAL
from app.PotentialCustomer.models 	import MKT_PO_CUSTOMER
from app.LoanApplication.models 	import MKT_LOAN_APPLICATION
from app.VB.models 					import *
from app.CollateralType.models      import MKT_COLLATERAL_TYPE
from app.Officer.models             import MKT_OFFICER
from app.TemplateBase.models 		import *

import math
import mktaccount 					as mktaccount
import catetool 					as mktcategory
import app.tools.mktaddress 		as mktaddress
import app.tools.mktbranch 			as mktbranch
import app.tools.mktofficer 		as mktofficer
import app.tools.mktcustomer 		as mktcustomer
import app.tools.mktdate 			as mktdate
import app.tools.mktloanapplication as mktloanapp
import app.mktcore.globalfunction 	as globalfunction
import app.tools.mktloan 		 	as mktloan

@app.route("/Morakot/SearchAccountID", methods=['GET'])
@app.route("/Morakot/API/SearchAccountID", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def SearchAccount():
	
    result=''
    result = mktaccount.getSearchAccount(FilterBranch=False)

    return result

@app.route("/Morakot/SearchLoanCentreID", methods=['GET'])
@app.route("/Morakot/API/SearchLoanCentreID", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def getSearchLoanCentre():

    result=''
    result = mktloan.getSearchLoanContract()
    
    return result

@app.route("/Morakot/LoanID", methods=['GET'])
@app.route("/Morakot/API/LoanID", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def LoanID():

    result=''
    result = mktloan.getSearchLoanContract(FilterBranch=True)
    
    return result

@app.route("/Morakot/TDrAccount", methods=['GET'])
@app.route("/Morakot/API/TDrAccount", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def TDrAccount():

	result=''
	result = mktaccount.getSearchTillAccount()
	
	return result

@app.route("/Morakot/TCrAccount", methods=['GET'])
@app.route("/Morakot/API/TCrAccount", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def TCrAccount():
	
	result=''
	result = mktaccount.getSearchTillAccount()
		
	return result

@app.route("/Morakot/Categories", methods=['GET'])
@app.route("/Morakot/API/Categories", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def Categories():
	result = ''
	result = mktcategory.getCategoryAsSearch()

	return result

@app.route("/Morakot/IntReceivableCate", methods=['GET'])
@app.route("/Morakot/API/IntReceivableCate", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def IntReceivableCate():
	result = ''
	result = mktcategory.getCategoryAsSearch()

	return result

@app.route("/Morakot/IntIncomeCate", methods=['GET'])
@app.route("/Morakot/API/IntIncomeCate", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def IntIncomeCate():
	result = ''
	result = mktcategory.getCategoryAsSearch()

	return result

@app.route("/Morakot/ChargeCat", methods=['GET'])
@app.route("/Morakot/API/ChargeCat", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def ChargeCat():
	result = ''
	result = mktcategory.getCategoryAsSearch()

	return result

@app.route("/Morakot/VBBranch", methods=['GET'])
@app.route("/Morakot/API/VBBranch", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def VBBranch():
	return mktbranch.getSearchBranch()

@app.route('/Morakot/DistrictID',methods=['GET'])
@app.route('/Morakot/API/DistrictID',methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def getDistrictID():
	Province = request.args.get('ProvinceID')

	return mktaddress.getDistrict(Province)

@app.route('/Morakot/CommuneID',methods=['GET'])
@app.route('/Morakot/API/CommuneID',methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def getCommuneID():
	District = request.args.get('DistrictID')

	return mktaddress.getCommune(District)

@app.route('/Morakot/VillageID',methods=['GET'])
@app.route('/Morakot/API/VillageID',methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def getVillageID():
	Commune = request.args.get('CommuneID')

	return mktaddress.getVillage(Commune)

@app.route('/Morakot/VillageIIID',methods=['GET'])
@app.route('/Morakot/API/VillageIIID',methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getVillageIIID():
	VillageID = request.args.get('VillageID')
	return mktaddress.getVillageII(VillageID)

@app.route('/Morakot/loadOfficerByBranch',methods=['GET'])
@app.route('/Morakot/API/loadOfficerByBranch',methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def getOfficer():
	BranchID = request.args.get('BranchID')

	return mktofficer.getOfficerByBranch(BranchID)

@app.route('/Morakot/loadIndustryBySector',methods=['GET'])
@app.route('/Morakot/API/loadIndustryBySector',methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def getIndustry():
	SectorID = request.args.get('SectorID')
	
	return mktaddress.getIndustryBySector(SectorID)

@app.route("/Morakot/CustomerID", methods=['GET'])
@app.route("/Morakot/API/CustomerID", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def CustomerID():
	return mktcustomer.getSearchCustomer()

@app.route("/Morakot/SearchCustomerID", methods=['GET'])
@app.route("/Morakot/API/SearchCustomerID", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def SearchCustomerID():
	return mktcustomer.getSearchCustomer(FilterCurrentBranch=False)

@app.route("/Morakot/Guarantor", methods=['GET'])
@app.route("/Morakot/API/Guarantor", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def Guarantor():
	return mktcustomer.getSearchCustomer("Y")

@app.route("/Morakot/AccountID", methods=['GET'])
@app.route("/Morakot/API/AccountID", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def AccountID():
	return mktaccount.getSearchAccount()

@app.route("/Morakot/CustomerList", methods=['GET'])
@app.route("/Morakot/API/CustomerList", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def CustomerList():
	return getSearchCustomer()

@app.route("/Morakot/UserID", methods=['GET'])
@app.route("/Morakot/API/UserID", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def UserID():
	return getSearchUser()

@app.route("/Morakot/CoBorrowerID", methods=['GET'])
@app.route("/Morakot/API/CoBorrowerID", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def CoBorrowerID():
	return mktcustomer.getSearchCustomer()

@app.route("/Morakot/CoBorrowerID_2", methods=['GET'])
@app.route("/Morakot/API/CoBorrowerID_2", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def CoBorrowerID_2():
	return mktcustomer.getSearchCustomer()

@app.route("/Morakot/CoBorrowerID_3", methods=['GET'])
@app.route("/Morakot/API/CoBorrowerID_3", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def CoBorrowerID_3():
	return mktcustomer.getSearchCustomer()

@app.route("/Morakot/CoBorrowerID_4", methods=['GET'])
@app.route("/Morakot/API/CoBorrowerID_4", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def CoBorrowerID_4():
	return mktcustomer.getSearchCustomer()

@app.route("/Morakot/CoBorrowerID_5", methods=['GET'])
@app.route("/Morakot/API/CoBorrowerID_5", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def CoBorrowerID_5():
	return mktcustomer.getSearchCustomer()

@app.route("/Morakot/OfficerID", methods=['GET'])
@app.route("/Morakot/API/OfficerID", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def OfficerID():
	return getSearchOfficer()

@app.route("/Morakot/AccountClosingDate", methods=['GET'])
@app.route("/Morakot/API/AccountClosingDate", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def getAccountClosingDate():
	AccountStatus 	= request.args.get("AccStatus")
	ClosingDate 	= mktdate.getBankDate()
	if AccountStatus.upper() != "C":
		ClosingDate = ""

	return jsonify(ClosingDate=str(ClosingDate))

@app.route("/Morakot/BranchID", methods=['GET'])
@app.route("/Morakot/API/BranchID", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def getBranchID():
	ID = request.args.get('UserID')
	Branch = ""
	query = MKT_USER.query.get(ID)
	if query:
		Branch = query.Branch

	return jsonify(Branch=Branch)

@app.route('/Morakot/JoinID', methods=['GET'])
@app.route('/Morakot/API/JoinID', methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def getJAccount():
	dic = False
	Choices = request.args.get('JAccountID')
	if Choices == "Y":
		dic = True
	else:
		dic = False

	return jsonify(Bool=dic)

@app.route('/Morakot/AccProductID', methods=['GET'])
@app.route('/Morakot/API/AccProductID', methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def getAccProductCategory():

	Value 			= 	request.args.get('AccProductID')
	Currency 		= 	request.args.get("Currency")
	cate 			= 	""
	Rate 			= 	"0"
	ChargeRate 		= 	"0"
	FixedRate 		= 	"F"
	AccProCategory 	=	""
	InterestKey 	=	""

	if Value != "__None":
		row 		= MKT_ACC_PRODUCT.query.get(str(Value))
		cate 		= row.CategoryList
		InterestKey = row.InterestKey
		Charge 		= row.Charge

		if InterestKey:
			ID 		= str(InterestKey) + str(Currency)
			rate 	= MKT_INTEREST_RATE.query.get(ID)
			if rate:
				# inter 	= str(rate.Rate)
				Rate 	= 	rate.Rate
				Rate 	=	Rate.split()
				if len(Rate) > 0:
					Rate 	= 	Rate[0]
				else:
					Rate 	=	'0'

		if Charge:
			ID = str(Charge) + str(Currency)
			cha = MKT_CHARGE_RATE.query.get(ID)
			if cha:
				ChargeRate = str(cha.Value)
				FixedRate = str(cha.RateFixed)
		# return jsonify(AccProCategory=cate, InterestKey=inter, ChargeRate=ChargeRate, FixedRate=FixedRate)
	
	return jsonify(AccProCategory=cate, InterestKey=Rate, ChargeRate=ChargeRate, FixedRate=FixedRate)

@app.route('/Morakot/API/CustomerNameBySelected')
@app.route('/Morakot/CustomerNameBySelected')
@login_required
@checkLogOutSession
@checkLogOutTime
def getCustomerNameBySelected():
	try:

		CustomerID 		= 	request.args.get('CustomerList')
		Customer 		= 	MKT_CUSTOMER.query.get(CustomerID)
		CustomerName 	=	""
		if Customer:
			CustomerName = Customer.LastNameEn + " " + Customer.FirstNameEn

		return jsonify(CustomerName=CustomerName)
		
	except:
		raise

@app.route('/Morakot/CalculateInstallment')
@app.route('/Morakot/API/CalculateInstallment')
@login_required
@checkLogOutSession
@checkLogOutTime
def getCalculateInstallment():
	try:

		Term 			= 	request.args.get('Term')
		
		if 'AppDate' in request.args:
			AppDate 		= 	request.args.get('AppDate')
		else:
			AppDate 		= 	request.args.get('ValueDate')

		FreqType 		= 	request.args.get('FreqType')
		Frequency 		= 	request.args.get('Frequency')

		if not AppDate:
			AppDate = mktdate.getBankDate()

		# Installment 	=	"0"

		Installment 	= 	mktloanapp.getNumberOfInstallment(Term, Frequency, FreqType, AppDate)

		return jsonify(Installment=Installment)
		
	except Exception as e:
		return jsonify(message={'message':[str(e)]}),500

@app.route("/Morakot/ContractCustomerInfo", methods=['GET'])
@app.route("/Morakot/API/ContractCustomerInfo", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getContractCustomerInfo():
	try:
		Branch 		= session.get("ChangeBranch")
		CustomerID 	= request.args.get('CustomerID')
		AccountType	= request.args.get('AccountType','')
		condiction 	= []
		dic 		= {}

		if AccountType == 'OverdraftAccount':
			condiction.append(MKT_ACCOUNT.ID.ilike("OD%"))


		query 		= MKT_ACCOUNT.query.\
								filter(MKT_ACCOUNT.CustomerList == CustomerID).\
								filter(MKT_ACCOUNT.AccStatus == "O").\
								filter(MKT_ACCOUNT.Branch == Branch)
		if condiction:
			query = query.filter(*condiction)

		if query.first():
			for row in query:
				dic[row.ID] = row.ID + "  - " + row.Currency+ " " + row.AccName

		return jsonify(results=dic)
	except:
		raise


@app.route("/Morakot/CollateralByClient", methods=["GET"])
@app.route("/Morakot/API/CollateralByClient", methods=["GET"])
@login_required
@checkLogOutSession
@checkLogOutTime
def loadCollateralByClient():
	Customer = request.args.get("CustomerID") if "CustomerID" in request.args else ""
	return getLoadCollateral(Customer)

def getLoadCollateral(CustomerID):
	CustomerObj = 	MKT_COLLATERAL.query.\
					filter(MKT_COLLATERAL.CustomerID == CustomerID).\
					all()
	dic = {}
	# dic["__None"] = "--None--"
	if CustomerObj:
		for row in  CustomerObj:
			dic[row.ID] = row.ID + " - " + row.Description

	return jsonify(results=dic)

@app.route("/Morakot/CollateralByLoan", methods=["GET"])
@checkLogOutSession
@checkLogOutTime
def loanCollateralByLoan():
    LoanID = request.args.get("LoanID") if "LoanID" in request.args else ""
    return getCollateralByLoan(LoanID)

def getCollateralByLoan(LoanID):
    Collateral = db.session.query(MKT_LOAN_COLLATERAL,MKT_COLLATERAL).\
                                join(MKT_LOAN_CONTRACT,MKT_LOAN_CONTRACT.ID==MKT_LOAN_COLLATERAL.ID).\
                                join(MKT_COLLATERAL,MKT_COLLATERAL.ID==MKT_LOAN_COLLATERAL.Collateral).\
                                filter(MKT_LOAN_COLLATERAL.ID == LoanID)
    dic = {}
    if Collateral.first():
        for models in Collateral:
            LoanCollateral =models[0]
            CollateralObj = models[1]
            dic[CollateralObj.ID] = CollateralObj.ID + "-" + CollateralObj.Description
    else:
        dic["__None"] = "--None--"

    return jsonify(results=dic)

@app.route("/Morakot/CustomerFullNameByID", methods=["GET"])
@app.route("/Morakot/API/CustomerFullNameByID", methods=["GET"])
@login_required
@checkLogOutSession
@checkLogOutTime
def getCustomerFullNameByID():
	try:
		
		CustomerName 	= 	""
		Customer 		= 	request.args.get("CoBorrowerID") if "CoBorrowerID" in request.args else ""
		Obj 			=	MKT_CUSTOMER.query.get(Customer)
		if Customer:
			if Obj:
				CustomerName 	=	Obj.LastNameEn + " " + Obj.FirstNameEn
			else:
				Customer 		=	"Customer %s not found." %Customer

		return jsonify(CustomerName=CustomerName, Customer=Customer)

	except Exception, e:
		return "%s" %e

@app.route("/Morakot/GetPotentialCustomer", methods=['GET'])
@app.route("/Morakot/API/GetPotentialCustomer", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def getPotentialCustomer():
	try:
		PotentialCustomer 		= request.args.get('PotentialCustomerID')
		FirstNameEn		=	''
		LastNameEn		=	''
		FirstNameKh		=	''
		LastNameKh		=	''
		Gender			=	''
		Salutation 		=	''

		Mobile1 		=	''
		Mobile2			=	''
		Email			=	''
		Province 		=	''
		ProvinceDesc    = 	''
		District 		=	''
		DistrictDesc 	=	''
		Commune 		=	''
		CommuneDesc 	= 	''
		Village 		=	''
		VillageDesc		=	''
		HouseNo 		=	''
		Street 			=	''


		if PotentialCustomer:
			PotentialCustomerObj 	=	 MKT_PO_CUSTOMER.query.get(PotentialCustomer)
			if PotentialCustomerObj:
				FirstNameEn = PotentialCustomerObj.FirstNameEn
				LastNameEn 	= PotentialCustomerObj.LastNameEn
				FirstNameKh = PotentialCustomerObj.FirstNameKh
				LastNameKh 	= PotentialCustomerObj.LastNameKh
				Gender 		= PotentialCustomerObj.Gender

				Mobile1 	= PotentialCustomerObj.Mobile1
				Mobile2 	= PotentialCustomerObj.Mobile2
				Email 		= PotentialCustomerObj.Email
				Province 	= PotentialCustomerObj.Province
				Commune 	= PotentialCustomerObj.Commune
				District 	= PotentialCustomerObj.District
				Village 	= PotentialCustomerObj.Village
				HouseNo 	= PotentialCustomerObj.HouseNo
				Street 		= PotentialCustomerObj.Street
				ProvinceObj = MKT_PROVINCE.query.get(Province)
				DistrictObj = MKT_DISTRICT.query.get(District)
				CommuneObj 	= MKT_COMMUNE.query.get(Commune)
				VillageObj 	= MKT_VILLAGE.query.get(Village)
				ProvinceDesc = ProvinceObj.Description if ProvinceObj else ''
				DistrictDesc = DistrictObj.Description if DistrictObj else ''
				CommuneDesc  = CommuneObj.Description if CommuneObj else ''
				VillageDesc  = VillageObj.Description if VillageObj else ''

				Salutation 	= 'Mr' if PotentialCustomerObj.Gender=='Male' else 'Mrs'

		return jsonify( FirstNameEn = FirstNameEn, LastNameEn = LastNameEn, FirstNameKh = FirstNameKh, LastNameKh = LastNameKh,
						Gender = Gender, Mobile1 = Mobile1, Mobile2 = Mobile2, Email = Email, Salutation = Salutation,
						Province=Province,ProvinceDesc=ProvinceDesc,District=District,DistrictDesc=DistrictDesc,Commune=Commune,
						CommuneDesc=CommuneDesc,Village=Village,VillageDesc=VillageDesc,HouseNo=HouseNo,Street=Street
						)

	except Exception, e:
		raise e

@app.route("/Morakot/GetCustomerDocument", methods=['GET'])
@app.route("/Morakot/API/GetCustomerDocument", methods=['GET'])
@login_required
@checkLogOutSession
@checkLogOutTime
def GetCustomerDocument():
	IncludeINAU =	mktsetting.getAppSetting('INCLUDE_INAU')
	if not IncludeINAU:
		IncludeINAU = 	"N"

	UploadCrossBranch =	mktsetting.getAppSetting('UPLOAD_CROSS_BRANCH')
	if not UploadCrossBranch:
		UploadCrossBranch = "Y"

	FilterCurrentBranch = False

	if UploadCrossBranch == "N":
		FilterCurrentBranch = True
	
	return mktcustomer.getSearchCustomer(FilterCurrentBranch=FilterCurrentBranch,IncludeINAU=IncludeINAU)

@app.route("/Morakot/GroupID", methods=['GET'])
@app.route("/Morakot/API/GroupID", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getGroup():
	VBID = request.args.get('VBID',"")
	if not VBID:
		VBID = request.args.get('ContractVB')
	dic = {}
	result =  MKT_GROUP.query if mkttool.isRequestAll() else MKT_GROUP.query.filter_by(VBID=VBID).all()
	for row in  result:
		dic[row.ID] = row.ID +' - '+row.GroupName
	return jsonify(results=dic)

@app.route("/Morakot/SearchCollateral", methods=['GET'])
@app.route("/Morakot/API/SearchCollateral", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def Collateral():
	Branch 	= 	mktuser.getBranch(session["ChangeBranch"]).ID
	search = request.args.get('q',"")
	NAMES = []
	if mkttool.isRequestAll():
		UserOfficerID = getUserOfficerID()
		a = MKT_COLLATERAL.query.join(MKT_CUSTOMER, MKT_CUSTOMER.ID == MKT_COLLATERAL.CustomerID).\
				filter(MKT_CUSTOMER.Branch == Branch,MKT_CUSTOMER.Officer == UserOfficerID).all()
	else:
		a = MKT_COLLATERAL.query.\
			filter(or_(MKT_COLLATERAL.ID.ilike('%'+search+'%'), MKT_COLLATERAL.Description.ilike('%'+search+'%'), MKT_COLLATERAL.CustomerID.ilike('%'+search+'%'))).\
			all()
	for row in a:
		dic = { "id":row.ID, "text":row.CustomerID + " - " + row.Description }
		NAMES.append(dic)
	return jsonify(items=NAMES)

@app.route("/Morakot/SearchCollateralType", methods=['GET'])
@app.route("/Morakot/API/CollateralType", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def CollateralType():
	search = request.args.get('q',"")
	NAMES = []
	a = MKT_COLLATERAL_TYPE.query if mkttool.isRequestAll() else MKT_COLLATERAL_TYPE.query.\
		filter(or_(MKT_COLLATERAL_TYPE.ID.ilike('%'+search+'%'), MKT_COLLATERAL_TYPE.Description.ilike('%'+search+'%'))).\
		all()
	for row in a:
		dic = { "id":row.ID, "text":row.Description }
		NAMES.append(dic)
	return jsonify(items=NAMES)

# @app.route("/Morakot/Customer", methods=['GET'])
# @checkLogOutSession
# @checkLogOutTime
# def Customer():
# 	search = request.args.get('q')
# 	NAMES = []
# 	a = MKT_CUSTOMER.query.\
# 		filter(or_(MKT_CUSTOMER.ID.ilike('%'+search+'%'), MKT_CUSTOMER.FirstNameEn.ilike('%'+search+'%'),MKT_CUSTOMER.LastNameEn.ilike('%'+search+'%'))).\
# 		all()
# 	for row in a:
# 		dic = { "id":row.ID, "text":row.FirstNameEn + " - " + row.LastNameEn }
# 		NAMES.append(dic)
# 	return jsonify(items=NAMES)

@app.route("/Morakot/SearchOfficer", methods=['GET'])
@app.route("/Morakot/API/SearchOfficer", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def ContractOfficerID():
	return mktofficer.getSearchOfficer()

@app.route("/Morakot/FileName", methods=['GET'])
@app.route("/Morakot/API/FileName", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getFileName():
	FileUpload 		= request.args.get("FileUpload")
	FileName 	= ""
	DateNow 	= mktdate.getDateTimeNow()
	if FileUpload:
		FileName = FileUpload + ' ' + DateNow
	return jsonify(FileName = FileName)

@app.route("/Morakot/FrequencyType", methods=['GET'])
@app.route("/Morakot/API/FrequencyType", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getFrequencyType():
	FreqType 		= request.args.get("FreqType")
	WeekTerm 		= request.args.get("WeekTerm")
	BoolTerm 		= False
	BoolWeekTerm 	= False
	if FreqType == '2':
		BoolTerm 		= True
	else:
		WeekTerm 		= ''
		BoolWeekTerm 	= True

	return jsonify(BoolTerm = BoolTerm, BoolWeekTerm = BoolWeekTerm, WeekTerm = WeekTerm)

@app.route("/Morakot/Frequency", methods=['GET'])
@app.route("/Morakot/API/Frequency", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getFrequency():
	FreqType 		= request.args.get("FreqType")
	WeekTerm 		= request.args.get("WeekTerm")
	Term 			= request.args.get("Term")
	Frequency 		= request.args.get("Frequency")
	AppDate 		= request.args.get("AppDate")
	Installment 	= ''
	if FreqType == '2':
		Installment = WeekTerm
	else:
		Installment = mktloanapp.getNumberOfInstallment(Term, Frequency, FreqType, AppDate)
	return jsonify(Installment = Installment)


@app.route("/Morakot/TermFrequencyType", methods=['GET'])
@app.route("/Morakot/API/TermFrequencyType", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getTermFrequencyType():

	LoanProductID 	= request.args.get('LoanProduct')
	Term 			= ''
	FreqType 		= '1'
	FreqTypeDes 	= ''
	FreqTypeDic 	= {'1':'1. Monthly', '2':'2. Weekly', '3':'3. Daily'}
	TemplateBase 	= ''
	TemplateBaseDes = ''

	if LoanProductID:
		query = MKT_LOAN_PRODUCT.query.get(LoanProductID)
		if query:
			FreqType 	= query.FreqType
			Term 		= query.Term
			TemplateBase = query.TemplateBase
			if FreqType:
				FreqTypeDes 	= FreqTypeDic[FreqType]
			if TemplateBase:
				TBObj = MKT_TEMPLATE_BASE.query.filter(MKT_TEMPLATE_BASE.ID== TemplateBase).first()
				if TBObj:
					TemplateBaseDes = '%s - %s'%(TemplateBase,TBObj.Description)

	return jsonify(	Term = Term, 
					FreqType = FreqType, 
					FreqTypeDes = FreqTypeDes, 
					TemplateBaseDes = TemplateBaseDes, 
					TemplateBase = TemplateBase)

@app.route('/Morakot/GetTotalExpenses',methods=['GET'])
@app.route('/Morakot/API/GetTotalExpenses',methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getTotalExpense():
	Currency 		= request.args.get('Currency')

	Household 		= request.args.get('Household')
	Household 		= globalfunction.wordAmount(Household)

	Personal 		= request.args.get('Personal')
	Personal 		= globalfunction.wordAmount(Personal)

	TotalExpenses 	= Household+Personal
	CurrencyObj 	= MKT_CURRENCY.query.get(Currency)
	TotalExpenses 	= mktmoney.toMoney(float(TotalExpenses), CurrencyObj)

	return jsonify(TotalExpenses = TotalExpenses)


@app.route('/Morakot/GetSelfEmployed',methods=['GET'])
@app.route('/Morakot/API/GetSelfEmployed',methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getSelfEmployed():
	SourceOfIncome 	= request.args.get('SourceOfIncome')
	ID 		= "Y" if SourceOfIncome == "4" else "N"
	Desc 	= "Yes" if SourceOfIncome == "4" else "No"

	return jsonify(ID = ID, Desc = Desc)


@app.route('/Morakot/GetNetTotalIncome',methods=['GET'])
@app.route('/Morakot/API/GetNetTotalIncome',methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getNetTotalIncome():
	Currency 		= request.args.get('Currency')

	PrimaryFreq 	= request.args.get('PrimaryFreq')
	PrimaryIncome 	= request.args.get('PrimaryIncome')
	PrimaryIncome 	= globalfunction.wordAmount(PrimaryIncome)

	SecondaryFreq 	= request.args.get('SecondaryFreq')
	SecondaryIncome = request.args.get('SecondaryIncome')
	SecondaryIncome = globalfunction.wordAmount(SecondaryIncome)
	FreqList 		= {'1':1, '2':3, '3': 6, '4': 12}
	
	NetTotalIncome 	= PrimaryIncome/FreqList.get(str(PrimaryFreq),1) + SecondaryIncome/FreqList.get(str(SecondaryFreq),1)
	CurrencyObj 	= MKT_CURRENCY.query.get(Currency)
	NetTotalIncome 	= mktmoney.toMoney(float(NetTotalIncome), CurrencyObj)

	return jsonify(NetTotalIncome = NetTotalIncome)

@app.route("/Morakot/getOfficerbyVB", methods=['GET'])
@app.route("/Morakot/API/getOfficerbyVB", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getOfficerbyVB():
	VBID 		= request.args.get('VBID')
	OfficerID 	= ''
	OfficerName = ''
	VBObj = MKT_VB.query.filter(MKT_VB.ID == VBID).first()
	if VBObj:
		OffficerObj 	= MKT_OFFICER.query.filter(MKT_OFFICER.ID == VBObj.OfficerID).first()
		if OffficerObj:
			OfficerID 	= OffficerObj.ID
			OfficerName = OffficerObj.ID + " - " + OffficerObj.LastName + " " + OffficerObj.FirstName
	return jsonify(
				OfficerID 		= OfficerID,
				OfficerName 	= OfficerName
				)

@app.route("/Morakot/getTemplateBasefromProduct", methods=['GET'])
@app.route("/Morakot/API/getTemplateBasefromProduct", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getTemplateBasefromProduct():
	dic = {}
	LoanProductID 	= request.args.get('LoanProduct', '')
	RepMode			= request.args.get('RepMode', '')
	if RepMode == '6' or RepMode == '': #6: Template Base, '': For RepMode didn't pass in
		LoanProductObj 	= MKT_LOAN_PRODUCT.query.filter(MKT_LOAN_PRODUCT.ID == LoanProductID).first()
		if LoanProductObj:
			TemplateBase = str(LoanProductObj.TemplateBase).split()
			if TemplateBase:
				result = MKT_TEMPLATE_BASE.query.filter(MKT_TEMPLATE_BASE.ID.in_(TemplateBase))
				for row in  result:
					dic[row.ID] = row.ID +' - '+row.Description

	return jsonify(results=dic)