from app.mktcore.wtfimports 		import *
from app.mktcore.imports 			import *
from flask 							import request
import json
import requests
import app.tools.mktsetting 		as mktsetting
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)


class API_REQUEST(object):
	"""docstring for API_REQUEST
		* Post form data or insert record
		* Post Authorize record
	"""
	SSL_VERIFY = mktsetting.getAppSetting("SSL_VERIFY")
	SSL_VERIFY = False if SSL_VERIFY=='N' else True
	
	def postForm(self,url="",data="",Branch="",Inputter="",headers=""):
		"""
		def:
			posting data to specifict form by url posting 
		param:
			- url:
				- type (str):fully url for form posting.ex http://127.0.0.1:5000/Morakot/API/Customer/
			-data :
				- type (Dict): dict data that dict key is match with model
			-headers :
				- type (Dict):it require when post data to endpoint.
		return:
			-type (turple):(response,status_code)
			**note:status_code=200 successfull posting from,
					 status_code=400 bad request,not success posting form
					 status_code=3xx redirect url 
		"""
		"""header"""
		if not headers:
			headers = {	
						'authorizationkey': session.get(session.get("getLogInID"),""),
						'accept': "application/json",
						'content-type': "application/json"
						}

		"""In default,Branch and Inputer will get from user login to insert to record, 
			but we can override it by pass by param Branch and Inputter """
		if Branch:
			# print "Branch",Branch
			headers.update({'OverrideBranch':Branch})
		if Inputter:
			# print "Inputter",Inputter
			headers.update({'OverrideInputter':Inputter})
		# print "session",session
		"""here post add new record to table"""
		r = 	requests.request("POST",url,data= json.dumps(data),headers=headers,verify=self.SSL_VERIFY)
		return r.text,r.status_code

	def postAuthorize(self,url="",headers="",Branch="",Inputter=""):
		"""		
		def:
			posting authorize record by http request 
		param:
			- url:
				- type (str):fully url for form posting.ex http://127.0.0.1:5000/Morakot/API/Customer/CU0001
			-headers :
				- type (Dict):it require when post data to endpoint.
		return:
			-type (turple):(response,status_code)
			**note:status_code=2xx successfully http request or  authorize record,
					 status_code=4xx bad request or fial request,authorize record not success
					 status_code=3xx redirect to new url
					 status_code=5xx internal server error
		"""
		"""In default,Branch and Inputer will get from user login to insert to record, 
			but we can override it by pass by param Branch and Inputter """

		if not headers:
			headers = {	
					'authorizationkey': session.get(session.get("getLogInID"),""),
					'accept': "application/json",
					'content-type': "application/json"
					}

		"""here post authorize record"""
		r = requests.api.request("GET",url,headers=headers,verify=self.SSL_VERIFY)
		
		return r.text,r.status_code

	def getRequestLogin(self,**kwargs):
		"""
		Get token
		"""
		Username = kwargs.get("Username")
		Password = kwargs.get("Password")

		url 	= "%s/Morakot/API/Login" % self.getMorakotBaseUrl()

		payload = {
					"LogInName":Username,
					"Password":Password}

		headers = {"Content-Type":"application/json",
					"Accept":"application/json"}

		r = requests.request("POST",url,data= json.dumps(payload),headers=headers,verify=self.SSL_VERIFY).text
		r = eval(r)
		token = r.get("token")
		return token

	def getDataFromAPI(self, url=""):
		try:
			Token 			= getToken()
			Headers 		= { 'authorizationkey': Token, 'accept': "application/json", 'content-type': "application/json" }
			Url 				= "%s/Morakot/API/%s" % (request.url.split("/Morakot")[0], url)
			Url 				= Url.replace("/Morakot/API//","/Morakot/API/")
			Response 		= json.loads(requests.get(url=Url,headers=Headers,verify=self.SSL_VERIFY).text)
			return Response
		except Exception as e:
			print e
			return None
			
	def getMorakotBaseUrl(self,**kwargs):
		DOMAIN 	 = mktsetting.getAppSetting("DOMAIN")
		HTTP  	 = mktsetting.getAppSetting("PROTOCOL")

		return "%s://%s" % (HTTP,DOMAIN)

api_request =	API_REQUEST()



		
