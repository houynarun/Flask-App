from app.mktcore.imports 		import *
from app.Account.models 		import *
import app.tools.user 			as mktuser

def validateTargetDrCr(DrAccount="",CrAccount="",TargetBranch="",TargetDrCr="",Branch=""):
	CurrentBranch 	= mktuser.getCurrentBranch() if not Branch else Branch
	DrAccountObj 	= MKT_ACCOUNT.query.get(DrAccount)
	CrAccountObj 	= MKT_ACCOUNT.query.get(CrAccount)

	if TargetBranch == "__None":
		TargetBranch = ""
	if TargetDrCr == "__None":
		TargetDrCr = ""

	if TargetBranch and not TargetDrCr:
		return False, "This field is required."

	if not TargetBranch and TargetDrCr:
		return False, "This field is not required."

	AllowTargetDrCr = ""

	if DrAccountObj and CrAccountObj:
		if DrAccountObj.Branch != CurrentBranch:
			AllowTargetDrCr = "Dr"
		if CrAccountObj.Branch != CurrentBranch:
			AllowTargetDrCr = "Cr"
	elif DrAccountObj and not CrAccountObj:
		if DrAccountObj.Branch != CurrentBranch:
			AllowTargetDrCr = "Dr"
	elif not DrAccountObj and CrAccountObj:
		if CrAccountObj.Branch != CurrentBranch:
			AllowTargetDrCr = "Cr"

	print AllowTargetDrCr, TargetDrCr

	if AllowTargetDrCr and TargetDrCr != AllowTargetDrCr:
		return False, "TargetDrCr must be %s." % AllowTargetDrCr
	
	return True,""

def validateTargetBranch(DrAccount="",CrAccount="",TargetBranch="",TargetDrCr="",Branch=""):
	CurrentBranch 	= mktuser.getCurrentBranch() if not Branch else Branch
	DrAccountObj 	= MKT_ACCOUNT.query.get(DrAccount)
	CrAccountObj 	= MKT_ACCOUNT.query.get(CrAccount)

	if TargetBranch == "__None":
		TargetBranch = ""

	AllowTargetBranch = []
	Result = True, ""

	if DrAccountObj and CrAccountObj:
		AllowTargetBranch.append(DrAccountObj.Branch)
		AllowTargetBranch.append(CrAccountObj.Branch)
		if DrAccountObj.Branch == CurrentBranch and CrAccountObj.Branch == CurrentBranch:
			if TargetBranch and TargetBranch !="__None":
				return False, "This field is not required."
		else:
			if not TargetBranch:
				return False, "This field is required."

		if CurrentBranch not in AllowTargetBranch:
			return False, "One of account choosen must be in current branch %s." % CurrentBranch

	elif DrAccountObj and not CrAccountObj:
		DrBranch = DrAccountObj.Branch
		if DrBranch != CurrentBranch:
			AllowTargetBranch.append(DrBranch)
		else:
			pass
	elif not DrAccountObj and CrAccountObj:
		CrBranch = CrAccountObj.Branch
		if CrBranch != CurrentBranch:
			AllowTargetBranch.append(CrBranch)
		else:
			pass
	
	if len(AllowTargetBranch) > 0:#not all branch allow
		if TargetBranch and TargetBranch not in AllowTargetBranch:
			return False, "Target Branch must be in %s. " % AllowTargetBranch
	else:#all branch allow to be in target branch
		pass	

	if TargetBranch == CurrentBranch:
		return False, "Target Branch cannot be current branch %s." % CurrentBranch

	return Result