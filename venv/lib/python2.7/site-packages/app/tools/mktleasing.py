
from decimal 						import *

from app 							import db
import mktaccounting 				as mktaccounting
import mktmessage 					as mktmessage
import app.tools.mktsetting 		as mktsetting
import mktmoney 					as mktmoney



from app.LoanContract.models		import MKT_LOAN_CONTRACT, MKT_LOAN_CONTRACT_INAU
from app.LoanProduct.models 		import MKT_LOAN_PRODUCT
from app.Tax.models 				import MKT_TAX
from app.Vendor.Vendor.models		import MKT_VENDOR
from app.Account.models 			import MKT_ACCOUNT


def leasingDisbursement(LoanContract,Inputter,Createdon,Authorizer,Authorizeon):
	try:
		if not LoanContract:
			Message = "Loan Contract does not found"
			return False,Message

		ID 			 	= LoanContract.ID

		LoanProduct  	= MKT_LOAN_PRODUCT.query.get(LoanContract.LoanProduct)
		Vendor 			= MKT_VENDOR.query.get(LoanContract.Vendor)

		Account 		= LoanContract.Account
		Branch 			= LoanContract.Branch
		Currency 		= LoanContract.Currency
		ValueDate 		= LoanContract.ValueDate

		AccCat 			= MKT_ACCOUNT.query.get(Account).AccCategory


		#Check if Vendor is existed in Loan Contract
		if not Vendor:
			Message = "Loan Contract does not found Vendor!"
			return False,Message

			
		#Check if LoanProduct is existed Loan Contract
		if not LoanProduct:
			Message = "Loan Contract does not found LoanProduct!"
			return False,Message

		
		if not LoanProduct.DownPaymentCategory:
			Message = "Loan Product does not found DownPayment Category!"
			return False,Message

		Tax 	= MKT_TAX.query.get(LoanProduct.Tax)


		#Check if Tax is existed in Loan Contract
		if not Tax:
			Message = "Loan Product Tax does not found!"
			return False,Message

		#Post Downpayment
		if float(LoanContract.DownPayment) > 0:

			Transaction = mktsetting.getAppSetting('DownPayment_Transaction')

			for i in range(0,2):
				if i==0:
					DrCr = "Dr"
					Mode = "Direct"
					Category = LoanProduct.DownPaymentCategory
					Amount = Decimal(LoanContract.DownPayment)
					Note	= "Transfer Downpayment Balance to DDA."
					GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
				else:
					DrCr = "Cr"
					Mode = ""
					Category = AccCat
					Amount = Decimal(LoanContract.DownPayment)
					Note	= "Transfer Downpayment Balance to DDA."
					GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
				mktaccounting.postAccounting(
					"AUTH", 				# Status
					"0", 					# Curr
					Inputter,				# Inputter
					Createdon, 				# Createdon
					Authorizer,				# Authorizer
					Authorizeon,			# Authorizeon
					"", 					# AEID
					Account,				# Account
					Category,				# Category
					Currency,				# Currency
					DrCr,					# DrCr
					Amount, 				# Amount
					"LC",					# Module
					Transaction, 			# Transaction
					ValueDate, 				# TransactionDate
					ID, 					# Reference
					Note, 					# Note
					"", 					# JNID
					Branch,					# Branch
					GL_KEYS,				# GL_KEYS
					Mode 					# Mode check to insert Journal for category
				)
			#Process when Vendor Registered VAT
			if Vendor.VATRegistered == "Y":
				#Post VAT on Down Payment
				Amount = Decimal(LoanContract.VATOutputOnDownPayment)
				if float(Amount) > 0:
					for i in range(0,2):

						Transaction = Tax.VATOutputTransaction

						if i==0:
							DrCr = "Dr"
							Mode = "Direct"
							Category = Tax.VATInputCategory
							Note = "VAT Output on Down Payment."
							GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
						else:
							DrCr = "Cr"
							Mode = "Direct"
							Category = Tax.Category
							Note = "VAT Output on Down Payment."
							GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
						mktaccounting.postAccounting(
							"AUTH", 				# Status
							"0", 					# Curr
							Inputter,				# Inputter
							Createdon, 				# Createdon
							Authorizer,				# Authorizer
							Authorizeon,			# Authorizeon
							"", 					# AEID
							"",						# Account
							Category,				# Category
							Currency,				# Currency
							DrCr,					# DrCr
							Amount, 				# Amount
							"LC",					# Module
							Transaction, 			# Transaction
							ValueDate, 				# TransactionDate
							ID, 					# Reference
							Note, 					# Note
							"", 					# JNID
							Branch,					# Branch
							GL_KEYS,				# GL_KEYS
							Mode 					# Mode check to insert Journal for category
						)
		#Process when Vendor Registered VAT
		if Vendor.VATRegistered == "Y":
			#Post VAT Input and Accr Output 
			Amount = Decimal(LoanContract.VATOutputOnLoan)
			if float(Amount) > 0:
				for i in range(0,2):
					if i==0:
						DrCr = "Dr"
						Mode = "Direct"
						Category = Tax.VATInputCategory
						Transaction = Tax.VATInputTransaction
						Note = "Accur Loan VAT Output."
						GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
					else:
						DrCr = "Cr"
						Mode = "Direct"
						Category = Tax.AccrVATOutputCategory
						Transaction = Tax.VATInputTransaction
						Note = "Accur Loan VAT Output."
						GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
					mktaccounting.postAccounting(
						"AUTH", 				# Status
						"0", 					# Curr
						Inputter,				# Inputter
						Createdon, 				# Createdon
						Authorizer,				# Authorizer
						Authorizeon,			# Authorizeon
						"", 					# AEID
						"",						# Account
						Category,				# Category
						Currency,				# Currency
						DrCr,					# DrCr
						Amount, 				# Amount
						"LC",					# Module
						Transaction, 			# Transaction
						ValueDate, 				# TransactionDate
						ID, 					# Reference
						Note, 					# Note
						"", 					# JNID
						Branch,					# Branch
						GL_KEYS,				# GL_KEYS
						Mode 					# Mode check to insert Journal for category
					)

		#Transfer Balance from Drawdown to Vendor
		Amount = Decimal(LoanContract.AssetPrice)
		
		if float(Amount) > 0:
			for i in range(0,2):	
			
				Transaction = mktsetting.getAppSetting('VENDOR_TRAN')

				if i==0:
					DrCr = "Dr"
					Mode = ""
					Category = AccCat
					Note = "Transfer Balance to Vendor."
					GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
				else:
					DrCr = "Cr"
					Mode = "Direct"
					Category = Vendor.CreditCategory
					Note = "Transfer Balance to Vendor."
					GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
				mktaccounting.postAccounting(
					"AUTH", 				# Status
					"0", 					# Curr
					Inputter,				# Inputter
					Createdon, 				# Createdon
					Authorizer,				# Authorizer
					Authorizeon,			# Authorizeon
					"", 					# AEID
					Account,				# Account
					Category,				# Category
					Currency,				# Currency
					DrCr,					# DrCr
					Amount, 				# Amount
					"LC",					# Module
					Transaction, 			# Transaction
					ValueDate, 				# TransactionDate
					ID, 					# Reference
					Note, 					# Note
					"", 					# JNID
					Branch,					# Branch
					GL_KEYS,				# GL_KEYS
					Mode 					# Mode check to insert Journal for category
				)
		return True, "Success"
	except Exception, e:
		return False, str(e)



def VATCollection(ID,VendorID,TaxID,Currency,Amount,Inputter,Createdon,Authorizer,Authorizeon,Date,Branch):
	try:
		
		Vendor 		= MKT_VENDOR.query.get(VendorID)

		if not Vendor:
			Message = "Loan Contract does not found Vendor!"
			return False,Message

		Tax 		= MKT_TAX.query.get(TaxID)

		if not Tax:
			Rate = 0.00
		else:
			Rate = float(Tax.Rate)


		#Process when Vendor Registered VAT
		if Vendor.VATRegistered == "Y":

			# Amount = (float(Amount)*10)/110
			
			Amount = (float(Amount)*Rate)/(100+Rate)

			Amount = mktmoney.toMoney(float(Amount), mktmoney.getCurrencyObj(Currency))
			Amount = Amount.replace(',','')

			if float(Amount) > 0:
			#Post VAT Input and Accr Output 
				for i in range(0,2):
					if i==0:
						DrCr = "Dr"
						Mode = "Direct"
						Amount = Decimal(Amount)
						Category = Tax.AccrVATOutputCategory
						Transaction = Tax.VATOutputTransaction
						GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
					else:
						DrCr = "Cr"
						Mode = "Direct"
						Amount = Decimal(Amount)
						Category = Tax.Category
						Transaction = Tax.VATOutputTransaction
						GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
					mktaccounting.postAccounting(
						"AUTH", 				# Status
						"0", 					# Curr
						Inputter,				# Inputter
						Createdon, 				# Createdon
						Authorizer,				# Authorizer
						Authorizeon,			# Authorizeon
						"", 					# AEID
						"",						# Account
						Category,				# Category
						Currency,				# Currency
						DrCr,					# DrCr
						Amount, 				# Amount
						"LC",					# Module
						Transaction, 			# Transaction
						Date, 					# TransactionDate
						ID, 					# Reference
						"", 					# Note
						"", 					# JNID
						Branch,					# Branch
						GL_KEYS,				# GL_KEYS
						Mode 					# Mode check to insert Journal for category
					)
		else:
			# Amount = float(Amount)*0.1
			
			Amount = (float(Amount)*Rate)/100

			Amount = mktmoney.toMoney(float(Amount), mktmoney.getCurrencyObj(Currency))
			Amount = Amount.replace(',','')

			if float(Amount) > 0:
				for i in range(0,2):
					if i==0:
						DrCr = "Dr"
						Mode = "Direct"
						Amount = Decimal(Amount)
						Category = Tax.TaxExpenseCategory
						Transaction = Tax.VATOutputTransaction
						GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
					else:
						DrCr = "Cr"
						Mode = "Direct"
						Amount = Decimal(Amount)
						Category = Tax.Category
						Transaction = Tax.VATOutputTransaction
						GL_KEYS = mktaccounting.getConsolKey(Category, Currency, "", "LC", "", "", "", "", "", "", "", "", "")
					mktaccounting.postAccounting(
						"AUTH", 				# Status
						"0", 					# Curr
						Inputter,				# Inputter
						Createdon, 				# Createdon
						Authorizer,				# Authorizer
						Authorizeon,			# Authorizeon
						"", 					# AEID
						"",						# Account
						Category,				# Category
						Currency,				# Currency
						DrCr,					# DrCr
						Amount, 				# Amount
						"LC",					# Module
						Transaction, 			# Transaction
						Date, 					# TransactionDate
						ID, 					# Reference
						"", 					# Note
						"", 					# JNID
						Branch,					# Branch
						GL_KEYS,				# GL_KEYS
						Mode 					# Mode check to insert Journal for category
					)
		return True, "Success"

	except Exception, e:
		return False, str(e)



