from 	systemhealthcheck 			import  *
from 	app.Branch.models 			import MKT_BRANCH
from 	app.ConsolBalance.models    import MKT_CONSOL_BALANCE
import app.tools.mktmoney as mktmoney

class ValidateProfitCurrentYear(SystemHealthCheck):
	def __init__(self):
		self.ItemName 		= 	"ValidateProfitCurrentYear"
		self.Title 			= 	"Profit Current Year"
		self.Status 		= 	"F"
		self.Level 			= 	"Warning"
		self.Code 			= 	"ACG-W002"
		self.Description	= 	""
		self.ErrorDetail 	= 	{}
		self.Suggestion 	= 'N'

	@staticmethod
	def runValidate(self):
		AccSetting 	= 	mktsetting.getAccSetting()
		BranchObj 	=	MKT_BRANCH.query.all()
		Currency 	= 	AccSetting.BaseCurrency
		ConsoleKey  =   mktaccounting.getConsolKey(AccSetting.CurrYearCat, Currency)
		CBObj 		=	MKT_CONSOL_BALANCE.query 
		CurrencyObj 		= 	mktmoney.getCurrencyObj(Currency)

		TotalError = 0
		for row in BranchObj:
			CurrencyDic = {}
			BranchError = 0
			Message = []
			CBObjByBranch = CBObj.filter(MKT_CONSOL_BALANCE.Branch==row.ID,
										 MKT_CONSOL_BALANCE.ID == ConsoleKey).first()
			if CBObjByBranch:
				MonthlyProfitAmount = mktmonthend.getProfitAmount(1,row.ID)
				LCYCurrentPrevMonthBal = CBObjByBranch.LCYCurrentPrevMonthBal
				
				if str(round(LCYCurrentPrevMonthBal, 2)) != str(round(MonthlyProfitAmount, 2)):
					Amount = (float(LCYCurrentPrevMonthBal)-float(MonthlyProfitAmount))
					TotalAmount = mktmoney.toMoney(Amount, CurrencyObj)
					Msg		= 	"Profit Current Year in consolidate balance is not equal: %s %s" % (TotalAmount, Currency)
					Message.append(Msg)
					BranchError += 	len(Message)
					CurrencyDic.update({
										ConsoleKey:{
												'Message': Message,
												'Total': len(Message)
											},
											'Total': BranchError
										})
										
			if CurrencyDic:
				TotalError += int(CurrencyDic.get('Total', 0))
				self.ErrorDetail.update({
							row.ID:CurrencyDic,
							'Total':TotalError
						})
		return self.ErrorDetail
