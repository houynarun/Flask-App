import 	app.tools.mktdate 			as mktdate
import 	app.tools.mkttool 			as mkttool

import 	app.tools.mktsetting 		as mktsetting
import 	app.tools.mktaccounting 	as mktaccounting
import  app.tools.mktmonthend       as mktmonthend
import 	app.tools.mktmoney 			as mktmoney
import 	decimal 					as decimal

from 	app.mktcore.imports 		import *
from 	app 						import db
from 	sqlalchemy 					import or_, func


from app.SystemHealthCheck.models 	import *
import time

try:
	BankDateObj  	= mktdate.getBankDateObj()
	LastSystemDate 	= BankDateObj.LastSystemDate
except Exception, e:
	LastSystemDate = ''
DATE_NOW		= time.strftime('%Y-%m-%d %H:%M:%S')

class SystemHealthCheck(object):

	def __init__(self):
		self.ItemName 		 = 	""
		self.Title 			 = 	""
		self.Status 		 = 	""
		self.Level 			 = 	""
		self.Code 			 = 	""
		self.Description	 = 	""
		self.ErrorDetail 	 = 	{}
		self.Suggestion 	 =  'N'

	def __insertToDB(self,GetValidate=None):
		""" method to insert data to database """
		if GetValidate:
			SystemHealthCheck 	= 	MKT_SYSTEM_HEALTH_CHECK(
										Branch 			= 		"SYS",
										Curr 			=		'0',
										Inputter		=		'System',
										Createdon 		=	 	DATE_NOW,
										Authorizer		=		'System',
										Authorizeon		=	 	DATE_NOW,
										ItemName 		=		self.ItemName,
										Title 			=		self.Title,
										SystemDate  	= 		LastSystemDate,
										Status 			=		self.Status,
										Level 			= 		self.Level,
										Code 			= 		self.Code,
										Description 	=		self.Description,
										ErrorDetail 	= 		str(self.ErrorDetail),
										Suggestion 		=		self.Suggestion
										)
			db.session.add(SystemHealthCheck)
			db.session.commit()

	def __printConsole(self,Debug=False,GetValidate=None):
		""" method to print error on screen """
		if Debug:
			# To show amount in console.
			print "================================"
			# print "LO in Console:\t", NewConsoleObj
			# print "LO of Loans:\t", NewLoanContractObj
			# print "RESULT:\t\t", NewConsoleObj == NewLoanContractObj
		else:
			if GetValidate:
				Message = 'Not Healthy'
			else:
				Message = "Healthy"
			print '%-50s | %-15s' %(self.Title, Message)

	@staticmethod
	def runValidate(self):
		""" Override this method"""
		return {}

	@staticmethod
	def runSuggestSolution(**kwargs):
		""" Override this method"""
		return {}

	def process(self):
		""" main method to run on batchjob"""
		GetValidate = self.runValidate(self)
		self.__insertToDB(GetValidate=GetValidate)
		self.__printConsole(GetValidate=GetValidate)