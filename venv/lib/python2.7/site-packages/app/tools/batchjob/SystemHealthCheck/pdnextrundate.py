from systemhealthcheck import *
from app.PD.models import MKT_PAST_DUE, MKT_PD_DATE
from app.Branch.models import MKT_BRANCH
from app.Currency.models import MKT_CURRENCY


class ValidatePDNextRunDate(SystemHealthCheck):
	def __init__(self):
		self.ItemName = "ValidatePDNextRunDate"
		self.Title = "Loan Contract Past Due Next Run Date"
		self.Status = "F"
		self.Level = "Critical"
		self.Code = "LOA-C002"
		self.Description = ""
		self.ErrorDetail = {}
		self.Suggestion  = 'N'

	@staticmethod
	def runValidate(self):
		BankDate = mktdate.getBankDate()
		BranchObj = MKT_BRANCH.query.all()
		CurrencyObj = MKT_CURRENCY.query.all()
		PDObj = db.session.query(MKT_PAST_DUE.ID,MKT_PD_DATE.NextRunDate).\
								join(MKT_PD_DATE, MKT_PAST_DUE.ID==MKT_PD_DATE.ID).\
								filter(MKT_PD_DATE.NextRunDate < str(BankDate),
								MKT_PD_DATE.TotODAmount > 0, 
								MKT_PD_DATE.DueDate >= str(BankDate))

		
		TotalError = 0
		for row in BranchObj:
			CurrencyDic = {}
			BranchError = 0
			for col in CurrencyObj:
				PDObjByBranch = PDObj.filter(MKT_PD_DATE.Branch == row.ID, MKT_PAST_DUE.Currency == col.ID)

				if PDObjByBranch.all():
					PDID = ["%s (%s)"%(item.ID,item.NextRunDate) for item in PDObjByBranch]
					Message = PDID
					BranchError += len(Message)
					CurrencyDic.update({
											col.ID: {
												'Message': Message,
												'Total': len(Message)
											},
											'Total': BranchError
										})

			if CurrencyDic:
				TotalError += int(CurrencyDic.get('Total', 0))
				self.ErrorDetail.update({
									row.ID: CurrencyDic,
									'Total': TotalError
								})
		return self.ErrorDetail
