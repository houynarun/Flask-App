from app.tools.mktpaymentgateway 	import CLS_PAYMENT_INFO
from app.Currency.models 			import *

import app.DataEnquiry.views 		as dataenquiry 
import app.tools.mktdate 			as mktdate
import app.tools.mktsetting 		as mktsetting

# wing payment gateway
class CLS_WING(CLS_PAYMENT_INFO):
	"""docstring for ClassName"""
	def __init__(self):
		super(CLS_PAYMENT_INFO, self).__init__()

	def wingResponse(self,**kwarge):
		"""
		-def : this func return information of wing first and second request data, payment gateway data  as dictionary format
		-param:
			-kwargs type(dict):contains gateway type and wing request body(json data).
		-return:
			-rtype:dictionary 
			-data:{"DictResponse":{format wing first and second response format},
				   "DictGateway": {dict data for posting gateway payment}}
			- StatusCode : define that validate is successs or not
		
		"""

		CurrentDate = mktdate.getDateTimeNow()
		GatewayType = kwarge.get("GatewayType")
		Dict 		= kwarge.get("DictRequest") # wing reauest data
		Account 	= Dict.get("reference_number")

		# block check auto format dda or not
		AutoCompleteDDA = mktsetting.getAppSetting("AUTO_COMPLETE_DDA") # auto format dda option setting
		if not AutoCompleteDDA:
			Account   = dataenquiry.formatDrawdownAccount(Account)
		else:
			if AutoCompleteDDA=="Y":
				Account   = dataenquiry.formatDrawdownAccount(Account)
			else:
				Account = "DD"+str(Account)
		# end block 
		Transaction 	= 	1 # we define that transaction 1 refer to check validate request
		GatewayStatus 	= 	2 # 1 refer to client queue request to our system and 2 client success payment or success request
			
		ResultDict 	 = {}
		DictResponse = {}
		DictGateway  = {}		

		DictPayment,Status 	= self.getPaymentInfo(Account)
		AccountInfo   		= DictPayment.get("AccountInfo")
		IsActive 			= DictPayment.get("IsActive")
		"""
		This dictionary DictGateway used to insert to table payment gateway
		"""
		DictGateway  = self.getDictPaymentGateway()
		DictGateway.update({
							"Account"		: AccountInfo.get("ID"),
							"Amount"		: Dict.get("amount"),
							"Currency"		: Dict.get("currency","").upper(),
							"GatewayStatus"	: GatewayStatus,
							"GatewayType"	: "1",
							"Mobile1"		: Dict.get("request_meduim_id"),
							"Attribute1"	: Dict.get("request_meduim"),
							"Attribute2"	: "Wing payment at %s"%CurrentDate,
							"Session"		: self.generateSessionKey(),
							"Operation" 	: "D",
							"Purpose"		: "1"})
		"""
		This is wing reponse format
		"""
		DictResponse.update({ 
							"response_code"		: "",
							"response_message"	: "",
							"reference_number"	: "",
							"customer_name"		: "",
							"amount"			: "",
							"currency"			: "",
							"session_id"		: self.generateSessionKey(),
							"attr_1_name"		: "",
							"attr_1_value"		: "",
							"attr_2_name"		: "",
							"attr2_value"		: ""
							})

		"""
			Status= True or False 
				- Ture : exist account
				- False: not exist account
		"""
		if Status:
			"""Has DictPayment meant that has drawdown account,success"""
			FirstNameEn 	=	""
			LastNameEn 		= 	""
			CustomerInfo 	= 	DictPayment.get("CustomerInfo")
			Reference 		= 	""
			StatusCode 		= 	200
			Message   		= 	"Transaction is successfully"
			WingCurrency 	= Dict.get("currency")
			Currency 		= AccountInfo.get("Currency")
			Amount 			= Dict.get("amount") # Amount to pay
			WingOptionResponse= mktsetting.getAppSetting('WING_OPTION_RESPONSE') # setting for success/fail respont when dda not found in system
			
			# amount validate
			try:
				Amount = float(Amount)
			except Exception as e:
				StatusCode 	= 406
				GatewayStatus 	= 3 # fail
				Message 	= "Amount invalid type."

			#currency validate
			if WingOptionResponse== 'N':
				if WingCurrency.upper()!= Currency:
					StatusCode 		= 406
					GatewayStatus 	= 3 # fail
					Message   		= "Currency is invalid choice"
					Currency 		= WingCurrency
			else:
				# if DDA have in system will response Currency
				if Currency:
					if WingCurrency.upper()!= Currency:
						StatusCode 		= 406
						GatewayStatus 	= 3 # fail
						Message   		= "Currency is invalid choice"
						Currency 		= WingCurrency
				# DDA don't have in system,currency will be none
				else:

					Currency 	= WingCurrency
			#end validate currency

			if CustomerInfo:
				FirstNameEn  = CustomerInfo.get("FirstNameEn")
				LastNameEn 	 = CustomerInfo.get("LastNameEn")
			else :
				ReserveName= mktsetting.getAppSetting('PAYMENT_GATEWAY_CUSTOMER')
				if ReserveName:
					LastNameEn = ReserveName
					FirstNameEn = ""
				
			if "transaction_id" in Dict.keys():
				"""
				second request wing provide tansaction id
				"""
				Reference 	 	= Dict.get("transaction_id")
				Transaction 	= 2 
				GatewayStatus 	= 1 # change gateway status to #1 queue record

			#response wing request
			DictResponse.update({ 
									"customer_name"		: LastNameEn +" " +FirstNameEn,
									"amount"			: Amount,
									"currency"			: Currency,
							})

			#dict for post to gateway payment form
			#GatewayType =1 refer to wing

			DictGateway.update({"Reference":Reference,
								"GatewayStatus"	: str(GatewayStatus),
								"Branch"		: AccountInfo.get("Branch"),
								"Amount"		: Amount,
								"Purpose" 		: str(Transaction),# The purpose refer to request transaction validat dda or paymnet
								"Attribute8" 	: Message })

		else:
			StatusCode 	= 	406
			Message 	= 	"ID: %s not found in system."%Account[2:]
			if IsActive==False:
				Message  = "ID: %s has been closed."%Account[2:]
			DictResponse.update(Dict)
		
		DictResponse.update({ 	"reference_number"	: Dict.get("reference_number"),
								"response_code":StatusCode,
								"response_message":Message})
		# result
		ResultDict.update({"DictResponse":DictResponse,
						   "DictGateway":DictGateway,
						   "GatewayType":GatewayType,
						   "Transaction":Transaction})

		return ResultDict, StatusCode
