from app.mktcore.imports import *
from .forms import *
from .gatewaytransfer import *
from app.FundTransfer.models import *
from flask import request
from flask_accept  import accept
import json
from app.tools.mktpaymentgateway import CLS_PAYMENT_INFO
from app.PaymentGateway.Wing 	import CLS_WING
from app.PaymentGateway.Payment import CLS_PAYMENT_GATEWAY


registerCRUD(admin, '/PaymentGateway', 'PaymentGateway', FRM_PAYMENT_GATEWAY, [MKT_PAYMENT_GATEWAY])
registerCRUD(admin, '/GatewayTransfer', 'GatewayTransfer', FRM_GATEWAY_TRANSFER, [MKT_FUND_TRANSFER])

@app.route("/Morakot/API/PaymentGateway/Agent/<string:GatewayType>",methods=['POST'])
@login_required
@checkLogOutSession
def paymentGateway(GatewayType):

	Request = request.get_json()
	"""
	we do not check DictResponse has data or not. because api already protected it
	"""
	
	# payementinfo = CLS_PAYMENT_INFO()
	response = ""
	# f= open("guru99.txt","w+")
	if GatewayType == "Wing":
		# Account   = Request.get("reference_number")
		#call wing class and pass param into contructor
		try:
			wing 			 = CLS_WING()
			DictWingResponse = wing.wingResponse(GatewayType=GatewayType,DictRequest=Request)
			Result,Code 	 = wing.postPayment(DictWingResponse)# post
			response 		 = wing.responseFormat(Result, Code) # response format
			del wing #remove object 

		except Exception as e:
			message = {"response_code":500,
					   "response_message":"Interal server error.%s"%str(e)
					   }
			response 		 = wing.responseFormat(message, 500)
			return response

	elif GatewayType=="TrueMoney":
		pass
		# Account   = DictResponse.get("true")\

	elif GatewayType=="Payment":
		try:
			payment 		= CLS_PAYMENT_GATEWAY()
			DictPayment 	= payment.gatewayResponse(GatewayType=GatewayType,DictRequest=Request)
			Result,Code  	= payment.postPayment(DictPayment)
			response 		= payment.responseFormat(Result, Code)
			del payment
		except Exception as e:
			message = {"StatusCode":500,
					   "Message":"Interal server error.%s"%str(e)
					   }
			response 		 = payment.responseFormat(message, 500)
			return response
	else:
		"""
		-request incorrect url
		-return page not found
		"""
		message = {"message": ["Page not found!"]}
		
		return payementinfo.responseFormat(message,404)

	return response
