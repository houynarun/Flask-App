from app.mktcore.imports import *
from .forms 					import *
from .models 					import *
from flask 						import request,flash,jsonify,redirect
from app 						import app,db
from decimal 					import *
from app.LoanContract.models 	import *
from app.LoanProduct.models 	import *

import time
import app.tools.mktloan		as mktloan
import app.tools.mktdate 		as mktdate

from flask import flash, render_template

@app.route('/Morakot/ClearBJStat', methods=['GET'])
@app.route('/Morakot/API/ClearBJStat', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def routeClearBJStat():
	try:
		CurrentBankDate = str(mktdate.getBankDate())
		QueryObj = MKT_BJ_STAT.query.\
						filter(MKT_BJ_STAT.SystemDate == CurrentBankDate).first()

		if QueryObj:

			QueryObj = MKT_BJ_STAT.query.filter(MKT_BJ_STAT.SystemDate == CurrentBankDate).\
										delete(synchronize_session='fetch')
			db.session.commit()
			flash("Clear table MKT_BJ_STAT was successfully.")
			open(app.config.get("EOD_LOG_PATH")+"resume.log", 'w').close()

		else:

			flash("No record to clear.")

		return render_template("maintenance/clear-bj.html")

	except Exception, e:

		db.session.rollback()
		return "%s"%e


@app.route('/Morakot/setLCDisbursement', methods=['GET'])
@app.route('/Morakot/API/setLCDisbursement', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def routesetLCDisbursement():
	
	Message = fixsetLCDisbursement()
	Output = ""
	for row in Message:
		Output+="%s</br>"%row
	
	return Output

def fixsetLCDisbursement():
	try:
		Message = []
		CurrentBankDate = str(mktdate.getBankDate())
		LoanObj = MKT_LOAN_CONTRACT.query.filter(MKT_LOAN_CONTRACT.DisbursedStat=="N").\
										filter(MKT_LOAN_CONTRACT.ValueDate==CurrentBankDate)
		if LoanObj.all():
			for row in LoanObj:
				LoanID = str(row.ID)
				mktloan.setLCDisbursement(LoanID,Resource="AUTH")
				Message.append("Loan %s was disbursed successfully." % LoanID)
			db.session.commit()

		else:
			Message.append("No record to disbursed.")
		return Message
	except Exception, e:
		db.session.rollback()
		Message = "%s"%e
		return Message

@app.route('/Morakot/LoanOutstandingAmt/', methods=['GET'])
@app.route('/Morakot/API/LoanOutstandingAmt/', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getLoanOutstandingAmt():
	
	Output 	= 	[]
	Branch 	=	request.args.get('Branch') if 'Branch' in request.args else 'HO'
	Obj 	=	MKT_LOAN_CONTRACT.query.\
				filter(MKT_LOAN_CONTRACT.Branch == Branch).\
				all()

	if Obj:
		for item in Obj:
			if float(item.OutstandingAmount) > float(item.Disbursed):
				Output.append(item.ID)
	
	return "%s" %Output

@app.route('/Morakot/ClearSystemHealthCheck', methods=['GET'])
@app.route('/Morakot/API/ClearSystemHealthCheck', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def routeClearSystemHealthCheckLog():
	SysHealthCheck 	= app.config.get("EOD_LOG_PATH") + "log/eod/syshealthcheck.log"
	try:
		ObjFile = open(SysHealthCheck, 'r+')
		if ObjFile:
			ObjFile.truncate()
			flash("System health check log cleared.")
		else:
			flash("Log file not found.")
		return redirect("/Morakot/")
	except Exception as e:
		return '%s' %e
	else:
		pass
	finally:
		pass