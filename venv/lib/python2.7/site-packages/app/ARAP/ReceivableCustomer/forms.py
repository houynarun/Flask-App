from app.mktcore.wtfimports 						import *
from .models 										import *



import app.tools.mktdate							as mktdate
import app.tools.mktaccounting 						as mktaccounting



class FRM_RECEIVABLE_CUSTOMER(exform):
	CustomerName 		= TextField(requiredlabel("Customer Name","*"), 
										validators=[validators.Required()]
										)
	CustomerLocalName 	= TextField("Customer Local Name")
	#Receivable-------------------------------------------------------------------
	CustomerCategory = QuerySelectField( requiredlabel("Customer Category","*"),
											query_factory=mktaccounting.loadCategory, 
											blank_text=u'--Choose Category--',								
											get_label=lambda a: a.ID + '-' + a.Description,
											allow_blank=True,
											validators=[validators.Required()],
										 )
	IsIndividual 	= 	SelectField('Is Individual',choices=[('Y', 'Yes'),('N', 'No')],coerce=str)
	Salutation 		=	SelectField("Salutation",
									 choices=[('Mrs', 'Mrs'),('Mr', 'Mr'),('Miss','Miss')],
									 coerce=str
									)
	Gender 			=	SelectField( requiredlabel(getLanguage("Gender"),"*"),
									 choices=[('Female', 'Female'),('Male', 'Male'),('Other','Other')],
									 coerce=str,
									 validators=[validators.Required()]
									)
	Resident 		=	SelectField(requiredlabel(getLanguage('Resident'),'*'),
									 choices=[('Y', 'Yes'),('N', 'No')],
									 coerce=str,
									 validators=[validators.Required()]
									)
	RegisterDate 	= DateField(requiredlabel("Register Date","*"), 
								validators=[validators.Required()], 
								default=mktdate.getDateISO
								)
	Registration 	= TextAreaField("Registration")
	Remark 			= TextAreaField("Remark")
	#Address and Contact-----------------------------------------------------------
	
	Mobile1 		= TextField(requiredlabel(getLanguage("Mobile Phone 1"),'*'),
								 validators=[validators.Required()],
								 description="1- %s" %getLanguage('Current Address and Contact'))
	Mobile2 		= TextField(getLanguage("Mobile Phone 2"), description="1- %s" %getLanguage('Current Address and Contact'))

 	Address1 		= TextAreaField("Address 1",						
								validators=[validators.Length(max=150)],
								description="1- %s"% 'Current Address and Contact'
								)
 	Address2 		= TextAreaField("Address 2",						
								validators=[validators.Length(max=150)],
								description="1- %s"% 'Current Address and Contact'
								)
	Email 			= TextField("Email", 
								description="1- %s"% 'Current Address and Contact', 
								validators=[validators.Optional(),validators.Email(message=u'Invalid email address.')]
								)
	Website 		= TextField("Website", 
								description="1- %s"% 'Current Address and Contact'
								)
	Facebook	 	= TextField("Facebook",
								description="1- %s"% 'Current Address and Contact', 								
								)
	LineID 		 	= TextField("Line ID",
								description="1- %s"% 'Current Address and Contact', 								
								)
	WhatsApp	 	= TextField("Whats App",
								description="1- %s"% 'Current Address and Contact', 								
								)
	Telegram 	 	= TextField("Telegram",
								description="1- %s"% 'Current Address and Contact', 								
								)
	Viber 		 	= TextField("Viber",
								description="1- %s"% 'Current Address and Contact', 								
								)

	@staticmethod
	def setWidth():
		control_list = [("Salutation", len3),
						("Gender", len3),
						("Resident",len1),
						("HouseNo", len3),
						("IsIndividual",len1),
						]

		return control_list


	@staticmethod
	def hotSelectField():
		hotfield 	=[]
		fielddisplay="District, #Commune, #Village"
		varname		="ProvinceID:$('#Province').val()"
		
		fun			=["Province", varname ,fielddisplay, "/Morakot/DistrictID", "click"]
		hotfield.append(fun)
		fielddisplay="Commune, #Village"
		varname		="DistrictID:$('#District').val()"
		
		fun			=["District", varname ,fielddisplay, "/Morakot/CommuneID", "click"]
		hotfield.append(fun)

		fielddisplay="Village"
		varname		="CommuneID:$('#Commune').val()"	
		fun			=["Commune", varname ,fielddisplay, "/Morakot/VillageID", "click"]
		hotfield.append(fun)

		return hotfield
	