from app.mktcore.imports import *
from .forms import *
from .recovery import *
from app.OverdraftContract.models import *
import app.tools.mktsetting as mktsetting
import app.tools.mktmoney as mktmoney
import app.Customer.centre 			as customer

registerCRUD(admin, '/OverdraftWriteOff', 'OverdraftWriteOff',FRM_OVERDRAFT_WRITE_OFF, [MKT_OVERDRAFT_WRITE_OFF])
registerCRUD(admin, '/OverdraftRecovery', 'OverdraftRecovery',FRM_OVERDRAFT_RECOVERY, [MKT_OVERDRAFT_RECOVERY])

@app.route("/Morakot/OverdraftWriteOffList/", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getOverdraftWriteOffList():
	try:
		Dict = {} 
		ODWriteOffAndRecovery = mktsetting.getAppSetting('ODWriteOffAndRecovery').splitlines()
		for o in ODWriteOffAndRecovery:
			KeyValue = o.split('*')
			Dict.update({KeyValue[0]:KeyValue[1]})

		WriteOffClass 	= 	Dict.get('WriteOffClass','')

		Branch 	= request.args.get('Branch') if 'Branch' in request.args else mktuser.getBranch(session["ChangeBranch"]).ID
		ODObj = MKT_OVERDRAFT_CONTRACT.query.filter(MKT_OVERDRAFT_CONTRACT.AssetClass==WriteOffClass).\
				filter(MKT_OVERDRAFT_CONTRACT.Branch==Branch).all()

		if not ODObj:
			flash(msg_warning + " No Overdraft Contract for write-off.")

		return render_template("overdraft/writeoff.html",
							   ODObj 			= ODObj,
							   toMoney 			= mktmoney.toMoney,
							   getCurrencyObj 	= mktmoney.getCurrencyObj,
							   getCurrencySymbol= mktmoney.getCurrencySymbol,
							   lookupTable 		= customer.lookupTable,
							   float 			= float)

	except Exception as e:
		raise e