from app.mktcore.imports 			import *
from app.Branch.models 				import MKT_BRANCH
from app.LoanContract.models 		import MKT_LOAN_CONTRACT
from app.LoanProduct.models 		import MKT_LOAN_PRODUCT
from app.Customer.models 			import MKT_CUSTOMER
from app.Account.models 			import MKT_ACCOUNT
from app.Currency.models 			import MKT_CURRENCY
from sqlalchemy 					import *
import app.tools.mktdate 			as mktdate
import app.tools.mktmoney 			as mktmoney
import app.tools.mktreport			as mktreport
import app.tools.mkttool 			as mkttool
import os


def getPerformanceReport():
	CompanyName		= mkttool.getCompany().CompanyName
	# Performance Summary report
	DrawdownAccPro 	= "101"
	SavingAccPro 	= "102"
	BankDate 		= mktdate.getBankDate()
	CurrencyObj 	= MKT_CURRENCY.query.order_by(MKT_CURRENCY.ID.asc())
	CustomerObj 	= MKT_CUSTOMER.query
	AccountObj 		= MKT_ACCOUNT.query
	LoanObj 		= MKT_LOAN_CONTRACT.query.\
									filter(MKT_LOAN_CONTRACT.OutstandingAmount > 0).\
									filter(MKT_LOAN_CONTRACT.DisbursedStat == "Y")
									# group_by(MKT_LOAN_CONTRACT.Currency)

	# Calculator Loan
	DicLoan 	= {}
	SumLoan 	= 0
	CountLoan 	= 0
	for row in  LoanObj:
		CountLoan += 1
		Amount 	= float(row.OutstandingAmount)
		Amount 	= DicLoan['Sum'+row.Currency]+Amount if 'Sum'+row.Currency in DicLoan else Amount
		DicLoan.update({'Sum'+row.Currency: Amount })
	DicLoan.update({'Count':CountLoan})

	# Calculator Account
	DicDrawdown 	= {'Count': 0}
	DicSaving		= {'Count': 0}
	DicSavingNoLoan = {'Count': 0}
	SumSV 			= 0
	CountSV 		= 0
	SumDDA 			= 0
	CountDDA 		= 0
	DicSavingNoLoan.update( {'Count': 0} )

	for row in  AccountObj:

		if row.AccProduct == DrawdownAccPro:
			Amount = float(row.Balance)
			Amount = DicDrawdown['Sum'+row.Currency]+Amount if 'Sum'+row.Currency in DicDrawdown else Amount
			DicDrawdown.update({'Sum'+row.Currency: Amount })
			DicDrawdown.update({'Count':DicDrawdown['Count']+1 if 'Count' in DicDrawdown else 1})

		if row.AccProduct == SavingAccPro:
			Amount = float(row.Balance)
			Amount = DicSaving['Sum'+row.Currency]+Amount if 'Sum'+row.Currency in DicSaving else Amount
			DicSaving.update({'Sum'+row.Currency: Amount })
			DicSaving.update({'Count':DicSaving['Count']+1 if 'Count' in DicSaving else 1})

			if checkNoLoanOutStanding(row.CustomerList,LoanObj):
				Amount = float(row.Balance)
				Amount = DicSavingNoLoan['Sum'+row.Currency]+Amount if 'Sum'+row.Currency in DicSavingNoLoan else Amount
				DicSavingNoLoan.update({'Sum'+row.Currency: Amount })
				DicSavingNoLoan.update({'Count':DicSavingNoLoan['Count']+1 if 'Count'in DicSavingNoLoan else 1})
				
	DictRowClient = {
		'Title':'# Of Clients',
		'Total':CustomerObj.count()
	}

	DictRowLoan = {
		'Title':'# Of Active Loan',
		'Total':DicLoan['Count']
	}

	DictRow = {
		'Title':'Title',
		'Total':'Total'
	}

	DictRowSaving = {
		'Title':'# Of Saving Account',
		'Total':DicSaving['Count']
	}

	DictRowSavingNoLoan = {
		'Title':'# Of Saving Account No Loan',
		'Total':DicSavingNoLoan['Count']
	}

	DictRowDrawDown = {
		'Title':'# Of Saving Drawdown Account',
		'Total':DicDrawdown['Count']
	}

	for row in CurrencyObj:
		DictRow.update({row.ID:row.ID})

		if 'Sum'+row.ID in DicLoan:
			DictRowLoan.update({row.ID:(mktmoney.formatNumber(DicLoan['Sum'+row.ID],1,0))})
		else:
			DictRowLoan.update({row.ID: '0'})

		if 'Sum'+row.ID in DicSaving:
			DictRowSaving.update({row.ID:(mktmoney.formatNumber(DicSaving['Sum'+row.ID],1,0))})
		else:
			DictRowSaving.update({row.ID: '0'})

		if 'Sum'+row.ID in DicSavingNoLoan:
			DictRowSavingNoLoan.update({row.ID:(mktmoney.formatNumber(DicSavingNoLoan['Sum'+row.ID],1,0))})
		else:
			DictRowSavingNoLoan.update({row.ID: '0'})

		if 'Sum'+row.ID in DicDrawdown:
			DictRowDrawDown.update({row.ID:(mktmoney.formatNumber(DicDrawdown['Sum'+row.ID],1,0))})
		else:
			DictRowDrawDown.update({row.ID: '0'})
	
	Result = [DictRow, DictRowClient, DictRowLoan, DictRowSaving, DictRowSavingNoLoan, DictRowDrawDown]
	DicResult = {
		'Result': Result,
		'BankDate': str(BankDate),
		'ExportDate':str(mktdate.getDateTimeNow()),
		'Company': CompanyName
	}
	return DicResult


@app.route("/Morakot/Report/PerformanceSummary", methods = ['GET'])
@checkLogOutSession
@checkLogOutTime
def getPerformanceSummary():
	Result = getPerformanceReport()['Result']
	CurrencyObj 	= MKT_CURRENCY.query.order_by(MKT_CURRENCY.ID.asc())
	BankDate 		= mktdate.getBankDate()
	return render_template("report/performance/performance_summary.html",
							float 			= float,
							mktfunction 	= mktreport,
							BankDate 		= BankDate,
							CurrencyObj 	= CurrencyObj,
							Result			= Result
							)

@app.route("/Morakot/Report/JsonifyPerformanceSummary/request=<id>", methods=['GET'])
def jsonifyPerformanceSummary(id):
	Result = {}
	Client = request.remote_addr
	if checkClient(request.remote_addr, id):
		Result = getPerformanceReport()
	return jsonify(Result = Result)

def checkNoLoanOutStanding(Customer,LoanObj):
	Loan = LoanObj.filter(MKT_LOAN_CONTRACT.ContractCustomerID == Customer).first()
	if Loan:
		return False
	else:
		return True

def checkClient(client, sha):
	CurrentDir = os.path.dirname(__file__)
	FilePath = '%s/.client.txt' %CurrentDir
	Text = readFile(FilePath)
	Client, SHA = Text.split('*')
	if Client == client and SHA == sha:
		return True
	else:
		return False

def readFile(PathFile, ReadLine=False):
	Result = ''
	if os.path.exists(PathFile):
		ObjFile     = open(PathFile, 'r+')
		Result      = ObjFile.readlines()  if ReadLine else ObjFile.read() 
		ObjFile.close() # you can omit in most cases as the destructor will call it
	return Result