from app.mktcore.imports 		import *
import app.tools.mktmessage 	as mktmessage
import app.tools.mktdate		as mktdate
import app.tools.mktcharge 		as mktcharge
import app.tools.mktaddress 	as mktaddress
import app.tools.user 			as mktuser
from app.LoanContract.models 	import *
from app.AccEntry.models 		import *
from decimal 					import Decimal
from app.tools.mktcustomreport   import *
import app.tools.mktmoney 		as mktmoney
from app.Officer.models 		import *
from app.LoanProduct.models 	import *
from app.Customer.models 		import *
import app.tools.mktsetting     as mktsetting
import app.resource.report.mktuserfunction as mktuserfunction
from app.LoanAmendment.models 	import *
from app.Sector.models 			import *


class FRM_CUSTOM_REPORT_SEARCH_EX(FRM_CUSTOM_REPORT_SEARCH):
	OfficerID 			=   TextField("Officer ID")
	ProductID 			=	TextField("Product ID")
	ValueDate      		=   DateTextField("ValueDate")
	

@app.route('/Morakot/Report/LoanDisbursement', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getLoanDisburse():
	""" Route to view each report """
	try:		
		ErrorMsg    = []
		DefualtUrl 	= CUSTOM_REPORT.getDefaultReportUrl(CurrentUrl=url_for(request.endpoint))
		getCheck    = checkAccess(DefualtUrl,"Search")
		if getCheck != True: 
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)

		''' Setup parameters '''
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else mktuser.getCurrentBranch()
		OfficerID 		=	request.args.get("OfficerID") if "OfficerID" in request.args else ""
		ProductID 		=	request.args.get("ProductID") if "ProductID" in request.args else ""
		ValueDate 		= 	request.args.get("ValueDate") if "ValueDate" in request.args else ""

		Result 			=	getReport01(Branch=Branch,OfficerID=OfficerID,ProductID=ProductID,ValueDate=ValueDate)
		Parameters 		= 	{"Branch": Branch,"OfficerID":OfficerID,"ProductID":ProductID,"ValueDate":ValueDate}
		FilterOption 	=	""

		SearchForm      =   FRM_CUSTOM_REPORT_SEARCH_EX()

		return CUSTOM_REPORT.getCustomReportTemplate(Parameters     =   Parameters,
													Result          =   Result,
													FilterOption    =   FilterOption,
													SearchForm      =   SearchForm)	
	except:
		raise

@app.route('/Morakot/Report/LoanDisbursement/Excel', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getLoanDisburseExport():
	""" Route to view each report """
	try:
		Branch 			=	request.args.get("Branch") if "Branch" in request.args else mktuser.getCurrentBranch()
		OfficerID 		=	request.args.get("OfficerID") if "OfficerID" in request.args else ""
		ProductID 		=	request.args.get("ProductID") if "ProductID" in request.args else ""
		ValueDate 		= 	request.args.get("ValueDate") if "ValueDate" in request.args else ""

		Result 			=	getReport01(Branch=Branch,OfficerID=OfficerID,ProductID=ProductID,ValueDate=ValueDate)
		response 		= 	CUSTOM_REPORT.exportExcel(Result=Result,FileName="LoanDisbursedReport")

		return response

	except Exception as e:
		raise

def getReport01(**kwargs):
	try:
		Branch 			= 	kwargs.get("Branch")
		OfficerID 		= 	kwargs.get("OfficerID")
		ProductID 		= 	kwargs.get("ProductID")
		ValueDate 		=	kwargs.get("ValueDate")
		
		ReportHeader 	=	CUSTOM_REPORT.getReportHeader()
		ReportHeader.update({"ReportTitle": "Loan Disbursed Report"})
		ReportHeader.update({"Parameters": kwargs})

		Data 		= []
		TableHeader = {}

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Branch', 
                                            Rowspan=0,Cols8pan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="A")

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'OfficerID', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="B")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'OfficerName', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="C")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'CustomerID', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="D")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'CustomerNameEn', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="E")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'CustomerNameKh', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="F")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Gender', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="G")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'DDA ID', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="H")

		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'LC ID', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="I")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Product ID', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="J")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Product Name', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="K")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Cycle', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="L")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Currency', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="M")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Sector', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="N")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'ValueDate', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="O")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'MaturityDate', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="P")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'DisbursedDate', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="Q")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Term', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="R")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Approved Amount', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="S")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Disbursed Amount', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="T")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'InterestRate', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="U")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'IRR', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="V")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Up-Front-Fee', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="W")
		# TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Schedule Fee', 
  #                                           Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="U")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Telephone', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="X")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Address', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="Y")
		TableHeader = CUSTOM_REPORT.setTableHeader(Text=u'Inputter', 
                                            Rowspan=0,Colspan=0,RowIndex=1, TableHeader=TableHeader, Class="text-center text-bold",ExcelCol="Z")

		Data = getRecordRow(**kwargs)

		Result = {'ReportHeader': ReportHeader, 'TableHeader': TableHeader, 'Data':Data }

		return Result
	except:
		raise

def getAllLoanAmendment(**kwargs):
	Branch 			 = 	kwargs.get("Branch")
	OfficerID 		 = 	kwargs.get("OfficerID")
	ProductID 		 = 	kwargs.get("ProductID")
	ValueDate 		 =	kwargs.get("ValueDate")
	LoanAmendmentObj = 	db.session.query(MKT_LOAN_CONTRACT.Branch,
									   MKT_LOAN_CONTRACT.ContractCustomerID,
									   MKT_LOAN_CONTRACT.Account,
									   MKT_LOAN_CONTRACT.ID,
									   MKT_LOAN_CONTRACT.ContractOfficerID,
									   MKT_LOAN_CONTRACT.LoanProduct,
									   MKT_LOAN_CONTRACT.Cycle,
									   MKT_LOAN_CONTRACT.Currency,
									   MKT_LOAN_CONTRACT.ValueDate,
									   MKT_LOAN_CONTRACT.MaturityDate,
									   MKT_LOAN_CONTRACT.Term,
									   MKT_LOAN_CONTRACT.ApprovedAmount,
									   MKT_LOAN_CONTRACT.Disbursed,
									   MKT_LOAN_CONTRACT.InterestRate,
									   MKT_LOAN_CONTRACT.IRR,
									   MKT_LOAN_CONTRACT.Inputter,
									   MKT_LOAN_CONTRACT.Sector,
									   MKT_LOAN_AMENDMENT.Amount,
									   MKT_LOAN_AMENDMENT.AmendDate
									   ).\
									   join(MKT_LOAN_AMENDMENT,MKT_LOAN_AMENDMENT.LoanID==MKT_LOAN_CONTRACT.ID).\
									   filter(MKT_LOAN_AMENDMENT.AddDeduct=='2').\
									   filter(MKT_LOAN_AMENDMENT.Operation=='AMT').\
									   order_by(MKT_LOAN_CONTRACT.ID)
	if Branch:
		Branch = Branch.split()
		LoanAmendmentObj 	= LoanAmendmentObj if 'ALL' in Branch else LoanAmendmentObj.\
							 	filter(MKT_LOAN_CONTRACT.Branch.in_(Branch))
	if OfficerID:
		LoanAmendmentObj 	= LoanAmendmentObj.filter(MKT_LOAN_CONTRACT.ContractOfficerID==OfficerID)
	if ProductID:
		LoanAmendmentObj 	= LoanAmendmentObj.filter(MKT_LOAN_CONTRACT.LoanProduct==ProductID)
	if ValueDate:
		ValueDate = ValueDate.split()
		if len(ValueDate)==2:
			LoanAmendmentObj 	= 	LoanAmendmentObj.filter(MKT_LOAN_CONTRACT.ValueDate>=ValueDate[0],
												   		   MKT_LOAN_CONTRACT.ValueDate<=ValueDate[1])
		else:
			LoanAmendmentObj 	= 	LoanAmendmentObj.filter(MKT_LOAN_CONTRACT.ValueDate.in_(ValueDate))
	return LoanAmendmentObj

def getAllLoanMaturity(**kwargs):
	Branch 			= 	kwargs.get("Branch")
	OfficerID 		= 	kwargs.get("OfficerID")
	ProductID 		= 	kwargs.get("ProductID")
	ValueDate 		=	kwargs.get("ValueDate")
	LoanMaturityObj = 	db.session.query(MKT_CLOSED_LOAN.Branch,
												   MKT_CLOSED_LOAN.ContractOfficerID,
												   MKT_CLOSED_LOAN.ContractCustomerID,
												   MKT_CLOSED_LOAN.ID,
												   MKT_CLOSED_LOAN.Account,
												   MKT_CLOSED_LOAN.LoanProduct,
												   MKT_CLOSED_LOAN.Cycle,
												   MKT_CLOSED_LOAN.Currency,
												   MKT_CLOSED_LOAN.ValueDate,
												   MKT_CLOSED_LOAN.MaturityDate,
												   MKT_CLOSED_LOAN.Term,
												   MKT_CLOSED_LOAN.ApprovedAmount,
												   MKT_CLOSED_LOAN.Disbursed,
												   MKT_CLOSED_LOAN.InterestRate,
												   MKT_CLOSED_LOAN.IRR,
												   MKT_CLOSED_LOAN.Sector,
												   MKT_CLOSED_LOAN.Inputter).\
												order_by(MKT_CLOSED_LOAN.ID)
	if Branch:
		Branch = Branch.split()
		LoanMaturityObj 	= LoanMaturityObj if 'ALL' in Branch else LoanMaturityObj.\
							 	filter(MKT_CLOSED_LOAN.Branch.in_(Branch))
	if OfficerID:
		LoanMaturityObj 	= LoanMaturityObj.filter(MKT_CLOSED_LOAN.ContractOfficerID==OfficerID)
	if ProductID:
		LoanMaturityObj 	= LoanMaturityObj.filter(MKT_CLOSED_LOAN.LoanProduct==ProductID)
	if ValueDate:
		ValueDate = ValueDate.split()
		if len(ValueDate)==2:
			LoanMaturityObj 	= 	LoanMaturityObj.filter(MKT_CLOSED_LOAN.ValueDate>=ValueDate[0],
														   MKT_CLOSED_LOAN.ValueDate<=ValueDate[1])
		else:
			LoanMaturityObj 	= 	LoanMaturityObj.filter(MKT_CLOSED_LOAN.ValueDate.in_(ValueDate))

	return LoanMaturityObj


def getAllLoanDisburse(**kwargs):
	Branch 			= 	kwargs.get("Branch")
	OfficerID 		= 	kwargs.get("OfficerID")
	ProductID 		= 	kwargs.get("ProductID")
	ValueDate 		=	kwargs.get("ValueDate")
	
	LoanContractObj = db.session.query(MKT_LOAN_CONTRACT.Branch,
									   MKT_LOAN_CONTRACT.ContractCustomerID,
									   MKT_LOAN_CONTRACT.Account,
									   MKT_LOAN_CONTRACT.ID,
									   MKT_LOAN_CONTRACT.ContractOfficerID,
									   MKT_LOAN_CONTRACT.LoanProduct,
									   MKT_LOAN_CONTRACT.Cycle,
									   MKT_LOAN_CONTRACT.Currency,
									   MKT_LOAN_CONTRACT.ValueDate,
									   MKT_LOAN_CONTRACT.MaturityDate,
									   MKT_LOAN_CONTRACT.Term,
									   MKT_LOAN_CONTRACT.ApprovedAmount,
									   MKT_LOAN_CONTRACT.Disbursed,
									   MKT_LOAN_CONTRACT.InterestRate,
									   MKT_LOAN_CONTRACT.IRR,
									   MKT_LOAN_CONTRACT.Sector,
									   MKT_LOAN_CONTRACT.Inputter
									   ).order_by(MKT_LOAN_CONTRACT.ID)
	if Branch:
		Branch = Branch.split()
		LoanContractObj 	= LoanContractObj if 'ALL' in Branch else LoanContractObj.\
							 	filter(MKT_LOAN_CONTRACT.Branch.in_(Branch))
	if OfficerID:
		LoanContractObj 	= LoanContractObj.filter(MKT_LOAN_CONTRACT.ContractOfficerID==OfficerID)
	if ProductID:
		LoanContractObj 	= LoanContractObj.filter(MKT_LOAN_CONTRACT.LoanProduct==ProductID)
	if ValueDate:
		ValueDate = ValueDate.split()
		if len(ValueDate)==2:
			LoanContractObj 	= 	LoanContractObj.filter(MKT_LOAN_CONTRACT.ValueDate>=ValueDate[0],
												   		   MKT_LOAN_CONTRACT.ValueDate<=ValueDate[1])
		else:
			LoanContractObj 	= 	LoanContractObj.filter(MKT_LOAN_CONTRACT.ValueDate.in_(ValueDate))
	return LoanContractObj
def getRecordRow(**kwargs):
	Branch 			= 	kwargs.get("Branch")
	BankDateObj 	= 	mktdate.getBankDateObj()
	BankDate 		= 	BankDateObj.SystemDate
	BaseCurrency    = 	mktsetting.getAccSetting().BaseCurrency
	OfficerID 		=	kwargs.get("OfficerID")
	ProductID		=	kwargs.get("ProductID")
	ValueDate 		=	kwargs.get("ValueDate")
	LoanProduct 	=	db.session.query(MKT_LOAN_PRODUCT)
	RecordRow = []
	LoanMaturityObj = getAllLoanMaturity(Branch=Branch,OfficerID=OfficerID,ProductID=ProductID,ValueDate=ValueDate)
	LoanContractObj = getAllLoanDisburse(Branch=Branch,OfficerID=OfficerID,ProductID=ProductID,ValueDate=ValueDate)
	LoanAmendmentObj= getAllLoanAmendment(Branch=Branch,OfficerID=OfficerID,ProductID=ProductID,ValueDate=ValueDate)
	if LoanAmendmentObj:
		for LoanAment in LoanAmendmentObj:
			OfficerObj 		= 	MKT_OFFICER.query.get(LoanAment.ContractOfficerID)
			CustomerObj		= 	MKT_CUSTOMER.query.get(LoanAment.ContractCustomerID)
			CustomerNameEn	=	CustomerObj.LastNameEn+' '+CustomerObj.FirstNameEn
			CustomerNameKh	=	CustomerObj.LastNameKh+' '+CustomerObj.FirstNameKh
			ProductName 	= 	LoanProduct.get(LoanAment.LoanProduct).Description
			SectorObj 		= 	MKT_SECTOR.query.get(LoanAment.Sector if LoanAment.Sector else "")
			Sector 			= 	SectorObj.Description if SectorObj else ""	
			Address 		= 	mktaddress.getAddress(CustomerObj.Province,CustomerObj.District,CustomerObj.Commune,CustomerObj.Village)		
			UpFrontFee 		= 	mktcharge.getLoanChargeAmount(LoanAment.ID,LoanAment.Currency)
			#ScheduleFee 	= 	mktcharge.getAccrChargeAmount(LoanID=LoanAment.ID,TransactionDate=BankDate,GetFullCharge=True)
			if ',' in UpFrontFee:
				UpFrontFee  = 	UpFrontFee.split(',')[0]
			OfficerName 	= 	OfficerObj.LastName+' '+OfficerObj.FirstName
			RecordRow.append(({1: {"Value":LoanAment.Branch},
						       2: {"Value":LoanAment.ContractOfficerID},
						       3: {"Value":OfficerName},
						       4: {"Value":LoanAment.ContractCustomerID},
						       5: {"Value":CustomerNameEn},
						       6: {"Value":CustomerNameKh},
						       7: {"Value":CustomerObj.Gender},
						       8: {"Value":LoanAment.Account},
						       9: {"Value":LoanAment.ID},
						      10: {"Value":LoanAment.LoanProduct},
						      11: {"Value":ProductName},
						      12: {"Value":LoanAment.Cycle},
						      13: {"Value":LoanAment.Currency},
						      14: {"Value":Sector if Sector else ""},
						      15: {"Value":LoanAment.ValueDate},
						      16: {"Value":LoanAment.MaturityDate},
						      17: {"Value":LoanAment.AmendDate},
						      18: {"Value":LoanAment.Term},
						      19: {"Value":mktmoney.toMoney(float(LoanAment.ApprovedAmount),mktmoney.getCurrencyObj(LoanAment.Currency))},
						      20: {"Value":mktmoney.toMoney(float(LoanAment.Amount),mktmoney.getCurrencyObj(LoanAment.Currency))},
						      21: {"Value":LoanAment.InterestRate},
						      22: {"Value":LoanAment.IRR},

						      # 23: {"Value":UpFrontFee},
						      23: {"Value":mktmoney.toMoney(float(UpFrontFee),mktmoney.getCurrencyObj(LoanAment.Currency))},
						      # 21: {"Value":mktmoney.toMoney(float(ScheduleFee),mktmoney.getCurrencyObj(LoanAment.Currency))},
						      24: {"Value":CustomerObj.Mobile1},
						      25: {"Value":Address},
						      26: {"Value":LoanAment.Inputter},
							 },{"Class":"text-right","Style":""})) 
	if LoanMaturityObj:
		for LoanMaturity in LoanMaturityObj:
			OfficerObj 		= 	MKT_OFFICER.query.get(LoanMaturity.ContractOfficerID)
			CustomerObj		= 	MKT_CUSTOMER.query.get(LoanMaturity.ContractCustomerID)
			CustomerNameEn	=	CustomerObj.LastNameEn+' '+CustomerObj.FirstNameEn
			CustomerNameKh	=	CustomerObj.LastNameKh+' '+CustomerObj.FirstNameKh
			ProductName 	= 	LoanProduct.get(LoanMaturity.LoanProduct).Description
			SectorObj 		= 	MKT_SECTOR.query.get(LoanMaturity.Sector if LoanMaturity.Sector else "")
			Sector 			= 	SectorObj.Description if SectorObj else ""		
			Address 		= 	mktaddress.getAddress(CustomerObj.Province,CustomerObj.District,CustomerObj.Commune,CustomerObj.Village)		
			UpFrontFee 		= 	mktcharge.getLoanChargeAmount(LoanMaturity.ID,LoanMaturity.Currency)
			#ScheduleFee 	= 	mktcharge.getAccrChargeAmount(LoanID=LoanMaturity.ID,TransactionDate=BankDate,GetFullCharge=True)
			if ',' in UpFrontFee:
				UpFrontFee  = 	UpFrontFee.split(',')[0]
			OfficerName 	= 	OfficerObj.LastName+' '+OfficerObj.FirstName if OfficerObj else "N/A"
			RecordRow.append(({1: {"Value":LoanMaturity.Branch},
						       2: {"Value":LoanMaturity.ContractOfficerID},
						       3: {"Value":OfficerName},
						       4: {"Value":LoanMaturity.ContractCustomerID},
						       5: {"Value":CustomerNameEn},
						       6: {"Value":CustomerNameKh},
						       7: {"Value":CustomerObj.Gender},
						       8: {"Value":LoanMaturity.Account},
						       9: {"Value":LoanMaturity.ID},
						       10: {"Value":LoanMaturity.LoanProduct},
						      11: {"Value":ProductName},
						      12: {"Value":LoanMaturity.Cycle},
						      13: {"Value":LoanMaturity.Currency},
						      14: {"Value":Sector},
						      15: {"Value":LoanMaturity.ValueDate},
						      16: {"Value":LoanMaturity.MaturityDate},
						      17: {"Value":LoanMaturity.ValueDate},
						      18: {"Value":LoanMaturity.Term},
						      19: {"Value":mktmoney.toMoney(float(LoanMaturity.ApprovedAmount),mktmoney.getCurrencyObj(LoanMaturity.Currency))},
						      20: {"Value":mktmoney.toMoney(float(LoanMaturity.Disbursed),mktmoney.getCurrencyObj(LoanMaturity.Currency))},
						      21: {"Value":LoanMaturity.InterestRate},
						      22: {"Value":LoanMaturity.IRR},
						      23: {"Value":mktmoney.toMoney(float(UpFrontFee),mktmoney.getCurrencyObj(LoanMaturity.Currency))},
						      # 21: {"Value":mktmoney.toMoney(float(ScheduleFee),mktmoney.getCurrencyObj(LoanMaturity.Currency))},
						      # 23: {"Value":UpFrontFee},
						      24: {"Value":CustomerObj.Mobile1},
						      25: {"Value":Address},
						      26: {"Value":LoanMaturity.Inputter},
							 },{"Class":"text-right","Style":""})) 

	if LoanContractObj:
		for Loan in LoanContractObj:
			CustomerObj 	= 	MKT_CUSTOMER.query.get(Loan.ContractCustomerID)
			OfficerObj 		= 	MKT_OFFICER.query.get(Loan.ContractOfficerID)
			CustomerNameEn	=	CustomerObj.LastNameEn+' '+CustomerObj.FirstNameEn
			CustomerNameKh	=	CustomerObj.LastNameKh+' '+CustomerObj.FirstNameKh
			ProductName 	= 	LoanProduct.get(Loan.LoanProduct).Description
			SectorObj 		= 	MKT_SECTOR.query.get(Loan.Sector if Loan.Sector else "")
			Sector 			= 	SectorObj.Description if SectorObj else ""	
			Address 		= 	mktaddress.getAddress(CustomerObj.Province,CustomerObj.District,CustomerObj.Commune,CustomerObj.Village)
			UpFrontFee 		= 	mktcharge.getLoanChargeAmount(Loan.ID,Loan.Currency)
			if ',' in UpFrontFee:
				UpFrontFee  = 	UpFrontFee.split(',')[0]
			# ScheduleFee 	= 	mktcharge.getAccrChargeAmount(LoanID=Loan.ID,TransactionDate=BankDate,GetFullCharge=True)
			OfficerName 	= 	OfficerObj.LastName+' '+OfficerObj.FirstName 
			RecordRow.append(({1: {"Value":Loan.Branch},
						       2: {"Value":Loan.ContractOfficerID},
						       3: {"Value":OfficerName},
						       4: {"Value":Loan.ContractCustomerID},
						       5: {"Value":CustomerNameEn},
						       6: {"Value":CustomerNameKh},
						       7: {"Value":CustomerObj.Gender},
						       8: {"Value":Loan.Account},
						       9: {"Value":Loan.ID},
						      10: {"Value":Loan.LoanProduct},
						      11: {"Value":ProductName},
						      12: {"Value":Loan.Cycle},
						      13: {"Value":Loan.Currency},
						      14: {"Value":Sector if Sector else ""},
						      15: {"Value":Loan.ValueDate},
						      16: {"Value":Loan.MaturityDate},
						      17: {"Value":Loan.ValueDate},
						      18: {"Value":Loan.Term},
						      19: {"Value":mktmoney.toMoney(float(Loan.ApprovedAmount),mktmoney.getCurrencyObj(Loan.Currency))},
						      20: {"Value":mktmoney.toMoney(float(Loan.Disbursed),mktmoney.getCurrencyObj(Loan.Currency))},
						      21: {"Value":Loan.InterestRate},
						      22: {"Value":Loan.IRR},
						      # 23: {"Value":UpFrontFee},
						      # 21: {"Value":mktmoney.toMoney(float(ScheduleFee),mktmoney.getCurrencyObj(Loan.Currency))},
						      23: {"Value":mktmoney.toMoney(float(UpFrontFee),mktmoney.getCurrencyObj(Loan.Currency))},
						      24: {"Value":CustomerObj.Mobile1},
						      25: {"Value":Address},
						      26: {"Value":Loan.Inputter},
							 },{"Class":"text-right","Style":""}))
	return RecordRow
