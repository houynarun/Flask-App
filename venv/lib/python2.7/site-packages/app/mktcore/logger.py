import logging
from logging.config import dictConfig

logging_config = dict(
    version = 1,
    formatters = {
        'f': {'format':
              '%(asctime)s | %(levelname)-s | %(name)-12s  %(message)s'}
        },
    handlers = {
        'h': {'class': 'logging.StreamHandler',
              'formatter': 'f',
              'level': logging.DEBUG}
        },
    root = {
        'handlers': ['h'],
        'level': logging.DEBUG,
        },
)

dictConfig(logging_config)

logger = logging.getLogger('Morakot VB')

class TerminalColour:
    """
    Terminal colour formatting codes
    """
    MAGENTA = '\033[95m'
    BLUE = '\033[94m'
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    RED = '\033[91m'
    GREY = '\033[0m'  # normal
    WHITE = '\033[1m'  # bright white
    UNDERLINE = '\033[4m'
    CRITICAL ='\033[1;41m'

# Assign color to log
logging.addLevelName(logging.DEBUG, "{}{}{}   ".format(TerminalColour.BLUE, logging.getLevelName(logging.DEBUG), TerminalColour.GREY))
logging.addLevelName(logging.INFO, "{}{}{}    ".format(TerminalColour.GREEN, logging.getLevelName(logging.INFO), TerminalColour.GREY))
logging.addLevelName(logging.WARNING, "{}{}{} ".format(TerminalColour.YELLOW, logging.getLevelName(logging.WARNING), TerminalColour.GREY))
logging.addLevelName(logging.ERROR, "{}{}{}   ".format(TerminalColour.RED, logging.getLevelName(logging.ERROR), TerminalColour.GREY))
logging.addLevelName(logging.CRITICAL, "{}{}{}".format(TerminalColour.CRITICAL, logging.getLevelName(logging.CRITICAL), TerminalColour.GREY))

# logger.debug('often makes a very good meal of %s', 'visiting tourists')
# logger.info('info message')
# logger.warn('warn message')
# logger.error('error message')
# logger.critical('critical message')

FORMAT = '%(asctime)s | %(levelname)-8s | %(module)s -%(funcName)s - %(name)-12s  %(message)s'
logging.basicConfig(format=FORMAT, level=logging.INFO)