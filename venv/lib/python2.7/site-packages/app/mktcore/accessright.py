from flask import flash,g
from app import db
from app.Module.models import MKT_FORM
from app.Role.models import MKT_ACCESS
from app.RestrictBranch.models	import MKT_RESTRICT_BRANCH
from sqlalchemy import and_
from app.tools.user import *


access_list={'New':'N','Edit':'E','Delete':'D','Search':'V','Authorize':'A',
			 'ListLive':'L','ListHist':'H','Copy':'C','Print':'P',
			 'Reverse':'R', 'ListAuth':'U', "ALL":"ALL","Cancel": "Cancel","Verify":"F", "":"NONE" , "O":"Override"}

#@checkLogOutSession
#@checkLogOutTime
def checkAccess(url,operation=''):

	# setUrl = url.split("/")[2] #get modle
	ObjUrl = url.split('/')[2:]
	setUrl = '/'.join(ObjUrl)
	if setUrl[-1:] =="/":
		setUrl = '/'.join(ObjUrl)[:-1]
		
	getCheck = ""
	g.FilterBy = ""
	
	if operation not in ("New", "Edit", "Delete", "Authorize", "Reverse","Search","","ListLive","ListAuth","ListHist", "Cancel","Verify","Override") :

		getCheck = msg_error + msg_permission
	else:

		#assign O to operation if it is override
		if operation == 'Override':
			operation = 'O'

		#get from session 
		if 'getLogInID' in session :
			roleID=getUser().Role
		else :
			return msg_session_time_out

		#get role 99
		if roleID == '99' :
			checkRole99 (setUrl)
			return True


		#get item from access right
		queryResult = MKT_ACCESS.query.join (MKT_FORM,  and_ (MKT_ACCESS.Module == MKT_FORM.ID, MKT_ACCESS.Form == MKT_FORM.FormID )).\
									   filter( and_( MKT_ACCESS.ID == roleID, MKT_FORM.URL == setUrl )).first()

		if queryResult :
			
			getForm = MKT_FORM.query.filter_by (ID=queryResult.Module, FormID = queryResult.Form).first()

			if getForm :
				if getForm.NAuthorize == None :
					g.getNAuthorize = 0
				else :
					g.getNAuthorize  = getForm.NAuthorize # get number of authorize from form
	
			else :
				g.getNAuthorize = 0

			# check verify record if F is not in version form
			#if operation == 'Edit' and getForm.NAuthorize > 1 :
			#	if "F" not in queryResult.AccessRight :
			#		return msg_error + msg_permission
					#exit function
			g.AccessRight = queryResult.AccessRight

			if g.AccessRight == "ALL" or operation in ("Cancel","") or  access_list[operation] in  g.AccessRight:
				getCheck = True
				if queryResult.FilterBy !="":

					g.FilterBy = queryResult.FilterBy  #assign values to global variable
			else:

				getCheck = msg_error + msg_permission
		else:
			getCheck = msg_error + msg_permission

	return getCheck


def checkRole99 (URL) :

	g.AccessRight = ''
	getForm = MKT_FORM.query.filter_by (URL = URL)
	if len(getForm.all())>1:
		Text = ''
		for row in getForm:
			Text += '%s '%(row.ID)
		raise Exception("Duplicate URL %s ID:(%s)in form, system couldn't load access right. Please check delete one."% (URL,Text))
	getForm = getForm.first()
	#g.FilterBy = "ID*EQ*KHR"
	if getForm :
		if getForm.NAuthorize == '' or  getForm.NAuthorize == None :
			g.getNAuthorize = 0
		else :
			g.getNAuthorize  = getForm.NAuthorize # get number of authorize from form
	
	else :
		g.getNAuthorize = 0

def checkRecordAccBranch(RecordBranch, TableName):
	""" Check Access Branch with record's branch
	If user have access within branch will be return True else False
	"""
	UserObj = getUser()
	RestrictBranch = UserObj.RestrictBranch.split()
	RestrictBranchObj = MKT_RESTRICT_BRANCH.query.filter(MKT_RESTRICT_BRANCH.Model ==TableName).first()
	if RestrictBranchObj:
		if RecordBranch in RestrictBranch or 'ALL' in RestrictBranch:
			return True, ''
		else:
			return False,msg_error + msg_permission + ", This user is not allowed to access branch %s."%RecordBranch
	else:
		return True,''