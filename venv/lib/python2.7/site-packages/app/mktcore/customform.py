from app.mktcore.wtfimports import *
from app.mktcore.imports 			import *
from .. import app
import app.tools.mktmoney as mktmoney
from  app.mktcore.globalfunction  import wordAmount,ConvertForm
from app.mktcore.autoid import dellockrecord, dellockrecordbyuser
from wtforms.csrf.session import SessionCSRF
from datetime import timedelta

import os

class CLS_CustomForm():

	customToolBar  		= ['BlankList']
	body 				= {}
	recordID 			= ''
	redirectURL  		= ''
	kwargs 				= {}
	form 				= [] #Custom form is need form to process
	customType 			= 'MainCustom' # It has two type ('MainCustom & Custom')  
									   # - MainCustom: When open form need to search. (like loan centre or customer centre)
									   # - Custom: show all information without search
	customButton 		= {} 
	header 				= '' # Has in form view repayment schedule

	def globalProcess(self):
		return False

	def process(self):
		self.globalProcess()
		return  {	
					'custom_tool_bar':self.customToolBar,
					'kwargs':self.kwargs,
					'body_dict':self.body,
					'record_id':self.recordID,
					'form':self.form,
					'redirect':self.redirectURL,
					'custom_type':self.customType,
					'custom_button':self.customButton,
					'header':self.header
				}

	# @staticmethod
	# def tableFormat(listField='',url=[] , importantField=[] , listObject = [] , moneyField = {}):
	# 	ListObject = []
	# 	for row in listObject:
	# 		Column = []
	# 		Important = True
	# 		for col in listField:
	# 			if importantField:
	# 				Important = False

	# 			Data = 
	# 			if moneyField:
	# 				Data
	# 			ConverMoney = toMoney(float(row.Balance),CurrencyObj(row.Currency))
	# 			AccountID={'key':getLanguage('Account'),'value':row.ID}
	# 			AccountName={'key':getLanguage('Name') ,'value':row.AccName}
	# 			AccountType={'key':getLanguage('Type')  ,'value':row.AccProductDescription}
	# 			AccountCurrency={'key':getLanguage('Currency') ,'value':row.Currency} 
	# 			AccountBalance={'key':getLanguage('Balance') ,'value':ConverMoney}  
	# 			Column = [AccountID,AccountName,AccountType,AccountCurrency,AccountBalance]
	# 	AccountList.append({'columns':Column,'urls':[{'url':"/Account/?ID="+row.ID,'type_url':'Form','icon':'th-list'},
	# 						   {'url':"/AccountStatement/?ID="+row.ID,'type_url':'Custom','icon':'file-o'}]})
	
