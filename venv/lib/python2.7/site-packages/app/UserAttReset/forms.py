from app.mktcore.wtfimports import *
from .models import *
from .. import app, db
from app.User.models import MKT_USER
import time
import app.tools.mktsetting     as mktsetting

def loadUser():
	return MKT_USER.query

def loadAttemps():
    try:
        Setting = mktsetting.getSetting()
        Attempts = 3
        if Setting:
            Attempts = Setting.ATTEMPS
        return int(Attempts)
    except:
        raise

class FRM_USER_ATTEMPTS_RESET(exform):

	UserID = QuerySelectField(requiredlabel("User", "*"),
						query_factory=loadUser,
						get_label='DisplayName',
						allow_blank=True,
						blank_text='--None--',
						validators=[validators.Required()]
						)

	def validate_UserID(form, field):
	 	ID = request.form['UserID']
		user = MKT_USER.query.get(ID)
		if user:
			NumberAtt = loadAttemps()
			user.Attempts = NumberAtt
			db.session.add(user)
			db.session.commit()
		else:
			raise ValidationError(" The user does not exist")

	# @staticmethod
	# def beforeInsert():
	# 	user = MKT_USER.query.get(form.UserID.data)
	# 	if user:
	# 		user.Password = ""
	# 		db.session.add(user)
	# 		dd.session.commit()
	# 		return True

	# 	raise ValidationError(" The user does not exist")
	# 	return False