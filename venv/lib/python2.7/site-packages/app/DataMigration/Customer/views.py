import app.tools.mkttool 		as mkttool
import app.tools.mktdatamigration as mktmigrate

def validateCustomer(DictRecord):
	DictMessage 		= {}
	##################################
	### Validate Group field
	#################################	

	Required 			= 	[
								"Branch","ID","FirstNameEn","LastNameEn","FirstNameKh",		
								"LastNameKh","Salutation","Gender",	"DateOfBirth","CountryOfBirth",
								"Nationality","AsGurantor",	"MaritalStatus","Resident",	"Province","District",			
								"Commune","Village","City","Mobile1","Officer","Sector","Industry",	
								"IDType","IDNumber","IssuePlace","IssueDate","Block"	
							]

	FormatDate 			=	["DateOfBirth","IssueDate","ExpiryDate","SpoDateOfBirth", "SpouseIDIssueDate"]
	Choices		 		=	[
								("Salutation", ("Mr","Mrs","Miss")),
								("Gender", ("Male","Female")),
								("AsGurantor", ("Y","N")),
								("MaritalStatus", tuple((str(item)) for item in range(1, 9))),
								("Resident", ("Y","N")),
								("EmployerType", ("C","P")),
								("SelfEmployed", ("Y","N")),
								("EmployerAddressType", ("WORK", "RESID", "POST", "U")),
								("HouseOwnerShip", tuple((str(item)) for item in range(1, 8))),
								("Block", ("Y","N")),
								("ACMember", ("Y","N"))
							]	
	RecordFound 		=	[
								("CountryOfBirth","MKT_COUNTRY","ID"),
								("Nationality","MKT_COUNTRY","ID"),
								("EducationLevel","MKT_EDUCATION","ID"),
								("Position","MKT_POSITION","ID"),
								("Officer","MKT_OFFICER","ID"),
								("Currency","MKT_CURRENCY","ID"),
								("Sector","MKT_SECTOR","ID"),
								("Industry","MKT_INDUSTRY","ID"),
								("IDType","MKT_ID_TYPE","ID"),
								("SpoOccupation","MKT_POSITION","ID"),
								("SpouseIDType","MKT_ID_TYPE","ID"),
								("SpouseNationality","MKT_COUNTRY","ID"),
								("Branch","MKT_BRANCH","ID"),
								("ProvinceOfBirth","MKT_PROVINCE","ID"),
								("Province","MKT_PROVINCE","ID"),
								("EmployerProvince","MKT_PROVINCE","ID")
							]
	
	Number				=	["LengthOfService","YearEmployed","NumberOfMember","ActiveMember"]	

	Length 				=	[("LengthOfService", 0, 3),("YearEmployed", 4, 4)]	
	RecordFoundMulti	=	[
								("MKT_DISTRICT", "ID", "Province", "DistrictOfBirth", "ProvinceOfBirth"),
								("MKT_COMMUNE", "ID", "District", "CommuneOfBirth", "DistrictOfBirth"),

								("MKT_DISTRICT", "ID", "Province", "District", "Province"),
								("MKT_COMMUNE", "ID", "District", "Commune", "District"),
								("MKT_VILLAGE", "ID", "Commune", "Village", "Commune"),

								("MKT_DISTRICT", "ID", "Province", "EmployerDistrict", "EmployerProvince"),
								("MKT_COMMUNE", "ID", "District", "EmployerCommune", "EmployerDistrict"),
								("MKT_VILLAGE", "ID", "Commune", "EmployerVillage", "EmployerCommune"),
							]	

	Prefix 				=	[("CUM", "ID")]		
	Mobile 				=	["Mobile1","Mobile2"]
	Email				=	["Email"]
	IDNumber			=	[("IDNumber", "IDType"), ("SpoNationalID", "SpouseIDType")]			

	DictMessage.update(mktmigrate.exeFunctionValidate(DictRecord=DictRecord, 
						Required=Required, 
						FormatDate=FormatDate, 
						InvalidChoies=Choices, 
						Prefix=Prefix, 
						RecordFound=RecordFound, 
						Number=Number,
						Length=Length,
						RecordFoundMulti=RecordFoundMulti,	
						Email=Email,
						Mobile=Mobile,
						IDNumber=IDNumber,					
						DebugMode=False))

	##################################
	### Validate Custom field
	#################################	

	if DictRecord.get("Block") == "Y":
		if mkttool.checkRequired(Value=DictRecord.get("BlockReason"))[0] == False:
			DictMessage.update({"BlockReason":mkttool.checkRequired(Value=DictRecord.get("BlockReason"))[1]})
	else:
		if DictRecord.get("BlockReason"):
			DictMessage.update({"BlockReason": "Please do not input reason if Block not equal Y"})

	return DictMessage