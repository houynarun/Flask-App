import app.tools.mkttool 			as mkttool
import app.tools.mktdatamigration 	as mktmigrate
import app.tools.mktdate 			as mktdate

def validateLoanContract(DictRecord):
	DictMessage 		= {}
	##################################
	### Validate Group field
	##################################

	Required 			= 	[
								"Branch","ID","ContractCustomerID","Account","Currency","Amount","Disbursed",
								"ApprovedAmount","OutstandingAmount","DisbursedStat","ValueDate", "Installment",
								"Term","MaturityDate","LoanProduct","Category","InterestRate","FreqType",
								"Frequency","DeliqMode","TotalInterest","AccrInterest","AccrCurrentInt",
								"AccrIntCurrMonth","AccrIntPreMonth","IntIncEarned","AccrIntPerDay","Suspend",
								"ContractOfficerID","LoanType", "AssetClass", "MoreThanOneYear", "NextRunDate", "Penalty"
							]

	FormatDate 			=	["ValueDate","MaturityDate","FirstCollectionDate","NextRunDate"]

	Choices		 		=	[
								("DisbursedStat", ("Y","N")),
								("FreqType",("1","2")),
								("DeliqMode",("1","2","3")),
								("Suspend", ("Y","N")),
								("LoanType", ("N","R")),
								("MoreThanOneYear",("Y","N")),
								("Penalty", ("Y","N")),
								("AssetClass", ("0","10","20","30","40"))
							]

	RecordFound 		=	[
								("Branch","MKT_BRANCH","ID"),
								("ContractCustomerID","MKT_CUSTOMER","ID"),
								("LoanApplicationID", "MKT_LOAN_APPLICATION","ID"),
								("ContractOfficerID","MKT_OFFICER","ID"),
								("LoanProduct", "MKT_LOAN_PRODUCT", "ID"),
								("LoanPurpose", "MKT_LOAN_PURPOSE", "ID"),
								("Category", "MKT_CATEGORY", "ID")
							]


	RecordFoundMulti	=	[
								("MKT_ACCOUNT", "ID", "Currency", "Account", "Currency")
							]

	Prefix 				=	[("LCM", "ID"),("CUM", "ID"), ("DDM", "ID")]

	Number				=	["Installment","Term","Cycle","InterestRate","IRR","Frequency"]

	CompareValue 		=	[
								("NextRunDate",">=","BankDate"), 
								("FirstCollectionDate",">=","ValueDate"),
								("MaturityDate",">","ValueDate"), 
								("LoanBalance","<=","OutstandingAmount"),
								("Disbursed","<=","ApprovedAmount")
							]


	DictMessage.update(mktmigrate.exeFunctionValidate(
						DictRecord	=	DictRecord,
						Required	=	Required,
						FormatDate	=	FormatDate,
						InvalidChoies=	Choices,
						Prefix		=	Prefix,
						RecordFound =	RecordFound,
						RecordFoundMulti=RecordFoundMulti,
						Number 		=	Number,
						CompareValue=	CompareValue,
						DebugMode	=	False)
					)

	ValueDate 	= DictRecord.get("ValueDate")
	BankDate 	= str(mktdate.getBankDate())
	DisbursedStat= DictRecord.get("DisbursedStat")

	if ValueDate < BankDate:
		if DisbursedStat == "N":
			DictMessage.update({"DisbursedStat":"DisbursedStat should be 'Y'"})
	else:
		if DisbursedStat == "Y":
			DictMessage.update({"DisbursedStat":"DisbursedStat should be 'N'"})

	return DictMessage



def validateGuarantor(DictRecord):
	DictMessage 		= {}
	##################################
	### Validate Group field
	##################################

	Required 			= 	["Branch","ID","Guarantor"]


	RecordFound 		=	[
								("Branch","MKT_BRANCH","ID")
							]

	RecordFoundMulti	=	[
								("MKT_LOAN_CONTRACT", "ID", "ContractCustomerID", "ID", "Guarantor")
							]

	Prefix 				=	[("LCM", "ID"),("CUM", "ID")]

	DictMessage.update(mktmigrate.exeFunctionValidate(
						DictRecord 	=	DictRecord,
						Required 	=	Required,
						RecordFound =	RecordFound,
						RecordFoundMulti=RecordFoundMulti,
						Prefix 		=	Prefix,
						DebugMode 	=	False)
					)

	return DictMessage

def validateCoBorrower(DictRecord):
	DictMessage 		= {}
	##################################
	### Validate Group field
	##################################

	Required 			= 	["Branch","ID","CoBorrowerID","CoBorrowerName","RelationIndicator"]

	Choices 			=	[("RelationIndicator", ('1', '2', '3', '4', '5'))],

	RecordFound 		=	[
								("Branch","MKT_BRANCH","ID")
							]

	RecordFoundMulti	=	[
								("MKT_LOAN_CONTRACT", "ID", "ContractCustomerID", "ID", "CoBorrowerID")
							]

	Prefix 				=	[("LCM", "ID"),("CUM", "ID")]

	LookupConcat		=	[ ("CoBorrowerName", "MKT_CUSTOMER", ("LastNameEn","FirstNameEn"), {"ID": "CustomerList"}, " ")]

	DictMessage.update(mktmigrate.exeFunctionValidate(
						DictRecord 	=	DictRecord,
						Required 	=	Required,
						InvalidChoies=	Choices,
						RecordFound =	RecordFound,
						RecordFoundMulti=RecordFoundMulti,
						Prefix		=	Prefix,
						LookupConcat= 	LookupConcat,
						DebugMode 	=	False)
					)

	return DictMessage

def validateLoanCollateral(DictRecord):
	DictMessage 		= {}
	##################################
	### Validate Group field
	##################################

	Required 			= 	["Branch","ID","Collateral"]

	RecordFound 		=	[
								("Branch","MKT_BRANCH","ID"),
								("ID", "MKT_LOAN_CONTRACT", "ID"),
								("Collateral", "MKT_COLLATERAL", "ID")
							]

	Prefix 				=	[("LCM", "ID")]

	DictMessage.update(mktmigrate.exeFunctionValidate(
						DictRecord=DictRecord,
						Required=Required,
						RecordFound=RecordFound,
						Prefix=Prefix,
						DebugMode=False)
					)

	return DictMessage