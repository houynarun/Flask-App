import app.tools.mkttool 		as mkttool
import app.tools.mktdatamigration as mktmigrate

def validateCollateral(DictRecord):
	DictMessage 		= {}
	##################################
	### Validate Group field
	#################################	

	Required 			= 	[
								"Branch","ID","CustomerID","Description"	
							]
		
	RecordFound 		=	[
								("Branch","MKT_BRANCH","ID"),
								("CustomerID","MKT_CUSTOMER","ID")
							]

	RecordFoundMulti 	=	[
								("MKT_CUSTOMER", "Branch", "ID", "Branch", "CustomerID"),
							]

	Prefix 				=	[("CR%s" % DictRecord.get("Branch"), "ID")]		

	DictMessage.update(mktmigrate.exeFunctionValidate(DictRecord=DictRecord, 
						Required=Required, 
						Prefix=Prefix, 
						RecordFound=RecordFound, 	
						RecordFoundMulti=RecordFoundMulti,			
						DebugMode=False))	

	return DictMessage


def validateCollateralDetail(DictRecord):
	DictMessage 		= {}
	##################################
	### Validate Group field
	##################################

	Required 			= 	[
								"Branch","CollateralID","CollateralType","Currency","PurchasePrice","ValuationPrice"
							]
		
	RecordFound 		=	[
								("Branch","MKT_BRANCH","ID"),
								("CollateralID","MKT_COLLATERAL","ID"),
								("CollateralType","MKT_COLLATERAL_TYPE","ID"),
								("Currency","MKT_CURRENCY","ID"),
								("Province","MKT_PROVINCE","ID")
							]

	Number				=	["PurchasePrice","ValuationPrice"]

	FormatDate 			=	["IssuedDate","ReceivedDate","WithdrawalDate"]

	RecordFoundMulti	=	[
								("MKT_DISTRICT", "ID", "Province", "District", "Province"),
								("MKT_COMMUNE", "ID", "District", "Commune", "District"),
								("MKT_VILLAGE", "ID", "Commune", "Village", "Commune"),
								("MKT_COLLATERAL", "Branch", "ID", "Branch", "CollateralID")
							]

	Choices		 		=	[
								("OwnershipType", tuple((str(item)) for item in range(1, 3))),
								("RelationIndicator", tuple((str(item)) for item in range(1, 6)))
							]	

	DictMessage.update(mktmigrate.exeFunctionValidate(DictRecord=DictRecord, 
						Required=Required, 
						RecordFound=RecordFound, 
						Number=Number,
						FormatDate=FormatDate,
						RecordFoundMulti=RecordFoundMulti,
						InvalidChoies=Choices,
						DebugMode=False))	

	return DictMessage