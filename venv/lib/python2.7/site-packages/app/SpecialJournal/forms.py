from app.mktcore.wtfimports 				import *
from app.mktcore.imports 					import *
from .models 								import *

import app.tools.mktaccounting 				as mktaccounting


class FRM_SPECIAL_JOURNAL(exform):

	Description 	= TextField(requiredlabel("Description", "*"),[validators.Length(max=100),validators.Required()])
	DrCategory 		= QuerySelectField(requiredlabel("Debit Category","*"),
							query_factory=mktaccounting.loadCategory,
							get_label=lambda a: a.ID + " - " + a.Description,
							allow_blank=True,
							blank_text=u'--None--',
							validators=[validators.Required()],
							)
	CrCategory 		= QuerySelectField(requiredlabel("Credit Category","*"),
							query_factory=mktaccounting.loadCategory,
							get_label=lambda a: a.ID + " - " + a.Description,
							allow_blank=True,
							blank_text=u'--None--',
							validators=[validators.Required()],
							)
	Currency 		= QuerySelectField(requiredlabel('Currency', "*"),
							query_factory=mktaccounting.loadCurrency,
							get_label=u'ID',
							allow_blank=mktaccounting.getDefaultCurrency(),
							blank_text=u'--None--',
							validators=[validators.Required()],
							)
	Amount 			= TextField("Amount")
	Transaction 	= QuerySelectField(requiredlabel('Transaction', "*"),
							query_factory=mktaccounting.loadTransaction,
							get_label=lambda a: a.ID + " - " + a.Description,
							allow_blank=True,
							blank_text=u'--Choose Transaction--',
							validators=[validators.Required()],
							)
	Reference 		= TextField("Reference",[validators.Length(max=35)])
	Note 			= TextAreaField(requiredlabel("Note", "*"),[validators.Length(max=50),validators.Required()])


	def validate_Amount(form, field):
		Amount = field.data
		if float(Amount) < 0:
			raise ValidationError("Loan Balance must not be negative.")

	@staticmethod
	def moneyField():
		return [("Amount", "Currency")]

	@staticmethod
	def formatMoney():
		return ["Amount"], "Currency"