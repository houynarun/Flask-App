from app.mktcore.imports import *
from .forms import *
from app.mktcore.globalfunction import StatusCodes
from app.mktcore.authentication import GetAPIReturnFormat,MesssageStandard
from app.Customer.models import *

registerCRUD(admin, '/LinkCustomerUser', 'LinkCustomerUser',FRM_LINK_CUSTOMER_USER, [MKT_LINK_CUSTOMER_USER])

@app.route('/Morakot/GetCustomerByUser/', methods=['GET'])
@app.route('/Morakot/API/GetCustomerByUser/', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def GetCustomerByUser():
	UserID = request.args.get('ID')
	if not UserID:
		UserID = session['getLogInID']
	CustomerList = []
	CustomerDict = {}
	UserProfile = ""
	LinkUserObj = MKT_LINK_CUSTOMER_USER.query.filter(MKT_LINK_CUSTOMER_USER.User==UserID).first()
	if LinkUserObj:
		UserObj = MKT_USER.query.get(UserID)
		if UserObj:
			UserProfile = UserObj.ProfilePicture
		CustomerObj = MKT_CUSTOMER.query.get(LinkUserObj.Customer)
		if CustomerObj:
			CustomerList.append({
								"user_profile"			:UserProfile,
								"user_id"				:UserID,
								"login_name"			:UserObj.LogInName,
								"display_name"			:UserObj.DisplayName,
								"last_login_date"		:UserObj.DateLastLogin + UserObj.TimeLastLogin,
								"customer_id"			:CustomerObj.ID,
								"first_name_en"			:CustomerObj.FirstNameEn,
								"last_name_en"			:CustomerObj.LastNameEn,
								"first_name_kh"			:CustomerObj.FirstNameKh if CustomerObj.FirstNameKh else "",
								"last_name_kh"			:CustomerObj.LastNameKh if CustomerObj.LastNameKh else "",
								"salutation"			:CustomerObj.Salutation if CustomerObj.Salutation else "",
								"gender"				:CustomerObj.Gender,
								"date_of_birth"			:CustomerObj.DateOfBirth if CustomerObj.DateOfBirth else "",
								"country_of_birth"		:CustomerObj.CountryOfBirth if CustomerObj.CountryOfBirth else "",
								"province_of_birth" 	:CustomerObj.ProvinceOfBirth if CustomerObj.ProvinceOfBirth else "",
								"district_of_birth"		:CustomerObj.DistrictOfBirth if CustomerObj.DistrictOfBirth else "",
								"commune_of_birth"		:CustomerObj.CommuneOfBirth if CustomerObj.CommuneOfBirth else "",
								"nationality"			:CustomerObj.Nationality if CustomerObj.Nationality else "",
								"province"				:CustomerObj.Province,
								"district"				:CustomerObj.District,
								"commune"				:CustomerObj.Commune,
								"village"				:CustomerObj.Village if CustomerObj.Village else "",
								"city" 					:CustomerObj.City if CustomerObj.City else "",
								"house_no"				:CustomerObj.HouseNo if CustomerObj.HouseNo else "",
								"mobile1"				:CustomerObj.Mobile1,
								"mobile2"				:CustomerObj.Mobile2 if CustomerObj.Mobile2 else "",
								"email"					:CustomerObj.Email if CustomerObj.Email else "",
								"street"				:CustomerObj.Street if CustomerObj.Street else ""
								})
		
		CustomerDict.update({"customers"	:CustomerList})
		return GetAPIReturnFormat(Header="Get Customer By User",Data=CustomerDict,RecordID="",Status=StatusCodes.ok(),Type="Custom")
	else:
		CustomerDict.update({"customers"	:CustomerList})
		return GetAPIReturnFormat(Header="Get Customer By User",Data=CustomerDict,RecordID="",Status=StatusCodes.not_found(),Type="Custom",Message=['Not found customer.'])
	return MesssageStandard(Messages=['No customer has been found...'],Statuscode=StatusCodes.not_found())