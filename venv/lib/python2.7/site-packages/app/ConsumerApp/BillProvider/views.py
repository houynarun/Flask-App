from app.mktcore.imports import *
from .forms import *
from app.mktcore.globalfunction import StatusCodes
from app.mktcore.authentication import GetAPIReturnFormat,MesssageStandard
from app.Customer.models import *
from app.ConsumerApp.Card.models import *

registerCRUD(admin, '/BillProvider', 'BillProvider',FRM_BILL_PROVIDER, [MKT_BILL_PROVIDER])

@app.route('/Morakot/FilterBillProvider/', methods=['GET'])
@app.route('/Morakot/API/FilterBillProvider/', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def FilterBillProvider():
	Provider	= request.args.get('Type')
	PType       = ""
	AccountList = []
	AccountDict = {}
	Status 		= StatusCodes()
	Balance 	= 0
	AccountNo 	= ""
	CardNoShow	= ""
	CardNoHide	= ""
	Description	= ""
	AccountType = ""
	ExpiryDate  = ""
	Active 		= ""
	Cvv 		= ""
	CardLogo 	= ""
	AccountObj  = None
	AccountCurrency = "USD"
	AccountName     = ""
	CustomerAddress = ""
	Background 		= ""
	CredentialID 	= ""
	CredentialType  = ""
	if Provider=="Utility":
		PType = "UTL"
	elif Provider =="InternetTV":
		PType = "INTV"
	elif Provider =="Education":
		PType = "EDU"
	elif Provider == "MobileTopup":
		PType = "MTOPUP"
	elif Provider=="TopUpPinLess":
		PType = "TopUpPinLess"
	elif Provider =="TopUpWithPin":
		PType = "TopUpWithPin"
	elif Provider =="Loans":
		PType = "LOA"

	ProviderObj = MKT_BILL_PROVIDER.query.filter(MKT_BILL_PROVIDER.ProviderType==PType).all()
	if ProviderObj:
		for pd in ProviderObj:
			
			CustomerObj = MKT_CUSTOMER.query.get(pd.CustomerID)
			if CustomerObj:
				CustomerAddress = CustomerObj.NonIndAddress
			if pd.CredentialID:
				CredentialID 	= pd.CredentialID
			if pd.CredentialType:
				CredentialType  = pd.CredentialType
			AccountList.append({
						"account_no"	:"",
						"card_no_show"	:"",
						"card_no_hide"	:"",
						"description" 	:"",
						"account_name"	:"",
						"balance"		:"",
						"type"			:"",
						"cvv"			:"",
						"expiry_date"	:"",
						"active"		:"",
						"category"		:pd.Category,
						"currency"		:"",
						"console_key"	:"",
						"category_desc"	:"",
						"exchange_rate"	:"",
						"provider_id"	:pd.CustomerID,
						"provider_des"	:pd.Description,
						"provider_local_des":pd.LocalDescription,
						"provider_type"	:pd.ProviderType,
						"provider_logo" :pd.Logo,
						"provider_active":pd.Active,
						"credential_type":CredentialType,
						"credential_id"	: CredentialID,
						"provider_address":CustomerAddress,
						"background"	:Background,
						"logo"			:""
						})
		AccountDict.update({"Accounts"	:AccountList})
		AccountDict.update(GetUrlDict())
		return GetAPIReturnFormat(Header="Filter Account List",Data=AccountDict,RecordID="",Status=Status.ok(),Type="Custom")
	return MesssageStandard(Messages=['No account found...'],Statuscode=Status.not_found())
def GetUrlDict():
	DictUrl = {}
	DictUrl.update({
		"url_filter_provider"			:"/Morakot/API/FilterBillProvider/?Type="
		})
	return DictUrl
