from app.mktcore.wtfimports import *
from .models import *
from .. import app, db
import time
from app.CategoryType.models import MKT_CATEG_TYPE

def loadCategoryType():
	return MKT_CATEG_TYPE.query

class FRM_CATEGORY(exform):
	Description = TextField(requiredlabel("Description", "*"), [validators.Required(), validators.Length(min=1, max=100)])
	CategoryType = QuerySelectField(requiredlabel('Category Type', '*'),
						query_factory=loadCategoryType,
                        get_label=u'Description',
                        allow_blank=True,
						blank_text='--None--',
						validators=[validators.Required()])

	BalanceType = SelectField(requiredlabel("Balance Type", "*"),
						choices=[('','--None--'),('Dr', 'Debit'), ('Cr', 'Credit')],
						validators=[validators.Required()]
				  )


	def validate_Description(form, field):

		ID 					= request.form['ID']
		CheckCategory 		= MKT_CATEGORY.query.get(ID)

		if CheckCategory:

			Category = MKT_CATEGORY.query.\
				filter(MKT_CATEGORY.Description == form.Description.data).\
				filter(MKT_CATEGORY.Description != CheckCategory.Description).\
				first()

		else:
			Category = MKT_CATEGORY.query.\
				filter(MKT_CATEGORY.Description == form.Description.data).\
				first()

		if Category :
			raise ValidationError("%s already exists..." % form.Description.data)

	@staticmethod
	def setWidth():
		return [('BalanceType', len1)]