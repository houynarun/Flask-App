from ..DisposalType.models 		import MKT_ASSET_DISPOSAL
from ..FixedAsset.models 		import MKT_ASSET
from ..AssetAssigning.models 	import MKT_ASSET_ASSIGNING
from sqlalchemy 				import desc
import unicodedata


def getAssetStatus(args):
	ID = args[0]
	Dic = {'NEW': 'New', 'IUS':'In Use', 'HUP':'Hanging Up'}

	Asset = MKT_ASSET.query.get(ID)
	if Asset:
		if str(Asset.AssetStatus) == 'NEW' or str(Asset.AssetStatus) == 'IUS' or str(Asset.AssetStatus) == 'HUP':
			return Dic[str(Asset.AssetStatus)]
		else:
			DisposalType = MKT_ASSET_DISPOSAL.query.get(str(Asset.AssetStatus))
			return str(DisposalType.Description)

	return ""


def getAssetUsingNote(args):
	ID = args[0]
	Asset = MKT_ASSET_ASSIGNING.query.\
								filter(MKT_ASSET_ASSIGNING.AssetID==ID).\
								order_by(desc(MKT_ASSET_ASSIGNING.AssigningDate), desc(MKT_ASSET_ASSIGNING.Createdon)).\
								first()
	
	if Asset:
		return str(Asset.Note)
	return ID


def getDepreciationFrequency(args):
	Frequency = {"D":"Daily", "W":"Weekly", "M":"Monthly", "Q":"Quaterly", "Y":"Annualy"}
	
	return Frequency[args[0]]
