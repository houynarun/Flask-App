from app.mktcore.imports 										import *
from ...AssetAssigning.models 									import *
from app.Officer.models 										import *
from ...FixedAsset.models										import *
from sqlalchemy.sql.expression									import *
from sqlalchemy													import String, Integer
from app.mktcore.session 										import *
from ...AssetDispose.models 									import *


@app.route("/Morakot/Report/AssetUser",methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getAssetUserReport():
	BranchOrigin = str(request.args.get('Branch')) if request.args.get('Branch') else ""
	Branch = "" if BranchOrigin.upper()=="ALL" else BranchOrigin
	StartDate = request.args.get('Start') if request.args.get('Start') else ""
	EndDate = request.args.get('End') if request.args.get('End') else ""
	FilterBranch = "%" + Branch + "%"
	Result = {}
	lis = []


	Filter = [MKT_ASSET_ASSIGNING.Branch.ilike(FilterBranch)]
	RootOldAssignee = 	MKT_ASSET_ASSIGNING.query.\
						with_entities(MKT_ASSET_ASSIGNING.AssigneeID).\
						distinct(MKT_ASSET_ASSIGNING.AssigneeID).\
						filter(MKT_ASSET_ASSIGNING.AssigneeID!='')
	RootNewAssignee = 	MKT_ASSET_ASSIGNING.query.\
						with_entities(MKT_ASSET_ASSIGNING.NewAssigneeID).\
						distinct(MKT_ASSET_ASSIGNING.NewAssigneeID).\
						filter(MKT_ASSET_ASSIGNING.NewAssigneeID!='')
	if StartDate != '':
		Filter.append(cast(MKT_ASSET_ASSIGNING.AssigningDate, String)>=StartDate)
	if EndDate != '':
		Filter.append(cast(MKT_ASSET_ASSIGNING.AssigningDate, String)<=EndDate)
		
	OldAssignee = 	RootOldAssignee.filter(*Filter)
	NewAssingee = 	RootNewAssignee.filter(*Filter)
	Assignee = OldAssignee.union(NewAssingee).all()
	print Assignee
	if Assignee :
		for ID in Assignee:
			UserHIST = MKT_ASSET_ASSIGNING.query.\
						join(MKT_ASSET, MKT_ASSET_ASSIGNING.AssetID==MKT_ASSET.ID).\
						filter(str(ID[0])==MKT_ASSET_ASSIGNING.AssigneeID,
								MKT_ASSET_ASSIGNING.StopUsingDate!='',
								MKT_ASSET_ASSIGNING.NewAssigneeID == '').\
						filter(*Filter).\
						union(MKT_ASSET_ASSIGNING.query.\
								join(MKT_ASSET_HIST, MKT_ASSET_ASSIGNING.SerialNumber==MKT_ASSET_HIST.SerialNumber).\
								filter(str(ID[0])==MKT_ASSET_ASSIGNING.AssigneeID,
										MKT_ASSET_ASSIGNING.StopUsingDate!='',
										MKT_ASSET_ASSIGNING.NewAssigneeID == '').\
						filter(*Filter)).\
						all()
			
			Staff = MKT_OFFICER.query.get(str(ID[0]))
			print str(ID[0])
			if UserHIST :
				for row in UserHIST :
					Asset = MKT_ASSET.query.get(row.AssetID)					
					if Asset is None:
						Asset = MKT_ASSET_HIST.query.filter(MKT_ASSET_HIST.ID.contains(row.AssetID)).first()						
					if Asset :
						Result.update({
										"Branch":row.Branch,
										"StaffName":Staff.LastName + " " + Staff.FirstName,
										"Asset":Asset.Description,
										"SerialNumber":row.SerialNumber,
										"UsingDate":row.AssigningDate,
										"StopUsingDate":row.StopUsingDate,
										"Status":"Used"
									})
						lis.append(Result)
						Result = {}

			TransferHIST = MKT_ASSET_ASSIGNING.query.\
							join(MKT_ASSET, MKT_ASSET_ASSIGNING.AssetID==MKT_ASSET.ID).\
							filter(str(ID[0])==MKT_ASSET_ASSIGNING.NewAssigneeID,
									MKT_ASSET_ASSIGNING.StopUsingDate!='').\
							filter(*Filter).\
							union(MKT_ASSET_ASSIGNING.query.\
									join(MKT_ASSET_HIST, MKT_ASSET_ASSIGNING.SerialNumber==MKT_ASSET_HIST.SerialNumber).\
									filter(str(ID[0])==MKT_ASSET_ASSIGNING.NewAssigneeID,
											MKT_ASSET_ASSIGNING.StopUsingDate!='').\
									filter(*Filter)).\
							all()

			if TransferHIST:
				for row in TransferHIST:
					Asset = MKT_ASSET.query.get(row.AssetID)
					if Asset is None:
						Asset = MKT_ASSET_HIST.query.filter(MKT_ASSET_HIST.ID.contains(row.AssetID)).first()
						if Asset:
							Result.update({
											"Branch":row.Branch,
											"StaffName":Staff.LastName + " " + Staff.FirstName,
											"Asset":Asset.Description,
											"SerialNumber":row.SerialNumber,
											"UsingDate":row.AssigningDate,
											"StopUsingDate":row.StopUsingDate,
											"Status":"Used" #if str(Asset.AssetStatus) != "IUS" else "Using"
										})
							lis.append(Result)
							Result = {}

			CurrentUser = MKT_ASSET.query.filter(MKT_ASSET.AssigneeID==str(ID[0]),MKT_ASSET.AssigneeID!='').all()
			StopUsingDate = "None"
			if CurrentUser:
				for user in CurrentUser:
					if str(user.AssetStatus) != "IUS":
						DisposedAsset = MKT_ASSET_DISPOSE.query.filter_by(AssetID=user.ID).first()
						StopUsingDate = str(DisposedAsset.DisposeDate)
					
					Result.update({
									"Branch":user.Branch,
									"StaffName":Staff.LastName + " " + Staff.FirstName,
									"Asset":user.Description,
									"SerialNumber":user.SerialNumber,
									"UsingDate":user.AssigningDate,
									"StopUsingDate":StopUsingDate,
									"Status":"Used" if str(user.AssetStatus) != "IUS" else "Using"
								 })
					lis.append(Result)
					Result = {}

	return render_template('fixedasset/user.html',
							Result=lis,
							Branch=BranchOrigin,
							Start=StartDate,
							End=EndDate
							)
