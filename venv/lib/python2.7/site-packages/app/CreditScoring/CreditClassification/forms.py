from app.mktcore.wtfimports 				import *
from app.mktcore.imports        			import *
from .models 								import *
from app.CreditScoring.CreditModel.models 	import *

def loadQuestionnaire():
	QuestionnaireObj 	= MKT_CREDIT_MODEL.query.order_by(MKT_CREDIT_MODEL.Description.asc())
	return QuestionnaireObj

class FRM_CREDIT_CLASSIFICATION(exform):
	Questionnaire   	= QuerySelectField(requiredlabel("Credit Model","*"),
											query_factory=loadQuestionnaire,
											get_label="Description",
											allow_blank=True,
											blank_text="--None--",
											validators=[validators.Required()])
	Description 		= TextField(requiredlabel("Description","*"),[validators.Required(),validators.Length(max=100)])
	Min 				= TextField(requiredlabel("Min Value","*"),[validators.Required()])
	Max 				= TextField(requiredlabel("Max Value","*"),[validators.Required()])
	Recommendation 		= TextAreaField(requiredlabel("Recommenation","*"),[validators.Required(),validators.Length(max=150)])
	TextColor 			= TextField(requiredlabel("Text Color Code","*"),[validators.Required(),validators.Length(max=7)])

	def validate_Min(form,field):
		'''
		Min value must be not str and smaller o equeal Max.
		Max and Min value is range value for credit score rate

		'''
		ID  = request.form["ID"]
		Min = request.form["Min"]
		Max = request.form["Max"]
		Type= request.form["Questionnaire"]
		try:
			Min = float(Min)
		except ValueError as e :
			raise ValidationError("This field allow number only.")
		if Min > float(Max):
			raise ValidationError("Min value must be smaller than or equeal Max Value.")

		Obj 	=	db.session.query(MKT_CREDIT_CLASSIFICATION).filter(cast(MKT_CREDIT_CLASSIFICATION.Min,Float)<=Min).\
													filter(cast(MKT_CREDIT_CLASSIFICATION.Max,Float)>=Min).\
													filter(MKT_CREDIT_CLASSIFICATION.ID!=ID).\
													filter(MKT_CREDIT_CLASSIFICATION.Questionnaire==Type).first()
		if Obj:
			raise ValidationError("This value %s is existing in recored ID %s."%(Min,ID))

	def validate_Max(form,field):
		'''
		Max value must be not str and bigger or equal Min
		'''
		ID  = request.form["ID"]
		Max = request.form["Max"]
		Min = request.form["Min"]
		Type= request.form["Questionnaire"]
		try:
			Max = float(Max)
		except Exception as e:
			raise ValidationError("This field allow number only.")
			
		if Max < float(Min):
			raise ValidationError("Max value must be bigger than or equeal Min Value.")

		Obj 	=	db.session.query(MKT_CREDIT_CLASSIFICATION).filter(cast(MKT_CREDIT_CLASSIFICATION.Min,Float)<=Max).\
													filter(cast(MKT_CREDIT_CLASSIFICATION.Max,Float)>=Max).\
													filter(MKT_CREDIT_CLASSIFICATION.ID!=ID).\
													filter(MKT_CREDIT_CLASSIFICATION.Questionnaire==Type).first()
		if Obj:
			raise ValidationError("This value %s is existing in recored ID %s."%(Max,ID))
