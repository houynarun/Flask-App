from app.mktcore.wtfimports 	import *
from .models 					import *
import time
from sqlalchemy 				import or_
import app.tools.mktaddress 	as mktaddress
import app.tools.mktbranch 		as mktbranch
from app.tools.mktroute			import *
from app.District.models 		import MKT_DISTRICT
from app.Commune.models 		import MKT_COMMUNE
from app.Village.models 		import MKT_VILLAGE
from app.Officer.models 		import MKT_OFFICER

#function
def getRecord():
	try:
		result = MKT_VB.query.filter_by(ID=g.formID).all()
		if not result:
			result = MKT_VB_INAU.query.filter_by(ID=g.formID).all()
		Dict={}
		if result:
			
			for row in result:
				Dict.update({'VBProvince'	:row.VBProvince})
				Dict.update({'VBDistrict'	:row.VBDistrict})
				Dict.update({'VBCommune'	:row.VBCommune})
				Dict.update({'VBVillage'	:row.VBVillage})
			return Dict
		else:
			return Dict
	except:
		raise

def loadProvince():
	return mktaddress.getProvince()

def loadDistrict():  #define function
	if request.method == 'POST':
		Province = request.form["VBProvince"]
	else:
		if len(getRecord())>0:
			Record = getRecord()
			return MKT_DISTRICT.query.filter_by(ID=Record['VBDistrict'])  
		else:
			return MKT_DISTRICT.query.filter_by(ID='').all()

	return mktaddress.getLoadDistrict(Province)

def loadCommune():  #define function
	if request.method == 'POST':
		District=request.form["VBDistrict"]
	else:
		if len(getRecord())>0:
			Record = getRecord()
			return MKT_COMMUNE.query.filter_by(ID=Record['VBCommune'])  
		else:
			return MKT_COMMUNE.query.filter_by(ID='').all()

	return mktaddress.getLoadCommune(District)

def loadVillage():
	if request.method == 'POST':
		Commune=request.form["VBCommune"]
	else:
		if len(getRecord())>0:
			Record = getRecord()
			return MKT_VILLAGE.query.filter_by(ID=Record['VBVillage'])  
		else:
			return MKT_VILLAGE.query.filter_by(ID='').all()

	return mktaddress.getLoadVillage(Commune)
def loadOfficer():
	return mktofficer.loadOfficer()

class FRM_VB(exform):
	Description = TextField(requiredlabel("Description", "*"), [validators.Required()])
	Coordinator = TextField(requiredlabel("Coordinator", "*"), [validators.Required()])
	Telephone = TextField("Telephone")
	VBProvince = QuerySelectField(requiredlabel('Province', "*"),
                        query_factory=loadProvince,
                        get_label=u'Description',
                        allow_blank=True,
                        blank_text=u'--Choose Province--',
                        validators=[validators.Required()])

	VBDistrict = QuerySelectField('District',
                        query_factory=loadDistrict,
                        get_label=u'Description',
                        allow_blank=True,
                        blank_text=u'--Choose District--')

	VBCommune = QuerySelectField('Commune',
                        query_factory=loadCommune,
                        get_label=u'Description',
                        allow_blank=True,
                        blank_text=u'--Choose Commune--')

	VBVillage = QuerySelectField('Village',
                        query_factory=loadVillage,
                        get_label=u'Description',
                        allow_blank=True,
                        blank_text=u'--Choose Village--')
	FreqType 			= SelectField(requiredlabel(getLanguage("Frequency Type"), "*"),
						choices=[('', '--%s--' %getLanguage("None")),
								 ('1', '1. %s' %getLanguage("Monthly")), 
								 ('2', '2. %s' %getLanguage("Weekly")),
								 ('3', '3. %s' % "Daily")],
						coerce=str,
						validators=[validators.Required()],
						default=''
					)
	Frequency 		= TextField(requiredlabel("Frequency", "*"), [validators.Required()], default=1)
	OfficerID      	= RemoteTextField(requiredlabel("Loan Officer", "*"),validators=[validators.Required()])
	@staticmethod
	def hotSelectField():
		hotfield=[]

		fielddisplay="VBDistrict, #VBCommune, #VBVillage"
		varname="ProvinceID:$('#VBProvince').val()"
		fun=["VBProvince", varname ,fielddisplay, "/Morakot/DistrictID", "change"]
		hotfield.append(fun)

		fielddisplay="VBCommune, #VBVillage"
		varname="DistrictID:$('#VBDistrict').val()"
		fun=["VBDistrict", varname ,fielddisplay, "/Morakot/CommuneID", "change"]
		hotfield.append(fun)

		fielddisplay="VBVillage"
		varname="CommuneID:$('#VBCommune').val()"
		fun=["VBCommune", varname ,fielddisplay, "/Morakot/VillageID", "change"]
		hotfield.append(fun)

		return hotfield
	@staticmethod
	def setWidth():

		Fields = [('Frequency', len2),
				('MeetingTime',len2)]
			

		return Fields