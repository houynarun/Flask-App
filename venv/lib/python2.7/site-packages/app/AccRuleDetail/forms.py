from wtforms import DecimalField
from app.mktcore.wtfimports import *
from .models import *
import time
from app.Currency.models import MKT_CURRENCY
from app.AccRule.models import MKT_ACC_RULE

class FRM_ACC_RULE_DE(exform):
	Description = TextField(requiredlabel("Description", "*"), [validators.Required()])
	MinBalance 	= TextField(requiredlabel("Minimum Balance", "*"), [validators.Required()])
	MaxBalance 	= TextField(requiredlabel("Maximum Balance", "*"), [validators.Required()])
	MinTerm 	= TextField("Minimum Term")
	MaxTerm 	= TextField("Maximum Term")
	@staticmethod
	def beforeInsert():
		ID = request.form['ID']
		if len(ID) != 6:
			raise ValidationError(" The ID must be 6 digit")
		else:
			ID = ID[:3]
			Interest = MKT_ACC_RULE.query.get(ID)
			if Interest:
				ID = request.form['ID'][-3:]
				Currency = MKT_CURRENCY.query.get(ID)
				if Currency:
					return True
				else:
					raise ValidationError(" The currency key#%s does not exist" %ID)
					return False
			else:
				raise ValidationError(" The rule key#%s does not exist" %ID)
				return False