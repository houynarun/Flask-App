from app.mktcore.imports 			import *
from app.urlregister 				import *
import app.tools.user 				as mktuser


def setRegisterWidget():
	# NameofWidget, Label of Widget , Name of Function ,Part and File html, MacroName
	ListUserWidget 	=	[	('OnlineUser',	'Online User',	getWidgetOnlineUser,	'widget/widget_1.html',	'UserOnline')]

	return ListUserWidget


def getWidgetOnlineUser():
	UserObj = db.session.query(MKT_LOGIN_USER.UserID,
							MKT_USER.DisplayName,
							MKT_USER.ProfilePicture,
							MKT_LOGIN_USER.Branch,
							MKT_BRANCH.Description,
							MKT_LOGIN_USER.LogInDate,
							MKT_LOGIN_USER.LogInTime,
							MKT_LOGIN_USER.LastTimeActivity
							).\
							join(MKT_USER,MKT_USER.ID==MKT_LOGIN_USER.UserID).\
							join(MKT_BRANCH,MKT_BRANCH.ID==MKT_LOGIN_USER.Branch).\
							order_by(MKT_LOGIN_USER.Createdon.desc())
							
	if "API" in request.url:
		APIListObj = []
		APIDicObj = {}
		for row in UserObj.all():
			ProfilePicture = row.ProfilePicture
			if ProfilePicture is None:
				ProfilePicture = ""

			URL = ""
			APIListObj.append({
				"columns":[{
					"key":"ID",
					"value":row.UserID
					},
					{"key":"Display Name",
					 "value":row.DisplayName
					},
					{"key":"Branch",
					 "value":row.Description
					},
					{"key":"Login DateTime",
					 "value":str(str(row.LogInDate) + str(row.LogInTime))
					},
					{"key":"Last Time Activity",
					 "value":str(row.LastTimeActivity.strftime('%Y-%m-%d %H:%M:%S') if row.LastTimeActivity else '')
					},
				],
				"important":[{
					"key":"ID",
					"value":row.UserID
					},
					{"key":"Display Name",
					 "value":row.DisplayName
					},
					{"key":"Branch",
					 "value":row.Description
					}],
				"url":URL,
				"profile":str(ProfilePicture)
				})

		APIDicObj.update({
			"title":"Online Users",
			"icon":"users",
			"refresh":"/UserRefresh",
			"total_record":UserObj.count(),
			"type":"Table",
			"body":APIListObj
			})
		return APIDicObj

	return UserObj