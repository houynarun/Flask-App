from flask 					import request, url_for, render_template,flash,redirect,session, g
from werkzeug.security 		import generate_password_hash, check_password_hash
from .. 					import app, db
from app.mktcore.session 	import *
from app.mktcore.imports 	import *
from .forms 				import *
from .waiv 					import *
from .penalty 				import *
from sqlalchemy 			import *

from app.PD.models 			import *
from app.Customer.models 	import *
from app.LoanContract.models import *

import app.tools.mktmoney 	as mktmoney
import app.tools.mktreport 	as mktreport
import app.tools.mktsetting as mktsetting
import app.tools.mktpdcollection as mktpdcollection



registerCRUD(admin, '/PastDue', 'PastDue',FRM_PAST_DUE, [MKT_PAST_DUE,MKT_PD_DATE])
registerCRUD(admin, '/Penalty', 'Penalty',FRM_PENALTY, [MKT_PENALTY])

ExtendClass 			= 	mktsetting.ExtendModule()
LINK 					=	{"Customer": ExtendClass.getUrlExtend(Module="Customer")}

@app.route("/Morakot/PD/", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getPD():
	try:

		ID 			= 	request.args.get('ID').strip() if 'ID' in request.args else None
		PD_DATE 	= 	None
		Branch 		=	session["ChangeBranch"]



		PD 	= 	db.session.query(MKT_PAST_DUE.ID,
								MKT_PAST_DUE.LoanID,
								MKT_PAST_DUE.Customer,
								MKT_PAST_DUE.Currency,
								MKT_PAST_DUE.TotODAmount,
								MKT_PAST_DUE.TotPrincipalDue,
								MKT_PAST_DUE.TotInterestDue,
								MKT_PAST_DUE.TotPenaltyDue,
								MKT_PAST_DUE.TotChargeDue,
								MKT_CUSTOMER.FirstNameEn,
								MKT_CUSTOMER.LastNameEn,
								MKT_LOAN_CONTRACT.Account).\
							join(MKT_CUSTOMER,MKT_CUSTOMER.ID==MKT_PAST_DUE.Customer).\
							outerjoin(MKT_LOAN_CONTRACT,MKT_LOAN_CONTRACT.ID==MKT_PAST_DUE.LoanID).\
							filter(MKT_PAST_DUE.TotODAmount > 0).\
							filter(MKT_PAST_DUE.Branch == Branch).\
							order_by(asc(MKT_PAST_DUE.Authorizeon)).\
							all()

		if not ID:
			return render_template("pd/list.html",
								   PD=PD,
								   toMoney=mktmoney.toMoney,
								   getCurrencyObj=mktmoney.getCurrencyObj,
								   float=float,
								   VLOOKUP 	=	mktreport.VLOOKUP)
		else:

			PD = MKT_PAST_DUE.query.get(ID)

			PD_DATE = MKT_PD_DATE.query.\
					  order_by(asc(MKT_PD_DATE.DueDate)).\
					  filter(MKT_PD_DATE.ID == ID).\
					  all()

			if not PD_DATE:
				flash(msg_warning + "Past due not found.")

			#get Penalty Rate and Loan
			PenaltyDict = {}
			LoanObj = MKT_LOAN_CONTRACT.query.get(ID[2:])
			if LoanObj:
				PenaltyDict = mktpdcollection.getPenatyRate(LoanID=LoanObj.ID)	

			return render_template("pd/detail.html",
								   PD 		=	PD,
								   PD_DATE 	=	PD_DATE,
								   toMoney 	=	mktmoney.toMoney,
								   getCurrencyObj=mktmoney.getCurrencyObj,
								   float 	=	float,
								   ID 		=	ID,
								   VLOOKUP 	=	mktreport.VLOOKUP,
								   LINK     = 	LINK,
								   LoanObj  =	LoanObj,
								   PenaltyDict = PenaltyDict
								)

	except:
		raise