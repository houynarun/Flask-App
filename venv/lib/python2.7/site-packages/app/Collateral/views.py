from app.mktcore.imports 	import *
from .forms 				import *
from .detail 				import *
from app.mktcore.globalfunction import StatusCodes
from app.mktcore.authentication import GetAPIReturnFormat,MesssageStandard
from app.Officer.models 	import *

registerCRUD(admin, '/Collateral', 'Collateral', FRM_COLLATERAL, [MKT_COLLATERAL])
registerCRUD(admin, '/CollateralDetail', 'CollateralDetail', FRM_COLLATERAL_DE, [MKT_COLLATERAL_DE])

# View Collateral Location
@app.route('/Morakot/GetAllOfficerCustomerCollateral/', methods=['GET'])
@app.route('/Morakot/API/GetAllOfficerCustomerCollateral/', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def GetAllOfficerCustomerCollateral():
	UserLogin 	 = session['getLogInID']
	CustomerListData = []
	CollateralList 	 = []
	Messages  		 = [""]
	ApiStatus 		 = ""
	CustomerList 	 = []
	CollateralDetailList = []
	CollateralDetailDict = {}
	CollateralDetailData = {}
	OfficerObj 		 = MKT_OFFICER.query.filter(MKT_OFFICER.UserID==UserLogin).first()
	if OfficerObj:
		CustomerObj = MKT_CUSTOMER.query.filter(MKT_CUSTOMER.Officer==OfficerObj.ID).all()
		if CustomerObj:
			for cu in CustomerObj:
				if cu.LastLocation:
					CustomerList.append(cu.ID)
	if CustomerList:
		for CustomerID in CustomerList:
			CollateralObj = MKT_COLLATERAL.query.filter(MKT_COLLATERAL.CustomerID==CustomerID).all()
			if CollateralObj:
				for collateral in CollateralObj:
					CollateralDetailObjQuery = MKT_COLLATERAL_DE.query.filter(MKT_COLLATERAL_DE.CollateralID==collateral.ID).all()
					if CollateralDetailObjQuery:
						for CollateralDetailObj in CollateralDetailObjQuery:
							CollateralStatus = ""
							if CollateralDetailObj.CollateralStatus=="1":
								CollateralStatus = "Received"
							elif CollateralDetailObj.CollateralStatus=="2":
								CollateralStatus = "Withdrawn"
							if CollateralDetailObj.Location:
								ApiStatus = StatusCodes.ok()
								LocationSplit = CollateralDetailObj.Location.split()
								Longitude 	  = float(LocationSplit[1])
								Latitude 	  = float(LocationSplit[0])
								CollateralDetailList.append({
									"customer"			  :collateral.CustomerID,
									"collateral"          :collateral.ID,
									"collateral_detail_id":CollateralDetailObj.ID,		
									"status"              :CollateralStatus,
									"collateral_type"     :CollateralDetailObj.CollateralType,
									"purchased_price"     :mktmoney.toMoney(float(CollateralDetailObj.PurchasePrice), mktmoney.getCurrencyObj(CollateralDetailObj.Currency),2),
									"valuation_price"     :mktmoney.toMoney(float(CollateralDetailObj.ValuationPrice), mktmoney.getCurrencyObj(CollateralDetailObj.Currency),2),
									"force_sale"          :mktmoney.toMoney(float(CollateralDetailObj.ForceSaleValue), mktmoney.getCurrencyObj(CollateralDetailObj.Currency),2),
									"longitude"	          :Longitude,
									"latitude"  	      :Latitude,
									"url"				  :"/CollateralDetail/?ID="+CollateralDetailObj.ID,
									"type_url" 			  :"Form"
								})

		CollateralDetailDict.update({"collaterals":CollateralDetailList})
		CollateralDetailDict.update(GetUrlDict())
		CollateralDetailData.update({"collateral":CollateralDetailDict})
	if not ApiStatus:
		ApiStatus = StatusCodes.not_found()
		Messages  = ["No collateral detail has been found."]
		CollateralDetailDict.update({"collaterals":CollateralDetailList})
		CollateralDetailDict.update(GetUrlDict())
		CollateralDetailData.update({"collateral":CollateralDetailDict})
	return GetAPIReturnFormat(Header="Get all officer's customer's collateral",Data=CollateralDetailData,RecordID="",Status=ApiStatus,Type="Map",Message=Messages)

@app.route('/Morakot/FindCollateralByCustomer/', methods=['GET'])
@app.route('/Morakot/API/FindCollateralByCustomer/', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def FindCollateralByCustomer():
	CustomerID = request.args.get('ID',"")
	CollateralList = []
	CollateralDetailDict = {}
	CollateralDetailList = []
	CollateralData  = {}
	ApiStatus = ""
	Messages  = []
	if CustomerID:
		CollateralObj = MKT_COLLATERAL.query.filter(MKT_COLLATERAL.CustomerID==CustomerID).all()
		if CollateralObj:
			for collateral in CollateralObj:
				CollateralDetailObjQuery = MKT_COLLATERAL_DE.query.filter(MKT_COLLATERAL_DE.CollateralID==collateral.ID).all()
				if CollateralDetailObjQuery:
					for CollateralDetailObj in CollateralDetailObjQuery:
						CollateralStatus = ""
						if CollateralDetailObj.CollateralStatus=="1":
							CollateralStatus = "Received"
						elif CollateralDetailObj.CollateralStatus=="2":
							CollateralStatus = "Withdrawn"
						if CollateralDetailObj.Location:
							ApiStatus = StatusCodes.ok()
							LocationSplit = CollateralDetailObj.Location.split()
							Longitude 	  = float(LocationSplit[1])
							Latitude 	  = float(LocationSplit[0])
							CollateralDetailList.append({
								"customer"			  :collateral.CustomerID,
								"collateral"          :collateral.ID,
								"collateral_detail_id":CollateralDetailObj.ID,		
								"status"              :CollateralStatus,
								"collateral_type"     :CollateralDetailObj.CollateralType,
								"purchased_price"     :mktmoney.toMoney(float(CollateralDetailObj.PurchasePrice), mktmoney.getCurrencyObj(CollateralDetailObj.Currency),2),
								"valuation_price"     :mktmoney.toMoney(float(CollateralDetailObj.ValuationPrice), mktmoney.getCurrencyObj(CollateralDetailObj.Currency),2),
								"force_sale"          :mktmoney.toMoney(float(CollateralDetailObj.ForceSaleValue), mktmoney.getCurrencyObj(CollateralDetailObj.Currency),2),
								"longitude"	          :Longitude,
								"latitude"  	      :Latitude,
								"url"				  :"/CollateralDetail/?ID="+CollateralDetailObj.ID,
								"type_url" 			  :"Form"
							})

			CollateralDetailDict.update({"collaterals":CollateralDetailList})
			CollateralDetailDict.update(GetUrlDict())
			CollateralData.update({"collateral":CollateralDetailDict})
	if not ApiStatus:
		ApiStatus = StatusCodes.not_found()
		Messages  = ["No collateral detail has been found."]
		CollateralDetailDict.update({"collaterals":CollateralDetailList})
		CollateralDetailDict.update(GetUrlDict())
		CollateralData.update({"collateral":CollateralDetailDict})
	return GetAPIReturnFormat(Header="Find Collateral Detail by Customer",Data=CollateralData,RecordID="",Status=ApiStatus,Type="Map",Message=Messages)

@app.route('/Morakot/FindCollateral/', methods=['GET'])
@app.route('/Morakot/API/FindCollateral/', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def FindCollateral():
	Collateral = request.args.get('ID',"")
	CollateralList = []
	CollateralDetailDict = {}
	CollateralDetailList = []
	CollateralData  = {}
	ApiStatus = ""
	Messages  = []
	CollateralObj = None
	if Collateral:
		CollateralObj = MKT_COLLATERAL_DE.query.filter(MKT_COLLATERAL_DE.ID==Collateral).all()
		if not CollateralObj:
			CollateralObj = MKT_COLLATERAL_DE.query.filter(MKT_COLLATERAL_DE.CollateralID==Collateral).all()
		if CollateralObj:
			for CollateralDetailObj in CollateralObj:
				CollateralStatus = ""
				if CollateralDetailObj.CollateralStatus=="1":
					CollateralStatus = "Received"
				elif CollateralDetailObj.CollateralStatus=="2":
					CollateralStatus = "Withdrawn"
			
				if CollateralDetailObj.Location:
					ApiStatus = StatusCodes.ok()
					Messages  = [""]
					LocationSplit = CollateralDetailObj.Location.split()
					Longitude 	  = float(LocationSplit[1])
					Latitude 	  = float(LocationSplit[0])
					Customer 	  = ""
					CollateralObj = MKT_COLLATERAL.query.get(CollateralDetailObj.CollateralID)
					if CollateralObj:
						Customer = CollateralObj.CustomerID
					CollateralDetailList.append({
						"collateral"          :CollateralDetailObj.CollateralID,
						"collateral_detail_id":CollateralDetailObj.ID,	
						"customer"			  :Customer,	
						"status"              :CollateralStatus,
						"collateral_type"     :CollateralDetailObj.CollateralType,
						"purchased_price"     :mktmoney.toMoney(float(CollateralDetailObj.PurchasePrice), mktmoney.getCurrencyObj(CollateralDetailObj.Currency),2),
						"valuation_price"     :mktmoney.toMoney(float(CollateralDetailObj.ValuationPrice), mktmoney.getCurrencyObj(CollateralDetailObj.Currency),2),
						"force_sale"          :mktmoney.toMoney(float(CollateralDetailObj.ForceSaleValue), mktmoney.getCurrencyObj(CollateralDetailObj.Currency),2),
						"longitude"	          :Longitude,
						"latitude"  	      :Latitude,
						"url"				  :"/CollateralDetail/?ID="+CollateralDetailObj.ID,
						"type_url" 			  :"Form"
					})
			CollateralDetailDict.update({"collaterals":CollateralDetailList})
			CollateralDetailDict.update(GetUrlDict())
			CollateralData.update({"collateral":CollateralDetailDict})
	if not ApiStatus:
		ApiStatus = StatusCodes.not_found()
		Messages  = ["No collateral detail has been found."]
		CollateralDetailDict.update({"collaterals":CollateralDetailList})
		CollateralDetailDict.update(GetUrlDict())
		CollateralData.update({"collateral":CollateralDetailDict})
	return GetAPIReturnFormat(Header="Find Collateral",Data=CollateralData,RecordID="",Status=ApiStatus,Type="Map",Message=Messages)

@app.route('/Morakot/SearchCustomer', methods=['GET'])
@app.route('/Morakot/API/SearchCustomer/', methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def SearchCustomer():
	DefaultBranch 	= mktuser.getCurrentBranch()
	search 			= request.args.get('q')
	action 			= request.args.get('action') if 'action' in request.args else ""
	NAMES 			= []
	FilterCondition = []
	#check if search text all in space
	if not search.isspace():
		search = search.strip()
		if not search is None:
			if action == "view":
				FilterCondition.append(MKT_CUSTOMER.ID == search)
			else:
				FilterCondition.append(or_(MKT_CUSTOMER.ID.like('%'+search.upper()+'%'),func.upper(MKT_CUSTOMER.FirstNameEn).like('%'+search.upper()+'%'),func.upper(MKT_CUSTOMER.LastNameEn).like('%'+search.upper()+'%')))
			Acc = 	MKT_CUSTOMER.query.filter(*FilterCondition).order_by(MKT_CUSTOMER.ID)
			for row in Acc:
				dic = {"id":row.ID, "text":"%s - %s %s" %(row.ID,row.FirstNameEn,row.LastNameEn)}
				NAMES.append(dic)

	# app.logger.debug(NAMES)
	return jsonify(items = NAMES)

# @app.route('/Morakot/SearchCollateral/', methods=['GET'])
# @app.route('/Morakot/API/SearchCollateral/', methods=['GET'])
# @checkLogOutSession
# @checkLogOutTime
# def SearchCollateral():
# 	DefaultBranch 	= mktuser.getCurrentBranch()
# 	search 			= request.args.get('q')
# 	action 			= request.args.get('action') if 'action' in request.args else ""
# 	NAMES 			= []
# 	FilterCondition = []
# 	#check if search text all in space
# 	if not search.isspace():
# 		search = search.strip()
# 		if not search is None:
# 			if action == "view":
# 				FilterCondition.append(MKT_COLLATERAL_DE.ID == search)
# 				FilterCondition.append(MKT_COLLATERAL_DE.CollateralID == search)
# 			else:
# 				FilterCondition.append(or_(MKT_COLLATERAL_DE.ID.like('%'+search.upper()+'%'),func.upper(MKT_COLLATERAL_DE.CollateralType).like('%'+search.upper()+'%'),func.upper(MKT_COLLATERAL_DE.CollateralID).like('%'+search.upper()+'%')))
# 			Acc = 	MKT_COLLATERAL_DE.query.filter(*FilterCondition).order_by(MKT_COLLATERAL_DE.ID)
# 			for row in Acc:
# 				dic = {"id":row.ID, "text":"%s - %s %s" %(row.ID,row.CollateralType,row.Description)}
# 				NAMES.append(dic)

# 	# app.logger.debug(NAMES)
# 	return jsonify(items = NAMES)

def GetUrlDict():
	DictUrl = {}
	DictUrl.update({
		"url_find_collateral_by_customer"		:"/FindCollateralByCustomer/?ID=",
		"url_search_customer"                   :"/SearchCustomer/?q=",
		"url_search_collateral"					:"/SearchCollateral/?q=",
		"url_find_collateral"					:"/FindCollateral/?ID=",
		"url_filter"							:"/GetAllOfficerCustomerCollateral/",
		"filter_params"							:[
													{"label":"Collateral","value":"Collateral"},
													{"label":"Customer","value":"Customer"}
												]
		})
	return DictUrl