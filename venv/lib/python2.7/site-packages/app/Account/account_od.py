
from account_dd import *

def getAccountProductSetup():
	AccProductMapping = mktsetting.getAppSetting('AccProductMapping')
	Dict = {}
	for a in AccProductMapping.splitlines():
		Mapping = a.split('*')
		Dict.update({Mapping[0]:Mapping[1]})

	return MKT_ACC_PRODUCT.query.get(Dict.get('OverdraftAccount','').split()[0])

def getAccountProduct():
	AccID = ''
	AccProduct = getAccountProductSetup()
	if AccProduct:
		AccID = AccProduct.ID

	return AccID

def loadAccCategory():
	try:

		AccRecord 	= 	getAccountProductSetup()
		Category 	=	""
		if AccRecord:
			Category 	=	AccRecord.CategoryList

		return Category
	except:
		raise

class FRM_ACCOUNT_OD(FRM_ACCOUNT_DD):
	Type 		=	TextField(getLanguage("Type"), default="OD")
	AccProduct 		=	TextField(getLanguage("Account Product"), default=getAccountProduct)
	AccCategory 	=	TextField(getLanguage("Category"), default=loadAccCategory)

	@staticmethod
	def setVisible():
		base = super(FRM_ACCOUNT_OD, FRM_ACCOUNT_OD).setVisible()
		controls_list 	= [	("Type")]
		controls_list.extend(base) if base else controls_list
		return controls_list

	@staticmethod
	def listField():
		Fields = ["ID", "CustomerList", "AccName", "Currency", "AccCategory",
				  "OpenDate","AccStatus" ,"ClosingDate","Balance", "AvailableBal"]

		return Fields, ["ID*LK*OD"]

	