from app.mktcore.imports 		import *
from flask 						import request, url_for, render_template, flash, redirect, session, g
from .. 						import app, db
from sqlalchemy 				import *
from app.mktcore.session 		import *
from decimal 					import *

from app.ConsolBalance.models 	import MKT_CONSOL_BALANCE

import app.tools.mktaccounting 	as mktaccounting
import app.tools.mktmoney 		as mktmoney
import app.tools.user 			as mktuser
import app.tools.mktsetting 	as mktsetting
import app.tools.mktmessage 	as mktmessage
import app.tools.mktreport 		as mktreport
import app.tools.mkttool 		as mkttool

@app.route("/Morakot/ConsolBalance/", methods=['GET'])
@app.route("/Morakot/API/ConsolBalance/", methods=['GET'])
@checkLogOutSession
@checkLogOutTime
def getConsolBalanceDetail():
	try:

		# Block check access right
		ErrorMsg 	= []
		getCheck 	= checkAccess("/Morakot/ConsolBalance/","Search")
		if getCheck != True:
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)

		AccSetting 		= 	mktsetting.getAccSetting()
		Revaluation 	=	AccSetting.Revaluation
		BaseCurrency 	= 	AccSetting.BaseCurrency
		BaseCurrencyObj = 	mktmoney.getCurrencyObj(BaseCurrency)
		AsOf 			= 	mktdate.getBankDate()
		Branch 			= 	request.args.get("ID") if "ID" in request.args else mktuser.getCurrentBranch()
		Currency 		= 	request.args.get("Currency") if "Currency" in request.args else ""
		ShowPrintBy		=   request.args.get("ShowPrintBy") if 'ShowPrintBy' in request.args else "No"
		ShowFCYBalance = 	request.args.get("ShowFCYBalance") if 'ShowFCYBalance' in request.args else "No"
		Rounding 		=   request.args.get("Rounding") if 'Rounding' in request.args else "Y"

		# Check User Access Branch
		CheckBranch = mktuser.checkAccessBrach(Branch)
		if not CheckBranch:
			BackLink = request.referrer
			flash(msg_warning + " You can not access to this %s branch." %Branch)
			return render_template('changebranch.html', BackLink=BackLink)
			
		query 		= MKT_CONSOL_BALANCE.query

		if Branch and Branch.upper() != "ALL":
			ListBranch = Branch.split()
			query = query.filter(MKT_CONSOL_BALANCE.Branch.in_(ListBranch) )
		
		if not Currency:
			if Revaluation == "Y":
				Currency = "ALL"
			else:
				Currency = BaseCurrency

		if Currency and Currency.upper() != "ALL":
			ListCurrency = Currency.split()
			query = query.filter(MKT_CONSOL_BALANCE.Currency.in_(ListCurrency))

		
		
		query = query.order_by(MKT_CONSOL_BALANCE.Branch,MKT_CONSOL_BALANCE.ID)

		ConsolBal = query.all()

		if not ConsolBal:
			flash(msg_warning + " Record not found.")
			render_template("gl/ConsolBalance.html", getTextMsg = mktmessage.getTextMsg)

		return render_template("gl/ConsolBalance.html",
								Branch 				= Branch,
								AsOf 				= AsOf,
								Revaluation 		= Revaluation,
								ShowPrintBy     	= ShowPrintBy,
								PrintByAndDate  	= mktreport.getPrintByAndPrintDate,
								Company  			= mkttool.getCompany(),
								Currency 			= Currency,
								ConsolBal 			= ConsolBal,
								toMoney 			= mktmoney.toMoney,
								formatNumber 		= mktmoney.formatNumber,
								getCurrencyObj 		= mktmoney.getCurrencyObj,
								BaseCurrencyObj 	= BaseCurrencyObj,
								float 				= float,
								Decimal 			= Decimal,
								str 				= str,
								getAccBalanceType 	= mktaccounting.getAccBalanceType,
								getTextMsg 			= mktmessage.getTextMsg,
								VLOOKUP 			= mktreport.VLOOKUP,
								ShowFCYBalance		= ShowFCYBalance,
								Rounding 			= Rounding)

	except:
		raise