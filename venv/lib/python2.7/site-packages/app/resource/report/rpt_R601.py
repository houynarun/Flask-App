from app.tools.mktreport 		import *

from app.AccEntry.models 		import MKT_ACC_ENTRY
from app.LoanContract.models 	import MKT_LOAN_CONTRACT
from app.Customer.models 		import MKT_CUSTOMER
from app.Officer.models			import MKT_OFFICER
from app.AccProduct.models 		import MKT_ACC_PRODUCT
from app.Transaction.models 	import MKT_TRANSACTION
from sqlalchemy 				import or_, func

import app.tools.mktsetting 	as mktsetting
import app.tools.mktparam 		as mktparam
import app.tools.mktdate 		as mktdate

def getReport():
	# Consolidated Area Report by Branch
	BankDate			=	mktdate.getBankDate()
	DepTransaction 		=	mktparam.getTellerParam().DepTransaction
	ReverseTransaction	= 	mktparam.getTellerParam().RevTransaction
	CollectionTran 		=	mktsetting.getAccSetting().LoanCollectionTran
	BankTransaction 	= 	mktsetting.getAppSetting('BankDepositTran')
	ChequeTransaction 	= 	mktsetting.getAppSetting('ChequeDepositTran')
	AccProductObj 		= 	MKT_ACC_PRODUCT.query.get('101')
	if AccProductObj:
		DrawdownAccount = AccProductObj.CategoryList

	AccEntryObj 	= 	db.session.query(	MKT_ACC_ENTRY.ID,
											MKT_ACC_ENTRY.Account,
											MKT_ACC_ENTRY.Branch,
											MKT_ACC_ENTRY.Currency,
											MKT_ACC_ENTRY.TransactionDate,
											MKT_ACC_ENTRY.Inputter,
											MKT_ACC_ENTRY.Amount,
											MKT_ACC_ENTRY.Reference,
											MKT_ACC_ENTRY.Note,
											MKT_LOAN_CONTRACT.ID.label('LoanID'),
											MKT_LOAN_CONTRACT.Account,
											MKT_LOAN_CONTRACT.ContractCustomerID,
											MKT_LOAN_CONTRACT.ContractOfficerID,
											MKT_CUSTOMER.FirstNameEn,
											MKT_CUSTOMER.LastNameEn,
											MKT_OFFICER.FirstName,
											MKT_OFFICER.LastName,
											MKT_TRANSACTION.Description,
											).\
										join(MKT_LOAN_CONTRACT, MKT_LOAN_CONTRACT.Account == MKT_ACC_ENTRY.Account).\
										join(MKT_CUSTOMER, MKT_LOAN_CONTRACT.ContractCustomerID == MKT_CUSTOMER.ID).\
										join(MKT_OFFICER, MKT_LOAN_CONTRACT.ContractOfficerID == MKT_OFFICER.ID).\
										join(MKT_TRANSACTION, MKT_ACC_ENTRY.Transaction == MKT_TRANSACTION.ID).\
										filter(	MKT_ACC_ENTRY.Category == DrawdownAccount,
												or_(MKT_ACC_ENTRY.DebitCredit == 'Cr', MKT_ACC_ENTRY.Transaction == '25'),
												MKT_ACC_ENTRY.Module != 'LC',
												).\
										filter(MKT_ACC_ENTRY.TransactionDate == str(BankDate)).\
										order_by(MKT_LOAN_CONTRACT.ContractCustomerID.asc(),
												 MKT_ACC_ENTRY.ID.asc(),
												 MKT_ACC_ENTRY.TransactionDate.asc())
	return AccEntryObj