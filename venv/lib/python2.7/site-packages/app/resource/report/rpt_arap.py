
## Temp Add Core
from sqlalchemy                    			import func
from app.ARAP.Payable.models 				import *
from app.ARAP.Receivable.models 	import *
import app.tools.user 						as mktuser
import app.tools.mktmoney 					as mktmoney
def getPayableByVendor(args):
	""" >>>getPayableByVendor(Vendor,Currency)"""
	try:

		Vendor 		= args[0]
		Currency 	= args[1]
		OutstandingAmount = '0'
		QueryObj = db.session.query(func.sum(MKT_PAYABLE.OutstandingAmount).label('OutstandingAmount')).\
											filter(MKT_PAYABLE.Vendor==Vendor).\
											filter(MKT_PAYABLE.Branch==mktuser.getCurrentBranch()).\
											filter(MKT_PAYABLE.Currency==Currency).first()
											
		if QueryObj:
			OutstandingAmount = float(QueryObj.OutstandingAmount)
			OutstandingAmount = mktmoney.toMoney(OutstandingAmount,mktmoney.getCurrencyObj(Currency))

		return OutstandingAmount
	except Exception as e:
		print '%s'%e
		return '0'

def getReceivableByCustomer(args):
	""" >>>getPayableByVendor(Customer,Currency)"""
	try:

		Customer	= args[0]
		Currency 	= args[1]
		OutstandingAmount = '0'
		QueryObj = db.session.query(func.sum(MKT_RECEIVABLE.OutstandingAmount).label('OutstandingAmount')).\
											filter(MKT_RECEIVABLE.Customer==Customer).\
											filter(MKT_RECEIVABLE.Branch==mktuser.getCurrentBranch()).\
											filter(MKT_RECEIVABLE.Currency==Currency).first()
											
		if QueryObj:
			OutstandingAmount = float(QueryObj.OutstandingAmount)
			OutstandingAmount = mktmoney.toMoney(OutstandingAmount,mktmoney.getCurrencyObj(Currency))

		return OutstandingAmount
	except Exception as e:
		print '%s'%e
		return '0'