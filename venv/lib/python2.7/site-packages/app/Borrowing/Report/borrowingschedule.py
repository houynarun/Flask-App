from flask 										import request, url_for, render_template,flash,redirect
from app.mktcore.wtfimports 					import *
from app.mktcore.session 						import *
from app.Borrowing.BorrowingContract.models 	import *
from app.Borrowing.Lender.models 				import *
from app.Borrowing.BorrowingSchedule.models 	import *
from sqlalchemy 								import or_
import app.tools.mkttool 							as mkttool
import app.tools.mktmoney 							as mktmoney



@app.route("/Morakot/ViewBorrowingSchedule", methods=["GET", "POST"])
@checkLogOutSession
@checkLogOutTime
def viewBorrowingSchedule():
	Resource = request.args.get('Resource') if 'Resource' in request.args else 'AUTH'
	BorrowingID = str(request.args.get('ID')) if 'ID' in request.args else ''
	FinalSchedule = []
	dic = {}
	Table = 'MKT_BORROWING_SCHEDULE_INAU' if Resource == 'INAU' else 'MKT_BORROWING_SCHEDULE'
	Header = ['No','CollectionDate','Principal','Interest','Charge','TotalPayment','Balance']
	
	Borrowing = eval(''.join(Table.split('_SCHEDULE'))).query.get(BorrowingID)
	BorrowingSchedule = sorted([row.__dict__ for row in eval(Table).query.filter(eval(Table).BorrowingID==BorrowingID).all()], key=lambda k : k['InstallmentNo'])
	for row in BorrowingSchedule:
		dic = row.copy()
		dic.update({"TotalPayment": float(row['Principal']) + float(row['Interest']) + float(row['Charge'])})
		FinalSchedule.append(dic)
		dic = {}
	
	return render_template("schedule/viewborrowingschedule.html",
							BorrowingObj=Borrowing,
							ScheduleObj=FinalSchedule,
							toMoney=mktmoney.toMoney,
							getCurrencyObj=mktmoney.getCurrencyObj,
							float=float,
							Resource=Resource,
							HeaderTable=Header,
							ID=BorrowingID,
							)


@app.route("/Morakot/BorrowingSchedule/Search/<Resource>", methods=["GET", "POST"])
@checkLogOutSession
@checkLogOutTime
def searchBorrowingSchedule(Resource):	
	items = []
	
	Resource = Resource
	Q = "%" + request.args.get('q') + "%" if 'q' in request.args else ''
	Table = 'MKT_BORROWING_INAU' if Resource == 'INAU' else 'MKT_BORROWING'
	
	Borrowing = eval(Table).query.join(MKT_LENDER, MKT_LENDER.ID==eval(Table).Lender).\
				filter(or_(eval(Table).ID.ilike(Q), MKT_LENDER.CompanyFullName.ilike(Q))).\
				all()
				
	if Borrowing:
		for row in Borrowing:
			Lender = MKT_LENDER.query.get(str(row.Lender)) if Borrowing else ''
			dic = {"id":str(row.ID), "text":str(row.ID) + " - " + str(Lender.CompanyFullName)}
			items.append(dic)

	
	return jsonify(items=items)
