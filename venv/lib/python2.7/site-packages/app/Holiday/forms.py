from app.mktcore.wtfimports import *
from .models import *
import time
import app.tools.mktdate  as mktdate
#Function
def isDateofMonth31(name_month,value):
    List31day = ['01','02','03','04','05','06','07','08','09','10',
                 '11','12','13','14','15','16','17','18','19','20',
                 '21','22','23','24','25','26','27','28','29','30','31']
    ArryList=value.split()
    WrongDate=''
    for item in ArryList:
        if item not in List31day :
            WrongDate+=' %s' % item
    if WrongDate!='':
        raise ValidationError("Date %s is not in %s."% (WrongDate,name_month))

def isDateofMonth30(name_month,value):
    List30day = ['01','02','03','04','05','06','07','08','09','10',
                 '11','12','13','14','15','16','17','18','19','20',
                 '21','22','23','24','25','26','27','28','29','30']
    
    ArryList=value.split()
    WrongDate=''
    
    for item in ArryList:
        if item not in List30day :
            WrongDate+=' %s' % item
    if WrongDate!='':
        raise ValidationError("Date %s is not in %s."% (WrongDate,name_month))

def isMonthFeb(value):
    
    year=int(request.form["ID"])

    List28day = ['01','02','03','04','05','06','07','08','09','10',
                 '11','12','13','14','15','16','17','18','19','20',
                 '21','22','23','24','25','26','27','28']

    List29day = ['01','02','03','04','05','06','07','08','09','10',
                 '11','12','13','14','15','16','17','18','19','20',
                 '21','22','23','24','25','26','27','28','29']

    Leap=year%4
    ArryFeb=value.split()
    WrongDate=''
    
    if Leap==0: # year is leap 1-29
        for item in ArryFeb:
            if item not in List29day:
                WrongDate+=' %s' % item
        
        if WrongDate!='':
            raise ValidationError("Date %s is not in February" % WrongDate)
    else: #year is non leap 1-28
        for item in ArryFeb:
            if item not in List28day:
                WrongDate+=' %s' % item
        
        if WrongDate!='':
            raise ValidationError("Date %s is not in February" % WrongDate)

def checkNextSystemDate(Month='',Date=''):
    if Date:
        Year = request.form["ID"]
        Date = Date.split()
        for itemDate in Date:
            DefineNextSystemDate = '%s-%s-%s'%(Year,Month,itemDate)
            NextSystemDate = mktdate.getBankDateObj().NextSystemDate
            if DefineNextSystemDate == NextSystemDate:
                raise ValidationError('You cannot define date:%s, Because %s is next system date.' % (DefineNextSystemDate,NextSystemDate))

def checkNextMonthEnd(Month='',Date=''):
    if Date:
        Year = request.form["ID"]
        Date = Date.split()
        for itemDate in Date:
            DefineNextMonthEnd = '%s-%s-%s'%(Year,Month,itemDate)
            NextMonthEnd = mktdate.getBankDateObj().NextMonthEnd
            if DefineNextMonthEnd == NextMonthEnd:
                raise ValidationError('You cannot define date: %s, Because %s is next month end.' % (DefineNextMonthEnd,NextMonthEnd))

def checkNextYearEnd(Month='',Date=''):
    if Date:
        Year = request.form["ID"]
        Date = Date.split()
        for itemDate in Date:
            DefineNextYearEnd = '%s-%s-%s'%(Year,Month,itemDate)
            NextYearEnd = mktdate.getBankDateObj().NextYearEnd
            if DefineNextYearEnd == NextYearEnd:
                raise ValidationError('You cannot define date: %s, Because %s is next year end.' % (DefineNextYearEnd,NextYearEnd))

def checkNextWeekend(Month='',Date=''):
    if Date:
        Year = request.form["ID"]
        Date = Date.split()
        for itemDate in Date:
            DefineNextWeekend = '%s-%s-%s'%(Year,Month,itemDate)
            NextWeekend = mktdate.getBankDateObj().NextWeekend
            if DefineNextWeekend == NextWeekend:
                raise ValidationError('You cannot define date: %s, Because %s is next weekend.' % (DefineNextWeekend,NextWeekend))

def checkSystemDate(Month='',Date=''):
    if Date:
        Year = request.form["ID"]
        Date = Date.split()
        for itemDate in Date:
            DefineSystemDate = '%s-%s-%s'%(Year,Month,itemDate)
            SystemDate = mktdate.getBankDateObj().SystemDate
            if DefineSystemDate == SystemDate:
                raise ValidationError('You cannot define date: %s, Because %s is current system date.' % (DefineSystemDate,SystemDate))           

def validationDate(Month='',Date=''):

    #checkSystemDate(Month,Date)

    #checkNextSystemDate(Month,Date)

    #checkNextWeekend(Month,Date)

    #checkNextMonthEnd(Month,Date)

    #checkNextYearEnd(Month,Date)
    pass


#Class Holiday form
class FRM_HOLIDAY(exform):

    January=TextField("January")
    February=TextField("February")
    March=TextField("March")
    April=TextField("April")
    May=TextField("May")
    June=TextField("June")
    July=TextField("July")
    August=TextField("August")
    September=TextField("September")
    October=TextField("October")
    November=TextField("November")
    December=TextField("December")

    def validate_January(form,field):

        isDateofMonth31('January',form.January.data)

        validationDate('01',form.January.data)
        
    def validate_February(form,field):

        isMonthFeb(form.February.data)

        validationDate('02',form.February.data)
   
    def validate_March(form,field):

        isDateofMonth31('March',form.March.data)

        validationDate('03',form.March.data)

    def validate_April(form,field):

        isDateofMonth30('April',form.April.data)

        validationDate('04',form.April.data)

    def validate_May(form,field):

        isDateofMonth31('May',form.May.data)

        validationDate('05',form.May.data)

    def validate_June(form,field):

        isDateofMonth30('June',form.June.data)

        validationDate('06',form.June.data)

    def validate_July(form,field):

        isDateofMonth31('July',form.July.data)

        validationDate('07',form.July.data)

    def validate_August(form,field):

        isDateofMonth31('August',form.August.data)

        validationDate('08',form.August.data)

    def validate_September(form,field):

        isDateofMonth30('September',form.September.data)

        validationDate('09',form.September.data)

    def validate_October(form,field):

        isDateofMonth31('October',form.October.data)

        validationDate('10',form.October.data)

    def validate_November(form,field):

        isDateofMonth30('November',form.November.data)

        validationDate('11',form.November.data)

    def validate_December(form,field):

        isDateofMonth31('December',form.December.data)

        validationDate('12',form.December.data)