from app.mktcore.imports 	import *
from .embedding 			import *
from .embeddingdetail 		import *
from app.tools.mktroute 	import *
from .models 				import *
from flask 					import render_template,flash
from app.Embedding.utils 	import *
import app.tools.mktsetting as mktsetting
import urllib2
import os
registerCRUD(admin, '/Embedding', 'Embedding',FRM_EMBEDDING, [MKT_EMBEDDING])
registerCRUD(admin, '/EmbeddingDetail', 'EmbeddingDetail',FRM_EMBEDDING_DETAIL, [MKT_EMBEDDING_DE])

@app.route("/Morakot/Embedded/<string:AppName>/<string:getID>/")
@checkLogOutSession
@checkLogOutTime
def embeddingModule(AppName='',getID=''):
	try:
		ErrorMsg 	= []
		CheckFile 	= ""
		url 		= ""
		getCheck 	= checkAccess("/Morakot/Embedded/%s/%s/"%(AppName,getID),"Search")
		if getCheck != True: 
			ErrorMsg.append(msg_error+msg_permission)
			return render_template("permission.html",ErrorMsg=ErrorMsg)

		Obj 	 	= EmbeddedBase(AppName,getID)
		Resource 	= Obj.Resource.split('.') if Obj.Resource else ""
		FileName 	= Obj.Resource.split('.')[-2] if Obj.Resource else ""
		url 		= ""
		if Resource:
			Folder 		= Resource[0:-2]
			for row in Folder:
				url += row+"/"
			CheckFile 	= os.path.isfile(("%s"+"%s"+".py")%(url,FileName))
			print CheckFile
			if CheckFile:
				Obj 	= MetabaseExtend(AppName,getID)
		url = Obj.Process()
		if not url[0]:
			flash(msg_warning+"Record not found.")
			return render_template("embedding/master.html")
		checkUrl = Obj.checkServiceWeb()
		if checkUrl[0]:
			if url[0]:
				return render_template('embedding/master.html',url = url[0],
																EmbeddedType= url[1])
		else:
			msg 	= 	"Please check %s url or connection"%AppName
			flash(msg_error+"%s , %s"%(checkUrl[1].__dict__.get('reason'),msg))
			return render_template("embedding/master.html")
	except Exception as e:
		error = e
		return render_template('error500.html',error=error)
